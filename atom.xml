<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Barryの小站</title>
  
  
  <link href="https://www.smitten.top/atom.xml" rel="self"/>
  
  <link href="https://www.smitten.top/"/>
  <updated>2023-04-07T11:49:55.029Z</updated>
  <id>https://www.smitten.top/</id>
  
  <author>
    <name>itsBarry</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Obsidian 汇总统计</title>
    <link href="https://www.smitten.top/posts/f8c8.html"/>
    <id>https://www.smitten.top/posts/f8c8.html</id>
    <published>2023-04-07T11:49:55.029Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>%% Begin Waypoint %%</p><ul><li><strong>[[已发布文章]]</strong><ul><li>[[宝藏句子收藏区]]</li><li>[[步入Linux的现代方法]]</li><li>[[共勉]]</li><li>[[关于Memos]]</li><li>[[论Linux to go]]</li><li>[[前端300+实用工具分享【转载】]]</li><li>[[三分钟让你的Web网页变优雅]]</li><li>[[使Windows  Terminal变得更易用]]</li><li>[[所有过往，皆为序章]]</li><li>[[我是如何解决 jsDelivr 在国内被污染的？]]</li><li>[[我要我们在一起]]</li><li>[[五分钟搭建个人资源库]]</li><li>[[五分钟搭建一个随机图片API]]</li><li>[[优雅的通过PC接管移动设备音频]]</li><li>[[整理一些常用的脚本（持续更新中）]]</li><li>[[转载一篇知乎上的文章：抖音是如何毁掉我们的？]]</li><li>[[hexo博客工作流CI（一键部署的快乐）]]</li><li>[[Hi,Regex]]</li><li>[[Keep running]]</li><li>[[People Die, but Long Live GitHub]]</li><li>[[TeamSpeak服务器搭建——基于Docker-Compose]]</li><li>[[VPS 基础Docker环境配置]]</li></ul></li></ul><p>%% End Waypoint %%</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="moc" scheme="https://www.smitten.top/tags/moc/"/>
    
  </entry>
  
  <entry>
    <title>我是如何解决 jsDelivr 在国内被污染的？</title>
    <link href="https://www.smitten.top/posts/jsDelivr.html"/>
    <id>https://www.smitten.top/posts/jsDelivr.html</id>
    <published>2023-04-06T12:20:14.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>早在2021年12月20日，jsDelivr 在中国大陆地区的 ICP 备案被吊销，且随后的服务在中国大陆地区极不稳定，严重拖慢了网页的速度。</p><p>由于 jsDelivr 被封锁，导致了原来使用 jsDelivr 的 CDN 服务的网页速度缓慢，多数功能不正常。要解决这个问题，要么更换 CDN，要么给 jsDelivr 套上一层反向代理。这里博主采用了 Cloudflare Worker。</p><h1 id="新建-Worker"><a href="#新建-Worker" class="headerlink" title="新建 Worker"></a>新建 Worker</h1><p>登录到 Cloudflare 控制台，点击侧栏的 Workers，新建服务。</p><p><img src="https://cdn.yct.ee/gh/BarryYangi/ObsStaticData@main/obsidian/16807536030001yhgo9.png" alt="gh"></p><p>在创建页面填入你自己的服务名称。<br><img src="https://cdn.yct.ee/gh/BarryYangi/ObsStaticData@main/obsidian/1680753650000qwb9pf.png" alt="gh"></p><p>创建后将转入资源页面。<br><img src="https://cdn.yct.ee/gh/BarryYangi/ObsStaticData@main/obsidian/1680753684000wpls1p.png" alt="gh"></p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>点击“快速编辑”，在代码框内复制以下代码：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 替换成你想镜像的站点</span><span class="token keyword">const</span> upstream <span class="token operator">=</span> <span class="token string">'cdn.jsdelivr.net'</span><span class="token comment">// 如果那个站点有专门的移动适配站点，否则保持和上面一致</span><span class="token keyword">const</span> upstream_mobile <span class="token operator">=</span> <span class="token string">'cdn.jsdelivr.net'</span><span class="token keyword">const</span> blocked_region <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'KP'</span><span class="token punctuation">,</span><span class="token string">'RU'</span><span class="token punctuation">]</span><span class="token keyword">const</span> blocked_ip_address <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">]</span><span class="token keyword">const</span> replace_dict <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'$upstream'</span><span class="token operator">:</span> <span class="token string">'$custom_domain'</span><span class="token punctuation">,</span>    <span class="token string">'//cdn.jsdelivr.net'</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">&#125;</span><span class="token comment">//以下内容都不用动</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'fetch'</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    event<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span><span class="token function">fetchAndApply</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchAndApply</span><span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> region <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'cf-ipcountry'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> ip_address <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'cf-connecting-ip'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> user_agent <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'user-agent'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> url_host <span class="token operator">=</span> url<span class="token punctuation">.</span>host<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span>protocol <span class="token operator">==</span> <span class="token string">'http:'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        url<span class="token punctuation">.</span>protocol <span class="token operator">=</span> <span class="token string">'https:'</span>        response <span class="token operator">=</span> Response<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> response<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">device_status</span><span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        upstream_domain <span class="token operator">=</span> upstream    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        upstream_domain <span class="token operator">=</span> upstream_mobile    <span class="token punctuation">&#125;</span>    url<span class="token punctuation">.</span>host <span class="token operator">=</span> upstream_domain<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>blocked_region<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>region<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token string">'Access denied: WorkersProxy is not available in your region yet.'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            status<span class="token operator">:</span> <span class="token number">403</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>blocked_ip_address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>ip_address<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token string">'Access denied: Your IP address is blocked by WorkersProxy.'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            status<span class="token operator">:</span> <span class="token number">403</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> method <span class="token operator">=</span> request<span class="token punctuation">.</span>method<span class="token punctuation">;</span>        <span class="token keyword">let</span> request_headers <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">;</span>        <span class="token keyword">let</span> new_request_headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span>request_headers<span class="token punctuation">)</span><span class="token punctuation">;</span>        new_request_headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'Host'</span><span class="token punctuation">,</span> upstream_domain<span class="token punctuation">)</span><span class="token punctuation">;</span>        new_request_headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'Referer'</span><span class="token punctuation">,</span> url<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> original_response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span>href<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            method<span class="token operator">:</span> method<span class="token punctuation">,</span>            headers<span class="token operator">:</span> new_request_headers        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> original_response_clone <span class="token operator">=</span> original_response<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> original_text <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> response_headers <span class="token operator">=</span> original_response<span class="token punctuation">.</span>headers<span class="token punctuation">;</span>        <span class="token keyword">let</span> new_response_headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span>response_headers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> status <span class="token operator">=</span> original_response<span class="token punctuation">.</span>status<span class="token punctuation">;</span>        new_response_headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'access-control-allow-origin'</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        new_response_headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'access-control-allow-credentials'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        new_response_headers<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'content-security-policy'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        new_response_headers<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'content-security-policy-report-only'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        new_response_headers<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'clear-site-data'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> content_type <span class="token operator">=</span> new_response_headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'content-type'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>content_type<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'text/html'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> content_type<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'UTF-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            original_text <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">replace_response_text</span><span class="token punctuation">(</span>original_response_clone<span class="token punctuation">,</span> upstream_domain<span class="token punctuation">,</span> url_host<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            original_text <span class="token operator">=</span> original_response_clone<span class="token punctuation">.</span>body        <span class="token punctuation">&#125;</span>        response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>original_text<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            status<span class="token punctuation">,</span>            headers<span class="token operator">:</span> new_response_headers        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> response<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">replace_response_text</span><span class="token punctuation">(</span><span class="token parameter">response<span class="token punctuation">,</span> upstream_domain<span class="token punctuation">,</span> host_name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> replace_dict<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        j <span class="token operator">=</span> replace_dict<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token string">'$upstream'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            i <span class="token operator">=</span> upstream_domain        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token string">'$custom_domain'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            i <span class="token operator">=</span> host_name        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token string">'$upstream'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            j <span class="token operator">=</span> upstream_domain        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token string">'$custom_domain'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            j <span class="token operator">=</span> host_name        <span class="token punctuation">&#125;</span>        <span class="token keyword">let</span> re <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">)</span>        text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>re<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> text<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">device_status</span> <span class="token punctuation">(</span><span class="token parameter">user_agent_info</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> agents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Android"</span><span class="token punctuation">,</span> <span class="token string">"iPhone"</span><span class="token punctuation">,</span> <span class="token string">"SymbianOS"</span><span class="token punctuation">,</span> <span class="token string">"Windows Phone"</span><span class="token punctuation">,</span> <span class="token string">"iPad"</span><span class="token punctuation">,</span> <span class="token string">"iPod"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> v <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> v <span class="token operator">&lt;</span> agents<span class="token punctuation">.</span>length<span class="token punctuation">;</span> v<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>user_agent_info<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>agents<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> flag<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>保存并部署后，你的反向代理就生效了。</p><h1 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h1><p>但是不幸的是在国内 <code>.workers.dev</code> 后缀的域名现在也被污染了，所以你需要自己绑定一个域名在国内才能正常访问。<br>先购买一个域名，然后将其 DNS 服务商转到 cloudflare。随后来到我们刚刚新建的 Workers 管理页面点击触发器-&gt;自定义域-&gt;添加自定义域，输入你想绑定的域名即可。</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>使用时，将原来的 <code>cdn.jsdelivr.net</code> 域名替换为您的 Worker 或者博主提供的 Worker 就可以了。如：<br><pre class="language-javascript" data-language="javascript"><code class="language-javascript">https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>BarryYangi<span class="token operator">/</span>ObsStaticData<span class="token operator">/</span>obsidian<span class="token operator">/</span><span class="token number">168069442100071</span>iy8i<span class="token punctuation">.</span>png</code></pre><br>将<code>cdn.jsdelivr.net</code>替换为我们的Worker：<br><pre class="language-javascript" data-language="javascript"><code class="language-javascript">https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>jsdelivr<span class="token operator">-</span>cdn<span class="token punctuation">.</span><span class="token number">2059484047.</span>workers<span class="token punctuation">.</span>dev<span class="token operator">/</span>gh<span class="token operator">/</span>BarryYangi<span class="token operator">/</span>ObsStaticData<span class="token operator">/</span>obsidian<span class="token operator">/</span><span class="token number">168069442100071</span>iy8i<span class="token punctuation">.</span>png</code></pre></p><p>这样，就能保证较为稳定的使用 jsDelivr 的服务了。</p><p>Just enjoy it.</p>]]></content>
    
    
    <summary type="html">使用Cloudflare Worker为jsDelivr搭建反向代理服务</summary>
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Cloudflare" scheme="https://www.smitten.top/tags/Cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>前端300+实用工具分享【转载】</title>
    <link href="https://www.smitten.top/posts/300Tools.html"/>
    <id>https://www.smitten.top/posts/300Tools.html</id>
    <published>2023-03-27T20:49:03.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>本文内容来自 B 站 UP 主 <a href="https://space.bilibili.com/165659472">@技术胖</a>的视频：<a href="https://www.bilibili.com/video/BV1ke4y1v7Xd/">前端老司机 300+实用工具分享</a> 若造成侵权请联系我进行删除。</p><h2 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h2><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul><li>Underscore.js<br>一套完善的函数式编程的接口，更方便地在JavaScript中实现函数式编程<br><a href="https://underscorejs.org/">https://underscorejs.org/</a></li><li>fastclick<br>用于消除物理点击和click移动浏览器上事件触发之间的 300 毫秒延迟<br><a href="https://github.com/ftlabs/fastclick">https://github.com/ftlabs/fastclick</a></li><li>Lodash<br>一致性、模块化、高性能的 JavaScript 实用工具库<br><a href="https://lodash.com/">https://lodash.com/</a></li><li>crypto-js<br>加密标准的 JavaScript 库。<br><a href="https://github.com/brix/crypto-js">https://github.com/brix/crypto-js</a></li><li>zxcvbn<br>JavaScript密码强度估算库<br><a href="https://github.com/dropbox/zxcvbn">https://github.com/dropbox/zxcvbn</a></li><li>zxcvbn-ts<br>支持Typescript的密码强度估算库<br><a href="https://github.com/zxcvbn-ts/zxcvbn">https://github.com/zxcvbn-ts/zxcvbn</a></li><li>clipboard.js<br>将文本复制到剪贴板的轻量级JS 库<br><a href="https://clipboardjs.com/">https://clipboardjs.com/</a></li><li>tesseract.js<br>Javascript的OCR引擎，在浏览器离线识别图片中的文字<br><a href="https://tesseract.projectnaptha.com/">https://tesseract.projectnaptha.com/</a></li><li>number-precision<br>小而快的库，用于精确地进行加法、减法、乘法和除法运算<br><a href="https://github.com/nefe/number-precision">https://github.com/nefe/number-precision</a></li><li>fingerprintjs<br>具有高准确度和稳定性的浏览器指纹库<br><a href="https://fingerprint.com/">https://fingerprint.com/</a></li><li>ViteShot<br>基于Vite的快速简单的截图工具。<br><a href="https://viteshot.com/">https://viteshot.com/</a></li><li>Valine<br>快速、简洁且高效的无后端评论系统<br><a href="https://valine.js.org/">https://valine.js.org/</a></li><li>cnpm<br>淘宝提供的一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步<br><a href="https://npmmirror.com/">https://npmmirror.com/</a></li><li>yarn<br>快速、可靠和安全的依赖管理<br><a href="https://yarnpkg.com/">https://yarnpkg.com/</a></li><li>responsively-app<br>一种改进的 Web 浏览器，有助于响应式 Web 开发。Web 开发人员必须拥有开发工具<br><a href="https://responsively.app/">https://responsively.app/</a></li><li>javascript-obfuscator<br>功能强大的免费 JavaScript 混淆器，包含多种功能，可为源代码提供保护<br><a href="https://obfuscator.io/">https://obfuscator.io/</a></li><li>Nano ID<br>小巧的、安全的、URL 友好的、独特的 JavaScript 字符串 唯一 ID 生成器<br><a href="https://zelark.github.io/nano-id-cc/">https://zelark.github.io/nano-id-cc/</a></li><li>spy-debugger<br>一站式页面调试、抓包工具。远程调试任何手机浏览器页面，任何手机移动端webview（如：微信，HybridApp等）。支持HTTP/HTTPS，无需USB连接设备<br><a href="https://responsively.app/">https://responsively.app/</a></li><li>fuite<br>用于查找 Web 应用程序中的内存泄漏的工具<br><a href="https://github.com/nolanlawson/fuite">https://github.com/nolanlawson/fuite</a></li><li>qs<br>查询字符串解析和字符串化库<br><a href="https://github.com/ljharb/qs">https://github.com/ljharb/qs</a></li><li>js-cookie<br>用于处理 cookie 的简单、轻量级 JavaScript API<br><a href="https://github.com/js-cookie/js-cookie">https://github.com/js-cookie/js-cookie</a></li><li>tinymce<br>排名第一的可定制、可扩展和灵活的富文本编辑器<br><a href="https://www.tiny.cloud/">https://www.tiny.cloud/</a></li><li>html2canvas<br>允许在用户浏览器上对网页或其部分进行“截图”<br><a href="https://html2canvas.hertzen.com/">https://html2canvas.hertzen.com/</a></li><li>shepherd<br>引导用户浏览您的应用<br><a href="https://shepherdjs.dev/">https://shepherdjs.dev/</a></li><li>tinykeys<br>极小的键盘事件监听库<br><a href="https://jamiebuilds.github.io/tinykeys/">https://jamiebuilds.github.io/tinykeys/</a></li><li>ag-grid<br>用于构建企业应用程序的最佳 JavaScript 数据表<br><a href="https://www.ag-grid.com/">https://www.ag-grid.com/</a></li><li>tui.calendar<br>功能齐全的 JavaScript 日程表<br><a href="https://ui.toast.com/tui-calendar">https://ui.toast.com/tui-calendar</a></li><li>screenfull<br>用于跨浏览器使用 JavaScript Fullscreen API 的简单包装器<br><a href="https://sindresorhus.com/screenfull/">https://sindresorhus.com/screenfull/</a></li><li>Fuse.js<br>JavaScript 中的轻量级模糊搜索<br><a href="https://fusejs.io/">https://fusejs.io/</a></li><li>i18next<br>用于浏览器或任何其他 javascript 环境（例如 Node.js、Deno）的国际化框架<br><a href="https://www.i18next.com/">https://www.i18next.com/</a></li><li>JsBarcode<br>适用于 Web 和 Node.js 的易于使用但功能强大的条形码生成器<br><a href="https://lindell.me/JsBarcode/">https://lindell.me/JsBarcode/</a></li><li>path-to-regexp<br>将 <code>/user/:name</code> 等路径字符串转换为正则表达式<br><a href="https://github.com/pillarjs/path-to-regexp">https://github.com/pillarjs/path-to-regexp</a></li><li>await-to-js<br>异步等待包装器，无需 try-catch 即可轻松处理错误<br><a href="https://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/">https://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/</a></li><li>md5<br>用 MD5 散列消息的 JavaScript 函数<br><a href="https://github.com/pvorb/node-md5">https://github.com/pvorb/node-md5</a></li><li>mitt.js<br>它足够小，仅有200bytes，其次支持全部事件的监听和批量移除，替代EventBus<br><a href="https://npm.im/mitt">https://npm.im/mitt</a></li><li>js-spark-md5<br>MD5 算法的快速 md5 实现<br><a href="https://github.com/satazor/js-spark-md5">https://github.com/satazor/js-spark-md5</a></li><li>nano<br>小型（130 字节）、安全、URL 友好、唯一的 JavaScript 字符串 ID 生成器<br><a href="https://zelark.github.io/nano-id-cc/">https://zelark.github.io/nano-id-cc/</a></li><li>jsPDF<br>用 JavaScript 生成 PDF<br><a href="https://parall.ax/products/jspdf">https://parall.ax/products/jspdf</a> </li><li>ua-parser-js<br>从User-Agen中检测浏览器、引擎、操作系统、CPU 和设备类型/型号，占用空间相对较小（压缩后约 17KB，压缩后约 6KB），支持浏览器和 node.js 环境<br><a href="http://faisalman.github.io/ua-parser-js/">http://faisalman.github.io/ua-parser-js/</a></li><li>togetherjs<br>网站添加实时协作功能的JavaScript库，两个人可以在同一页面上进行交互，查看彼此的光标、编辑并一起浏览网站<br><a href="https://togetherjs.com/">https://togetherjs.com/</a></li><li>Clusterize.js<br>开源的长列表渲染库，轻量级的原生大数据量展示<br><a href="https://clusterize.js.org/">https://clusterize.js.org/</a></li><li>crypto-js-wasm<br>加密标准的 javascript 库，比 crypto-js快16 倍<br><a href="https://github.com/originjs/crypto-js-wasm">https://github.com/originjs/crypto-js-wasm</a></li><li>pdfkit<br>用于 Node 和浏览器的 JavaScript PDF 生成库<br><a href="http://pdfkit.org/">http://pdfkit.org/</a></li><li>zx<br>使用js编写更便捷shell脚本<br><a href="https://www.npmjs.com/package/zx">https://www.npmjs.com/package/zx</a></li><li>NProgress.js<br>适用于应用程序的进度条，受 Google、YouTube 和 Medium 的启发<br><a href="https://ricostacruz.com/nprogress/">https://ricostacruz.com/nprogress/</a><h3 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h3></li><li>highlight.js<br>JavaScript 语法高亮器，具有语言自动检测和零依赖项<br><a href="https://highlightjs.org/">https://highlightjs.org/</a></li><li>Drawflow<br>创建简单的流程库<br><a href="https://jerosoler.github.io/Drawflow/">https://jerosoler.github.io/Drawflow/</a></li><li>tui.image-editor<br>HTML5 Canvas 的全功能图像编辑器。它易于使用并提供强大的过滤器<br><a href="https://ui.toast.com/tui-image-editor">https://ui.toast.com/tui-image-editor</a></li><li>viewerjs<br>JavaScript 图像查看器<br><a href="https://fengyuanchen.github.io/viewerjs/">https://fengyuanchen.github.io/viewerjs/</a></li><li>prism.js<br>轻量级、健壮、优雅的语法高亮库<br><a href="https://prismjs.com/">https://prismjs.com/</a></li><li>fabric.js<br>功能强大且简单的 Canvas库，轻松处理 HTML5 画布元素。是画布元素之上的交互式对象模型，也是一个SVG-to-canvas 解析器<br><a href="http://fabricjs.com/">http://fabricjs.com/</a></li><li>fullPage.js<br>用于创建全屏滚动网站（也称为单页网站或一页网站），并在该网站的各个部分内添加横向滑块<br><a href="https://alvarotrigo.com/fullPage/">https://alvarotrigo.com/fullPage/</a></li><li>opentype.js<br>OpenType 和 TrueType 字体解析器和编写器。它允许您从浏览器或 node.js访问文本的字母形式<br><a href="https://opentype.js.org/">https://opentype.js.org/</a></li><li>icones.js<br>具有即时搜索功能的图标资源管理器，由 Iconify 提供支持<br><a href="https://icones.js.org/">https://icones.js.org/</a></li><li>reveal.js<br>创建功能齐全且精美的演示文稿<br><a href="https://revealjs.com/">https://revealjs.com/</a></li><li>carbon<br>创建和共享源代码的精美图像<br><a href="https://carbon.now.sh/">https://carbon.now.sh/</a></li><li>lucky-canvas<br>基于 TS + Canvas 开发的【大转盘 / 九宫格 / 老虎机】抽奖插件， 一套源码适配多端框架 JS / Vue / React / Taro / UniApp / 微信小程序等<br><a href="https://100px.net/">https://100px.net/</a></li><li>Darkmode.js<br>在几秒钟内为您的网站添加暗模式/夜间模式<br><a href="https://darkmodejs.learn.uno/?_360safeparam=8406218">https://darkmodejs.learn.uno/?_360safeparam=8406218</a></li><li>ECharts<br>强大的交互式图表和浏览器数据可视化库<br><a href="https://echarts.apache.org/zh/index.html">https://echarts.apache.org/zh/index.html</a></li><li>PixiJS<br>使用最快，最灵活的2D WebGL渲染器创建精美的内容<br><a href="https://pixijs.com/">https://pixijs.com/</a></li><li>AntV - G2<br>数据驱动，高度易用，可扩展的可视化图形语法。<br><a href="https://g2plot.antv.vision/zh/">https://g2plot.antv.vision/zh/</a></li><li>ApexCharts.js<br>基于SVG的JavaScript图表库，可使用简单的API构建交互式图表和可视化文件</li><li>OpenLayers<br>高性能，功能丰富的库，用于在Web上创建交互式地图。它可以显示从任何网页上的任何来源加载的地图图块，矢量数据和标记<br><a href="https://openlayers.org/">https://openlayers.org/</a></li><li>Two.js<br>面向现代Web浏览器的二维绘图api，渲染不可知实现相同的API在多种环境中得出：svg，canvas，和webgl<br><a href="https://two.js.org/">https://two.js.org/</a></li><li>Paper.js<br>基于HTML5 Canvas的矢量图形的图形库<br><a href="http://paperjs.org/">http://paperjs.org/</a></li><li>Panolens.js<br>事件驱动的基于WebGL的全景查看器。轻巧而灵活。它建立在Three.JS之上<br><a href="https://pchen66.github.io/Panolens/">https://pchen66.github.io/Panolens/</a></li><li>A-Frame<br>用于构建 3D/AR/VR 体验的 Web 框架<br><a href="https://aframe.io/">https://aframe.io/</a></li><li>mermaid-js<br>以与 Markdown 类似的方式从文本生成图表和流程图<br><a href="https://mermaid-js.github.io/mermaid/">https://mermaid-js.github.io/mermaid/</a></li><li>mo · js<br>为网站添加基于JavaScript的动态图形<br><a href="https://mojs.github.io/">https://mojs.github.io/</a></li><li>trianglify<br>Javascript 库，用于创建独特的、美观的三角形图案<br><a href="http://qrohlf.com/trianglify/">http://qrohlf.com/trianglify/</a></li><li>Babylon.js<br>能强大、美观、简单、开放的游戏和渲染引擎<br><a href="https://www.babylonjs.com/">https://www.babylonjs.com/</a></li><li>Oasis Engine<br>高性能 Web 蚂蚁图形引擎<br><a href="https://oasisengine.cn/">https://oasisengine.cn/</a></li><li>Butterfly<br>基于JS的数据驱动的节点式编排组件库<br><a href="https://butterfly-dag.gitee.io/butterfly-dag/home">https://butterfly-dag.gitee.io/butterfly-dag/home</a></li><li>image-optimizer<br>使用 Electron、Vue 和 Vite 用于优化图像和矢量图形的免费开源工具<br><a href="https://github.com/antonreshetov/image-optimizer">https://github.com/antonreshetov/image-optimizer</a></li><li>Sketchfab<br>需任何插件即可在Web页面里嵌入交互式3D模型<br><a href="https://sketchfab.com/">https://sketchfab.com/</a></li><li>vConsole<br>用于移动网页的轻量级、可扩展的前端开发工具<br><a href="https://github.com/Tencent/vConsole">https://github.com/Tencent/vConsole</a></li><li>swiper<br>免费且最现代的移动触摸滑块，具有硬件加速过渡和惊人的原生行为<br><a href="https://swiperjs.com/">https://swiperjs.com/</a></li><li>Slidev<br>面向开发人员的演示幻灯片<br><a href="https://sli.dev/">https://sli.dev/</a></li><li>konva<br>HTML5 Canvas JavaScript 框架，它支持桌面和移动应用程序的高性能动画、过渡、节点嵌套、分层、过滤、缓存、事件处理等等<br><a href="https://konvajs.org/">https://konvajs.org/</a></li><li>p5.j​​s<br>开源的JavaScript可视化库，processing的js实现版本<br><a href="https://p5js.org/zh-Hans/">https://p5js.org/zh-Hans/</a></li><li>cesium<br>用于世界级 3D 地球仪和地图的开源 JavaScript 库<br><a href="https://cesium.com/platform/cesiumjs/">https://cesium.com/platform/cesiumjs/</a></li><li>driver.js<br>一个轻量级、无依赖的用户引导组件<br><a href="https://kamranahmed.info/driver.js/">https://kamranahmed.info/driver.js/</a></li><li>vanilla-tilt.js<br>平滑的 3D 倾斜 JavaScript 库<br><a href="https://micku7zu.github.io/vanilla-tilt.js/index.html">https://micku7zu.github.io/vanilla-tilt.js/index.html</a></li><li>parallax.js<br>对智能设备的方向引擎响应的视差<br><a href="http://matthew.wagerfield.com/parallax/">http://matthew.wagerfield.com/parallax/</a></li><li>signature_pad<br>基于 HTML5 canvas 的平滑签名绘制<br><a href="http://szimek.github.io/signature_pad/">http://szimek.github.io/signature_pad/</a></li><li>compressorjs<br>JavaScript 图像压缩器<br><a href="https://fengyuanchen.github.io/compressorjs/">https://fengyuanchen.github.io/compressorjs/</a></li><li>eva.js<br>用于创建交互式游戏项目的前端游戏引擎<br><a href="https://eva.js.org/">https://eva.js.org/</a></li><li>d3<br>基于数据来操作文档的JavaScript库<br><a href="https://d3js.org/">https://d3js.org/</a><h3 id="动画插件"><a href="#动画插件" class="headerlink" title="动画插件"></a>动画插件</h3></li><li>countUp.js<br>无依赖项的轻量级Javascript类，可用于快速创建以更有趣的方式显示数字数据的动画<br><a href="https://inorganik.github.io/countUp.js/">https://inorganik.github.io/countUp.js/</a></li><li>impress.js<br>CSS3 转换和过渡的强大功能的演示框架<br><a href="https://impress.js.org/">https://impress.js.org/</a></li><li>Anime.js<br>轻量级的 JavaScript 动画库，具有简单而强大的 API<br><a href="https://animejs.com/">https://animejs.com/</a></li><li>tween.js<br>用于简单动画的 JavaScript 补间引擎，包含优化的 Robert Penner 方程<br><a href="http://tweenjs.github.io/tween.js/">http://tweenjs.github.io/tween.js/</a></li><li>Popmotion<br>制作数字、颜色和复杂字符串的动画。该库的主要动画功能只有5kb左右，整个库的容量在12kb左右<br><a href="https://popmotion.io/">https://popmotion.io/</a></li><li>Typed.js<br>打字动画库<br><a href="https://mattboldt.com/demos/typed-js/">https://mattboldt.com/demos/typed-js/</a></li><li>vivus.js<br>在 SVG 上制作绘图动画的 JavaScript 库<br><a href="https://maxwellito.github.io/vivus/">https://maxwellito.github.io/vivus/</a></li><li>ScrollReveal<br>在元素滚入或滚出视口时为其制作动画<br><a href="https://scrollrevealjs.org/">https://scrollrevealjs.org/</a></li><li>canvas-confetti<br>按需 五彩纸屑<br><a href="https://catdad.github.io/canvas-confetti/">https://catdad.github.io/canvas-confetti/</a></li><li>GSAP<br>强大的 JavaScript 工具集，构建适用于所有主流浏览器的高性能动画。动画 CSS、SVG、画布、React、Vue、WebGL、颜色、字符串、运动路径、通用对象<br><a href="https://greensock.com/">https://greensock.com/</a></li><li>lax.js<br>轻量级（&lt;4kb gzipped）香草 JavaScript 库，可在您滚动时创建流畅美观的动画<br><a href="https://github.com/alexfoxy/lax.js">https://github.com/alexfoxy/lax.js</a></li><li>animxyz<br>AnimXYZ 可帮助您为您的网站创建、自定义和组合动画<br><a href="https://animxyz.com/">https://animxyz.com/</a></li><li>svg.js<br>用于操作和动画 SVG 的轻量级库<br><a href="https://svgjs.dev/docs/3.0/">https://svgjs.dev/docs/3.0/</a></li><li>zdog<br>用于画布和 SVG 的扁平、圆形、设计师友好的伪 3D 引擎<br><a href="https://zzz.dog/">https://zzz.dog/</a></li><li>dynamics.js<br>用于创建基于物理的动画的 JavaScript 库<br><a href="http://dynamicsjs.com/">http://dynamicsjs.com/</a></li><li>Proton<br>Javascript粒子动画库<br><a href="https://drawcall.github.io/Proton/">https://drawcall.github.io/Proton/</a><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3></li><li>SheetJS<br>可读取和导出excel的工具库，功能强大，支持格式众多，支持xls、xlsx、ods(一种OpenOffice专有表格文件格式)等十几种格式<br><a href="https://sheetjs.com/">https://sheetjs.com/</a></li><li>revogrid<br>具有高级定制功能的强大虚拟数据表格<br><a href="https://revolist.github.io/revogrid/">https://revolist.github.io/revogrid/</a></li><li>FileSaver.js<br>客户端保存文件的解决方案<br><a href="https://eligrey.com/blog/saving-generated-files-on-the-client-side/">https://eligrey.com/blog/saving-generated-files-on-the-client-side/</a></li><li>jszip<br>使用 Javascript 创建、读取和编辑 .zip 文件<br><a href="https://stuk.github.io/jszip/">https://stuk.github.io/jszip/</a></li><li>Print.js<br>帮助从网络打印的小型 javascript 库<br><a href="https://printjs.crabbly.com/">https://printjs.crabbly.com/</a></li><li>mammoth.js<br>将 Word 文档（.docx 文件）转换为 HTML<br><a href="https://github.com/mwilliamson/mammoth.js">https://github.com/mwilliamson/mammoth.js</a></li><li>StreamSaver.js<br>直接异步将流写入文件系统，适合大文件下载<br><a href="https://jimmywarting.github.io/StreamSaver.js/example.html">https://jimmywarting.github.io/StreamSaver.js/example.html</a></li><li>PDF.js<br>使用 HTML5 构建的可移植文档格式 (PDF) 查看器<br><a href="https://github.com/mozilla/pdf.js">https://github.com/mozilla/pdf.js</a></li><li>pdfmake<br>用于服务器端和客户端的 PDF 文档生成库<br><a href="http://pdfmake.org/">http://pdfmake.org/</a></li><li>pdf-lib<br>在任何 JavaScript 环境中创建和修改 PDF 文档<br><a href="https://pdf-lib.js.org/">https://pdf-lib.js.org/</a></li><li>uppy<br>JavaScript 文件上传器<br><a href="https://uppy.io/">https://uppy.io/</a><h3 id="音视频"><a href="#音视频" class="headerlink" title="音视频"></a>音视频</h3></li><li>moovie.js<br>专注于电影的 HTML5 播放器<br><a href="https://mooviejs.com/">https://mooviejs.com/</a></li><li>meyda.js<br>JavaScript 音频特征提取库<br><a href="https://meyda.js.org/">https://meyda.js.org/</a></li><li>howler.js<br>Javascript 音频库<br><a href="https://howlerjs.com/">https://howlerjs.com/</a></li><li>flv.js<br>HTML5 FLV 播放器<br><a href="https://github.com/Bilibili/flv.js/">https://github.com/Bilibili/flv.js/</a></li><li>plyr<br>HTML5、YouTube 和 Vimeo 播放器<br><a href="https://plyr.io/">https://plyr.io/</a></li><li>xgplayer 西瓜播放器<br>网络视频和音频播放器库<br><a href="https://h5player.bytedance.com/">https://h5player.bytedance.com/</a></li><li>hls.js<br>可在支持 MSE 的浏览器中播放 HLS<br><a href="https://hls-js.netlify.app/demo/">https://hls-js.netlify.app/demo/</a><h3 id="智能化"><a href="#智能化" class="headerlink" title="智能化"></a>智能化</h3></li><li>tensorflow.js<br>用于在浏览器和 Node.js 训练和部署机器学习模型<br><a href="https://tensorflow.google.cn/">https://tensorflow.google.cn/</a></li><li>face-api.js<br>用于在浏览器和 nodejs 中使用 tensorflow.js 进行人脸检测和人脸识别的 JavaScript API<br><a href="https://github.com/justadudewhohacks/face-api.js/">https://github.com/justadudewhohacks/face-api.js/</a></li><li>tracking.js<br>将不同的计算机视觉算法和技术引入浏览器环境。通过使用现代HTML5规范，我们使您能够进行实时颜色跟踪，人脸检测等<br><a href="https://trackingjs.com/">https://trackingjs.com/</a></li><li>pose-animator<br>识别出人类的表情变化和肢体动作，并将其映射到2D矢量图型上<br><a href="https://github.com/yemount/pose-animator">https://github.com/yemount/pose-animator</a></li><li>ar-cutpaste<br>手机上预装工具，对着目标物体拍摄，即可将图像复制粘贴进 Photoshop<br><a href="https://github.com/cyrildiagne/ar-cutpaste">https://github.com/cyrildiagne/ar-cutpaste</a></li><li>imgcook<br>专注以 Sketch、PSD、静态图片等形式的视觉稿作为输入，通过智能化技术一键生成可维护的前端代码<br><a href="https://www.imgcook.com/">https://www.imgcook.com/</a></li><li>nsfwjs<br>帮助快速识别不合时宜的图像<br><a href="https://nsfwjs.com/">https://nsfwjs.com/</a><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3></li><li>Vditor<br>Markdown 编辑器，支持所见即所得、即时渲染（类似 Typora）和分屏预览模式，由 TypeScript 实现，支持原生 JavaScript、Vue、React、Angular，提供桌面版<br><a href="https://b3log.org/vditor/">https://b3log.org/vditor/</a></li><li>monaco-editor<br>为VS Code提供支持的代码编辑器<br><a href="https://microsoft.github.io/monaco-editor/">https://microsoft.github.io/monaco-editor/</a></li><li>bytemd<br>用 Svelte 构建的 Markdown 编辑器组件。它也可以用于其他库/框架，例如 React、Vue 和 Angular<br><a href="https://bytemd.netlify.app/">https://bytemd.netlify.app/</a></li><li>wangEditor<br>Typescript 开发的 Web 富文本编辑器， 轻量、简洁、易用、开源免费<br><a href="https://www.wangeditor.com/">https://www.wangeditor.com/</a></li><li>mavonEditor<br>Markdown 编辑器，支持多种个性化功能<br><a href="http://www.mavoneditor.com/">http://www.mavoneditor.com/</a></li><li>quill<br>API 驱动的富文本编辑器<br><a href="https://quilljs.com/">https://quilljs.com/</a></li><li>codemirror5<br>浏览器内代码编辑器<br><a href="https://codemirror.net/">https://codemirror.net/</a></li><li>marked<br>用于解析 Markdown 的编译器<br><a href="https://marked.js.org/">https://marked.js.org/</a></li><li>tiptap<br>完全控制文本编辑器体验。它是可定制的，带有大量扩展，是开源的，并且有大量的文档<br><a href="https://tiptap.dev/">https://tiptap.dev/</a><h3 id="2D-3D"><a href="#2D-3D" class="headerlink" title="2D 3D"></a>2D 3D</h3></li><li>dat.gui<br>在 JavaScript 中更改变量的轻量级图形用户界面<br><a href="https://github.com/dataarts/dat.gui">https://github.com/dataarts/dat.gui</a></li><li>Three.js<br>易于使用、轻量级、跨浏览器的通用 3D 库<br><a href="https://threejs.org/">https://threejs.org/</a></li><li>Draco 3D<br>缩和解压缩 3D 几何网格和点云。它旨在改进 3D 图形的存储和传输<br><a href="https://google.github.io/draco/">https://google.github.io/draco/</a></li><li>stats.js<br>JavaScript 性能监视器<br><a href="http://mrdoob.github.io/stats.js/">http://mrdoob.github.io/stats.js/</a></li><li>matter-js<br>一个用于 web 的 JavaScript 2D 物理引擎<br><a href="https://brm.io/matter-js/">https://brm.io/matter-js/</a></li><li>Oimo.js<br>用于 javascript 的轻量级 3d 物理引擎，是OimoPhysics<br>的完整 javascript 转换<br><a href="http://lo-th.github.io/Oimo.js/#basic">http://lo-th.github.io/Oimo.js/#basic</a></li><li>ammo.js<br>使用 Emscripten 将 Bullet 物理引擎直接移植到 JavaScript<br><a href="https://github.com/kripken/ammo.js">https://github.com/kripken/ammo.js</a><h3 id="其他常用"><a href="#其他常用" class="headerlink" title="其他常用"></a>其他常用</h3></li><li>Auto.js Pro<br>Android上支持Node.js的JavaScript自动化和编程软件<br><a href="https://pro.autojs.org/">https://pro.autojs.org/</a></li><li>Inquirer.js<br>实现命令行交互式界面的工具集合<br><a href="https://github.com/SBoudrias/Inquirer.js/">https://github.com/SBoudrias/Inquirer.js/</a></li><li>chalk<br>命令行美化工具<br><a href="https://github.com/chalk/chalk">https://github.com/chalk/chalk</a></li><li>Timer.js<br>简单而轻量级的库，无需任何依赖项来创建和管理计时器<br><a href="https://github.com/husa/timer.js">https://github.com/husa/timer.js</a></li><li>day.js<br>极简的 JavaScript 库，它使用与 Moment.js 兼容的 API 为现代浏览器解析、验证、操作和显示日期和时间<br><a href="https://day.js.org/">https://day.js.org/</a></li><li>Socket.io<br>支持基于事件的实时双向通信<br><a href="https://socket.io/">https://socket.io/</a></li><li>The Algorithms<br>GitHub 最大的开源算法库<br><a href="https://the-algorithms.com/">https://the-algorithms.com/</a></li><li>log-symbols<br>各种日志级别的彩色符号<br><a href="https://github.com/sindresorhus/log-symbols">https://github.com/sindresorhus/log-symbols</a></li><li>plop<br>微型生成器框架，使整个团队可以轻松地创建具有一定一致性的文件<br><a href="https://plopjs.com/">https://plopjs.com/</a></li><li>prompts<br>轻量级、美观且用户友好的交互式提示<br><a href="https://github.com/terkelg/prompts">https://github.com/terkelg/prompts</a></li><li>shelljs<br>基于 Node.js API 的 Unix shell 命令的可移植（Windows/Linux/macOS）实现<br><a href="https://www.npmjs.com/package/shelljs">https://www.npmjs.com/package/shelljs</a></li><li>figlet<br>浏览器控制台个性化输出<br><a href="https://github.com/patorjk/figlet.js">https://github.com/patorjk/figlet.js</a></li><li>picocolors<br>终端修改输出字符样式的 npm 包，比 chalk 体积小 14 倍，速度快 2 倍<br><a href="https://github.com/alexeyraspopov/picocolors">https://github.com/alexeyraspopov/picocolors</a></li><li>cac<br>用于构建 CLI 应用程序的 JavaScript 库，体积数倍小于 commander 和 yargs<br><a href="https://github.com/cacjs/cac">https://github.com/cacjs/cac</a></li><li>npm-run-all<br>用于并行或顺序运行多个 npm 脚本的 CLI 工具<br><a href="https://github.com/mysticatea/npm-run-all">https://github.com/mysticatea/npm-run-all</a></li><li>node-semver<br>语义化版本号管理的 npm 库，比如 判断一个版本是否合法，判断版本号命名是否正确，两个版本谁大谁小之类 等<br><a href="https://github.com/npm/node-semver">https://github.com/npm/node-semver</a></li><li>puppeteer<br>在浏览器中手动执行的大多数操作都可以使用 Puppeteer 完成<br>生成页面的屏幕截图和 PDF。<br>抓取 SPA（单页应用程序）并生成预渲染内容<br>自动化表单提交、UI 测试、键盘输入等。<br><a href="https://pptr.dev/">https://pptr.dev/</a></li><li>temir<br>用vue组件来编写命令行界面应用的工具<br><a href="https://github.com/webfansplz/temir">https://github.com/webfansplz/temir</a></li><li>enquirer<br>适用于 Node.js 的时尚、直观且用户友好的提示<br><a href="https://github.com/enquirer/enquirer">https://github.com/enquirer/enquirer</a><h2 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h2><h3 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h3></li><li>uni-app<br>使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序等13个平台<br><a href="https://uniapp.dcloud.io/">https://uniapp.dcloud.io/</a></li><li>react-native<br>使用 React 构建移动应用程序<br><a href="https://reactnative.dev/">https://reactnative.dev/</a></li><li>Flutter<br>Google 的开源框架，用于构建美观、本机编译的多平台应用程序<br><a href="https://flutter.dev/">https://flutter.dev/</a></li><li>chameleon<br>一套代码运行多端，一端所见即多端所见<br><a href="http://cml.didi.cn/">http://cml.didi.cn/</a></li><li>Taro<br>遵循 React 语法规范的多端统一开发框架<br><a href="https://taro.zone/">https://taro.zone/</a></li><li>Electron<br>使用 JavaScript，HTML 和 CSS 构建跨平台的桌面应用程序<br><a href="https://www.electronjs.org/">https://www.electronjs.org/</a></li><li>MicroApp<br>京东零售推出的微前端框架。基于webcomponent-like渲染，从组件思维实现微前端，旨在降低上手难度，提高工作效率<br><a href="https://micro-zoe.github.io/micro-app/">https://micro-zoe.github.io/micro-app/</a></li><li>Tauri<br>使用 Web 前端构建更小、更快、更安全的桌面应用程序<br><a href="https://tauri.studio/">https://tauri.studio/</a></li><li>Hippy<br>跨平台的开发框架，旨在帮助开发者编写一次，运行在三个平台（iOS、Android 和 Web）上<br><a href="https://hippyjs.org/#/">https://hippyjs.org/#/</a></li><li>无界<br>基于 Web Components + iframe 微前端框架，具备成本低、速度快、原生隔离、功能强等一系列优点。<br><a href="https://wujie-micro.github.io/doc/">https://wujie-micro.github.io/doc/</a></li><li>qiankun<br>微前端的实现，基于single-spa。它旨在使构建生产就绪的微前端架构系统变得更加容易和轻松。<br><a href="https://qiankun.umijs.org/zh">https://qiankun.umijs.org/zh</a><h3 id="Flutter"><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h3></li><li>pub.dev<br>Dart和Flutter应用程序的官方包存储库<br><a href="https://pub.dev/">https://pub.dev/</a></li><li>awesome-flutter-plugins<br>尽可能收集好用的Flutter插件以便更效率的开发<br><a href="https://github.com/jahnli/awesome-flutter-plugins">https://github.com/jahnli/awesome-flutter-plugins</a></li><li>flutter-widget.live<br>使用 Flutter for web 构建的网站，用于在线实时预览小部件示例。<br><a href="https://flutter-widget.live/basics/introduction">https://flutter-widget.live/basics/introduction</a></li><li>google Icons<br>Google Material Design 图标<br><a href="https://fonts.google.com/icons">https://fonts.google.com/icons</a></li><li>Json To Dart Model<br>Json 转 Dart Model类<br><a href="https://ashamp.github.io/jsonToDartModel/">https://ashamp.github.io/jsonToDartModel/</a></li><li>flutter  awesome<br>很棒的列表，其中包含优秀的 Flutter 库和工具<br><a href="https://flutterawesome.com/">https://flutterawesome.com/</a></li><li>LottieFiles<br>免费 Lottie 动画文件、工具和插件<br><a href="https://lottiefiles.com/">https://lottiefiles.com/</a><h3 id="Electron"><a href="#Electron" class="headerlink" title="Electron"></a>Electron</h3></li><li>vue-cli-plugin-electron-builde<br>使用Electron轻松构建用于桌面的Vue.js应用<br><a href="https://nklayman.github.io/vue-cli-plugin-electron-builder/">https://nklayman.github.io/vue-cli-plugin-electron-builder/</a></li><li>electron-about-window<br>为Electron 提供 “关于此应用程序” 窗口。<br><a href="https://github.com/rhysd/electron-about-window">https://github.com/rhysd/electron-about-window</a></li><li>nativefier<br>使任何网页成为桌面应用程序<br><a href="https://github.com/nativefier/nativefier">https://github.com/nativefier/nativefier</a><h3 id="Uniapp"><a href="#Uniapp" class="headerlink" title="Uniapp"></a>Uniapp</h3></li><li>Grace UI<br>兼容微信小程序及uni-app的优秀前端框架，以flex布局为基础，提供了丰富的组件及界面库GraceUI<br><a href="https://www.graceui.com/">https://www.graceui.com/</a></li><li>uView<br>全面兼容nvue的uni-app生态框架，全面的组件和便捷的工具<br><a href="https://www.uviewui.com/">https://www.uviewui.com/</a></li><li>ThorUI<br>轻量、简洁、全面的移动端组件库<br><a href="https://thorui.cn/doc/">https://thorui.cn/doc/</a><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3></li><li>cssfx<br>精美简单的点击复制 CSS 效果<br><a href="https://cssfx.netlify.app/">https://cssfx.netlify.app/</a></li><li>Twitter Hashflags<br>Twitter 点赞动画<br><a href="https://hashflags.io/">https://hashflags.io/</a></li><li>UI Snippets<br>UI 片段的集合<br><a href="https://ui-snippets.dev/">https://ui-snippets.dev/</a></li><li>SpinKit<br>CSS 动画的加载指示器<br><a href="https://tobiasahlin.com/spinkit/">https://tobiasahlin.com/spinkit/</a></li><li>animate.css<br>强大的预设css3动画库<br><a href="https://animate.style/">https://animate.style/</a></li><li>犸良<br>一站式动效制作平台，通过海量的动效素材以及可视化编辑能力，帮助零基础的用户轻松完成动效制作<br><a href="https://design.alipay.com/emotion">https://design.alipay.com/emotion</a></li><li>animista<br>Css 动画<br><a href="https://animista.net/">https://animista.net/</a></li><li>lordicon<br>功能强大的精心制作的动画图标库<br><a href="https://lordicon.com/">https://lordicon.com/</a></li><li>svg-spinners<br>24 x 24 dp的svg格式loading加载器<br><a href="https://github.com/n3r4zzurr0/svg-spinners">https://github.com/n3r4zzurr0/svg-spinners</a></li><li>magic<br>具有炫酷效果的 CSS3 动画<br><a href="https://www.minimamente.com/project/magic/">https://www.minimamente.com/project/magic/</a></li><li>Hover.css<br>CSS3 驱动的悬停效果，可应用于链接、按钮、徽标、SVG、特色图像等<br><a href="http://ianlunn.github.io/Hover/">http://ianlunn.github.io/Hover/</a></li><li>eva-icons<br>超过 480 个制作精美的开源图标。SVG、Sketch、Web 字体和动画支持<br><a href="https://akveo.github.io/eva-icons/#/">https://akveo.github.io/eva-icons/#/</a><h3 id="工具-1"><a href="#工具-1" class="headerlink" title="工具"></a>工具</h3></li><li>normalize.css<br>CSS 重置的现代替代方案<br><a href="http://necolas.github.io/normalize.css/">http://necolas.github.io/normalize.css/</a></li><li>Squoosh<br>对比 tinypng 有【更好的】压缩效果<br><a href="https://squoosh.app/">https://squoosh.app/</a><h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h3></li><li>Manypixels<br>收集无版权插图的网站，提供 SVG / PNG 格式下载，并且允许更改颜色<br><a href="https://www.manypixels.co/gallery">https://www.manypixels.co/gallery</a></li><li>U钙网<br>免费的LOGO在线设计制作工具<br><a href="https://www.uugai.com/">https://www.uugai.com/</a></li><li>design-blocks<br>一组 170 多个基于 Bootstrap 的设计块，可用于创建干净的现代网站<br><a href="https://froala.com/design-blocks/">https://froala.com/design-blocks/</a></li><li>unDraw<br>精美的 SVG 插画集<br><a href="https://undraw.co/illustrations">https://undraw.co/illustrations</a></li><li>Ira Design<br>通过调配渐变色、搭配手绘组件定制插画<br><a href="https://iradesign.io/gallery/illustrations">https://iradesign.io/gallery/illustrations</a></li><li>lukasz adam<br>免费 SVG 插画<br><a href="https://lukaszadam.com/illustrations">https://lukaszadam.com/illustrations</a></li><li>pixeltrue<br>创建令人叹为观止的项目的插图<br><a href="https://www.pixeltrue.com/packs">https://www.pixeltrue.com/packs</a></li><li>3dicons<br>3d图标库<br><a href="https://3dicons.co/">https://3dicons.co/</a></li><li>css-buttons<br>100 个现代 CSS 按钮<br><a href="https://css-buttons.web.app/">https://css-buttons.web.app/</a></li><li>uiset<br>优质免费的UI设计资源<br><a href="https://uiset.com/">https://uiset.com/</a></li><li>error404<br>404插画页面<br><a href="https://error404.fun/">https://error404.fun/</a></li><li>ui8<br>5,745 个精选设计资源，为您的创意工作流程注入活力<br><a href="https://ui8.net/">https://ui8.net/</a><h2 id="编程工具"><a href="#编程工具" class="headerlink" title="编程工具"></a>编程工具</h2><h3 id="代码工具"><a href="#代码工具" class="headerlink" title="代码工具"></a>代码工具</h3></li><li>gitignore.io<br>为项目创建有用的 .gitignore 文件<br><a href="https://www.toptal.com/developers/gitignore">https://www.toptal.com/developers/gitignore</a></li><li>any-rule<br>常用正则大全, 支持web / vscode / idea / Alfred Workflow多平台<br><a href="https://any86.github.io/any-rule/">https://any86.github.io/any-rule/</a></li><li>30-seconds-of-code<br>满足多种语言开发需求的简短代码片段<br><a href="https://www.30secondsofcode.org/">https://www.30secondsofcode.org/</a></li><li>github-readme-stats<br>为 github 自述文件动态生成的统计信息<br><a href="https://github.com/anuraghazra/github-readme-stats">https://github.com/anuraghazra/github-readme-stats</a></li><li>cz-cli<br>规范提交说明的git工具<br><a href="http://commitizen.github.io/cz-cli/">http://commitizen.github.io/cz-cli/</a></li><li>commitlint<br>git commit 校验工具<br><a href="https://commitlint.js.org/#/">https://commitlint.js.org/#/</a></li><li>husky<br>Git hooks 工具，可以防止使用 Git hooks 的一些不好的 commit 或者 push<br><a href="https://typicode.github.io/husky/#/">https://typicode.github.io/husky/#/</a></li><li>lint-staged<br>代码提交之前,进行代码规则检查并尝试修复，能够确保进入git库的代码都是符合代码规则<br><a href="https://github.com/okonet/lint-staged">https://github.com/okonet/lint-staged</a></li><li>anywhere<br>随启随用的静态文件服务器<br><a href="https://github.com/JacksonTian/anywhere">https://github.com/JacksonTian/anywhere</a></li><li>code996<br>统计 Git 项目的 commit 时间分布，进而推导出这个项目的编码工作强度<br><a href="https://hellodigua.github.io/code996/#/">https://hellodigua.github.io/code996/#/</a><h3 id="图像工具"><a href="#图像工具" class="headerlink" title="图像工具"></a>图像工具</h3></li><li>bigjpg<br>使用度卷积神经网络。它会将噪点和锯齿的部分进行补充，实现图片的无损放大<br><a href="https://bigjpg.com/">https://bigjpg.com/</a></li><li>jpghd<br>使用人工智能 AI 超分模型和深度学习技术来将低清破损有噪点图片处理成高画质高分辨率图片同时支持破损老照片修复和老照片上色<br><a href="https://jpghd.com/">https://jpghd.com/</a></li><li>bigmp4<br>使用智能 AI 模型，能将视频无损高清放大、增强画质、智能补帧使画面丝滑流畅栩栩如生同时支持黑白视频上色和慢动作<br><a href="https://bigmp4.com/">https://bigmp4.com/</a></li><li>imglarger<br>基于强大的机器学习可在不降低质量的情况下提高图像分辨率<br><a href="https://imglarger.com/">https://imglarger.com/</a></li><li>unscreen<br>智能AI去除视频背景在线神器<br><a href="https://www.unscreen.com/">https://www.unscreen.com/</a></li><li>阿里妈妈创意中心<br>阿里智能文案，智能抠图工具<br><a href="https://chuangyi.taobao.com/">https://chuangyi.taobao.com/</a><h3 id="文件转换"><a href="#文件转换" class="headerlink" title="文件转换"></a>文件转换</h3></li><li>ALL TO ALL<br>全类型的在线文件转换平台，免费、快速，无须下载安装任何软件<br><a href="https://www.alltoall.net/">https://www.alltoall.net/</a></li><li>Convertio<br>将文件转换成任意格式<br><a href="https://convertio.co/zh/">https://convertio.co/zh/</a><h2 id="Vue3生态工具"><a href="#Vue3生态工具" class="headerlink" title="Vue3生态工具"></a>Vue3生态工具</h2><h3 id="1-Web-UI库"><a href="#1-Web-UI库" class="headerlink" title="1.Web UI库"></a>1.Web UI库</h3></li><li>ElementUI Plus<br>一套为开发者、设计师和产品经理准备的基于 Vue 3.0 的桌面端组件库<br><a href="https://element-plus.org/zh-CN/">https://element-plus.org/zh-CN/</a></li><li>Ant Design of Vue<br>Ant Design 的 Vue 实现，开发和服务于企业级后台产品<br><a href="https://www.antdv.com/docs/vue/introduce-cn">https://www.antdv.com/docs/vue/introduce-cn</a></li><li>BalmUI<br>基于谷歌的 Material Design，附带 Vue 插件和指令，以及从简单到复杂的高度可定制组件<br><a href="https://next-material.balmjs.com/">https://next-material.balmjs.com/</a></li><li>Naive UI<br>图森Vue3的组件库，文档完整，我项目中经常使用<br><a href="https://www.naiveui.com/zh-CN/os-theme">https://www.naiveui.com/zh-CN/os-theme</a></li><li>arco.design<br>字节跳动企业级产品设计系统，支持React和Vue双版本<br><a href="https://arco.design/">https://arco.design/</a></li><li>Quasar<br>轻松构建高性能和高质量的Vue.js 3用户界面，好用，但没有中文文档<br><a href="https://quasar.dev/">https://quasar.dev/</a></li><li>iDUX<br>Vue3.x 的 UI 组件库，完全使用 TypeScript 开发<br><a href="https://idux.site/">https://idux.site/</a></li><li>TDesign<br>腾讯业务团队在服务业务过程中沉淀的一套企业级设计体系<br><a href="https://tdesign.tencent.com/">https://tdesign.tencent.com/</a><br><a href="https://tdesign.tencent.com/vue-next/overview">https://tdesign.tencent.com/vue-next/overview</a></li><li>PrimeVue<br>易于使用、多功能、高性能的 Vue UI 组件库<br><a href="https://www.primefaces.org/primevue/">https://www.primefaces.org/primevue/</a></li><li>DevUI<br>华为基于 Vue3 和 DevUI 设计的 UI 组件<br><a href="https://vue-devui.github.io/">https://vue-devui.github.io/</a></li><li>vuestic-ui<br>Vue 3 的免费和开源 UI 库 ,UI非常好看，并且有可用后台管理界面。<br><a href="https://vuestic.dev/">https://vuestic.dev/</a></li><li>Headless UI<br>完全无样式、完全可访问的 UI 组件，旨在与 Tailwind CSS 完美集成。<br><a href="https://headlessui.com/">https://headlessui.com/</a></li><li>View UI Plus<br>基于 Vue.js 3 的企业级 UI 组件库和前端解决方案<br><a href="https://www.iviewui.com/">https://www.iviewui.com/</a><h3 id="2-移动UI库"><a href="#2-移动UI库" class="headerlink" title="2.移动UI库"></a>2.移动UI库</h3></li><li>Vant<br>有赞轻量、可靠的移动端组件库<br><a href="https://vant-contrib.gitee.io/vant/#/zh-CN">https://vant-contrib.gitee.io/vant/#/zh-CN</a></li><li>NutUI<br>京东风格的轻量级移动端 Vue 组件库，非常适合移动端电商使用。<br><a href="https://nutui.jd.com/#/">https://nutui.jd.com/#/</a></li><li>Varlet<br>Material 风格移动端组件库 ，文档非常齐全。<br><a href="https://varlet.gitee.io/varlet-ui/#/zh-CN/home">https://varlet.gitee.io/varlet-ui/#/zh-CN/home</a></li><li>nutui-bingo<br>京东基于 NutUI 的抽奖组件库，助力营销活动和小游戏场景。<br><a href="https://nutui.jd.com/bingo/#/">https://nutui.jd.com/bingo/#/</a><h3 id="3-相关工具"><a href="#3-相关工具" class="headerlink" title="3.相关工具"></a>3.相关工具</h3></li><li>unplugin-vue-components<br>antfu 按需组件自动导入，开箱即用地支持 Vue 2 和 Vue 3，Tree-shakable，只注册你使用的组件，附有流行UI 库的内置解析器。<br><a href="https://www.npmjs.com/package/unplugin-vue-components">https://www.npmjs.com/package/unplugin-vue-components</a></li><li>vuex-persistedstate<br>在页面重新加载之间保持并重载您的 Vuex 状态<br><a href="https://github.com/robinvdvleuten/vuex-persistedstate">https://github.com/robinvdvleuten/vuex-persistedstate</a></li><li>vuex-persist<br>支持 Typescript 的Vuex插件，它能够将应用程序的状态保存到持久存储中，例如 Cookies 或 localStorage<br><a href="https://championswimmer.in/vuex-persist/">https://championswimmer.in/vuex-persist/</a></li><li>@vueuse/gesture<br>手势库，使应用程序具有交互性<br><a href="https://gesture.vueuse.org/">https://gesture.vueuse.org/</a></li><li>unplugin-auto-import<br>antfu 自动导入 Vite、Webpack、Rollup 和 esbuild 的 API。支持 TypeScript。<br><a href="https://github.com/antfu/unplugin-auto-import">https://github.com/antfu/unplugin-auto-import</a></li><li>pinia-plugin-persistedstate<br>Pinia 商店的可配置持久性<br><a href="https://github.com/prazdevs/pinia-plugin-persistedstate">https://github.com/prazdevs/pinia-plugin-persistedstate</a></li><li><a href="https://vue-termui.dev/">https://vue-termui.dev/</a><br>一个基于 Vue.js 的终端 UI 框架，可让您轻松构建现代终端应用程序<br><a href="https://vue-termui.dev/">https://vue-termui.dev/</a><h3 id="4-可视化"><a href="#4-可视化" class="headerlink" title="4.可视化"></a>4.可视化</h3></li><li>Pdfvuer<br>DF 查看器，使用 Mozilla 的 PDF.js，支持 Vue2 和 Vue3<br><a href="https://arkokoley.github.io/pdfvuer/">https://arkokoley.github.io/pdfvuer/</a></li><li>vue3-marquee<br>无缝滚动组件<br><a href="https://vue3-marquee.vercel.app/">https://vue3-marquee.vercel.app/</a></li><li>Vue-ECharts<br>百度ECharts 的 Vue.js 组件。 配置参考Echarts官方 基于 ECharts v5+ 开发，适用于Vue.js 2/3。<br><a href="https://vue-echarts.dev/">https://vue-echarts.dev/</a></li><li>iconpark<br>字节跳动出品，将一个SVG图标转化为多个主题，并生成React图标，Vue图标，svg图标<br><a href="https://iconpark.oceanengine.com/home">https://iconpark.oceanengine.com/home</a><h3 id="5-插件"><a href="#5-插件" class="headerlink" title="5.插件"></a>5.插件</h3></li><li>vue-multiselect-next<br>Vue.js 的通用选择/多选/标记组件<br><a href="https://vue-multiselect.js.org/">https://vue-multiselect.js.org/</a></li><li>vue-print-nb<br>用于印刷、简单、快速、方便、轻便的指令包装器<br><a href="https://github.com/Power-kxLee/vue-print-nb">https://github.com/Power-kxLee/vue-print-nb</a></li><li>vue-i18n-next<br>Vue3的国际化插件<br><a href="https://vue-i18n.intlify.dev/">https://vue-i18n.intlify.dev/</a></li><li>vue-cropper<br>简单的vue图片裁剪插件<br><a href="http://github.xyxiao.cn/vue-cropper/example/">http://github.xyxiao.cn/vue-cropper/example/</a></li><li>Grid Layout<br>Vue.js 的网格布局系统<br><a href="https://jbaysolutions.github.io/">https://jbaysolutions.github.io/</a></li><li>Vue Qrcode Reader<br>允许在不离开浏览器的情况下检测和解码二维码<br><a href="https://gruhn.github.io/vue-qrcode-reader/">https://gruhn.github.io/vue-qrcode-reader/</a></li><li>Makeit Captcha<br>基于 Vue3 + Vite + Canvas 开发的滑块验证码，动态生成验证滑块，结合后端的二次校验，能有效的避免被抓取模拟验证<a href="https://admin.makeit.vip/components/captcha">https://admin.makeit.vip/components/captcha</a></li><li>vue3-clipboard<br>Vue 3 的 clipboard.js<br><a href="https://github.com/soerenmartius/vue3-clipboard">https://github.com/soerenmartius/vue3-clipboard</a></li><li>vue.draggable<br>基于Sortable.js的Vue 3拖放组件<br><a href="https://sortablejs.github.io/vue.draggable.next/#/simple">https://sortablejs.github.io/vue.draggable.next/#/simple</a></li><li>BetterScroll<br>解决移动端（已支持 PC）各种滚动场景需求的插件。<br><a href="https://better-scroll.github.io/docs/zh-CN/">https://better-scroll.github.io/docs/zh-CN/</a><h3 id="6-相关生态"><a href="#6-相关生态" class="headerlink" title="6.相关生态"></a>6.相关生态</h3></li><li>Vue 插件库<br><a href="https://www.vue365.cn/">https://www.vue365.cn/</a></li><li>Pinia<br>轻量级状态管理库，API 设计更接近Vuex 5的提案<br><a href="https://pinia.vuejs.org/">https://pinia.vuejs.org/</a></li><li>Nuxt Modules<br>Nuxt 发现我们的模块列表以增强您的Nuxt 项目<br><a href="https://modules.nuxtjs.org/">https://modules.nuxtjs.org/</a></li><li>Nuxt 3<br>轻量级应用框架,可用来创建服务端渲染 (SSR) 应用<br><a href="https://v3.nuxtjs.org/">https://v3.nuxtjs.org/</a></li><li>vuepress<br>Vue 驱动的静态网站生成器<br><a href="https://v2.vuepress.vuejs.org/zh/">https://v2.vuepress.vuejs.org/zh/</a></li><li>VueUse<br>强大的 Vue 组合实用程序集合<br><a href="https://vueuse.org/">https://vueuse.org/</a><h3 id="7-动画"><a href="#7-动画" class="headerlink" title="7.动画"></a>7.动画</h3></li><li>vue-starport<br>带有动画的跨路由共享组件<br><a href="https://vue-starport.netlify.app/">https://vue-starport.netlify.app/</a></li><li>@vueuse/motion<br>Vue Composables 让你的组件动起来<br><a href="https://motion.vueuse.org/">https://motion.vueuse.org/</a><h3 id="8-音视频"><a href="#8-音视频" class="headerlink" title="8.音视频"></a>8.音视频</h3></li><li>@vueuse/sound<br>用于播放音效的 Vue 组合<br><a href="https://sound.vueuse.org/">https://sound.vueuse.org/</a><h2 id="全栈-后端"><a href="#全栈-后端" class="headerlink" title="全栈-后端"></a>全栈-后端</h2><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3></li><li>isomorphic-git<br>用于节点和浏览器的 git 纯 JavaScript 实现<br><a href="https://isomorphic-git.org/">https://isomorphic-git.org/</a></li><li>jsonwebtoken<br>node.js 的 JsonWebToken 实现<br><a href="https://github.com/auth0/node-jsonwebtoken">https://github.com/auth0/node-jsonwebtoken</a></li><li>Qiniu SDK<br>七牛资源（云）存储 SDK for Node.js<br><a href="https://developer.qiniu.com/kodo/sdk/nodejs">https://developer.qiniu.com/kodo/sdk/nodejs</a></li><li>koa-body<br>功能齐全的koa正文解析器中间件，支持multipart、urlencoded和json请求正文，提供与 Express 的 bodyParser 相同的功能<br><a href="https://github.com/koajs/koa-body">https://github.com/koajs/koa-body</a></li><li>koa-json-error<br>纯Koa JSON 应用程序的错误处理程序，显示堆栈跟踪<br><a href="https://github.com/koajs/json-error">https://github.com/koajs/json-error</a></li><li>koa-jwt<br>用于验证 JSON Web 令牌的 Koa 中间件<br><a href="https://github.com/koajs/jwt">https://github.com/koajs/jwt</a></li><li>koa-router<br>Koa 的路由器中间件<br><a href="https://github.com/koajs/router">https://github.com/koajs/router</a></li><li>koa2-cors<br>koa2 的 CORS 中间件<br><a href="https://github.com/zadzbw/koa2-cors">https://github.com/zadzbw/koa2-cors</a></li><li>koa-sslify<br>为 Koa.js 实施 HTTPS 中间件<br><a href="https://github.com/turboMaCk/koa-sslify">https://github.com/turboMaCk/koa-sslify</a></li><li>superagent-proxy<br>允许您通过某种代理来代理 HTTP 请求<br><a href="https://github.com/TooTallNate/superagent-proxy">https://github.com/TooTallNate/superagent-proxy</a></li><li>node-http-proxy-agen<br>HTTP 端点的 HTTP(s) 代理“http.Agent”实现<br><a href="https://github.com/TooTallNate/node-http-proxy-agent">https://github.com/TooTallNate/node-http-proxy-agent</a></li><li>https-proxy-agent<br>HTTPS 端点的 HTTP(s) 代理“http.Agent”实现<br><a href="https://github.com/TooTallNate/node-https-proxy-agent">https://github.com/TooTallNate/node-https-proxy-agent</a></li><li>socks-proxy-agent<br>用于 HTTP 和 HTTPS 的 SOCKS (v4/v5) 代理“http.Agent”实现<br><a href="https://github.com/TooTallNate/node-socks-proxy-agent">https://github.com/TooTallNate/node-socks-proxy-agent</a></li><li>simple-get<br>发出 http get 请求的最简单方法。支持 HTTPS、重定向、gzip/deflate、小于 100 行的流<br><a href="https://github.com/feross/simple-get">https://github.com/feross/simple-get</a></li><li>commander.js<br>node.js命令行界面的完整解决方案<br><a href="https://github.com/tj/commander.js">https://github.com/tj/commander.js</a></li><li>ora<br>命令行 loading 动效<br><a href="https://github.com/sindresorhus/ora">https://github.com/sindresorhus/ora</a></li><li>dotenv<br>从 .env 为 nodejs 项目加载环境变量<br><a href="https://github.com/motdotla/dotenv">https://github.com/motdotla/dotenv</a></li><li>FFCreator<br>基于node.js的高速视频制作库<br><a href="https://tnfe.github.io/FFCreator/#/">https://tnfe.github.io/FFCreator/#/</a></li><li>sharp<br>高性能 Node.js 图像处理，调整 JPEG、PNG、WebP、AVIF 和 TIFF 图像大小的最快模块<br><a href="https://sharp.pixelplumbing.com/">https://sharp.pixelplumbing.com/</a></li><li>node-fs-extra<br>强大的文件操作库， 是 Nodejs fs 模块 的增强版<br><a href="https://github.com/jprichardson/node-fs-extra">https://github.com/jprichardson/node-fs-extra</a></li><li>chokidar<br>用于文件监控的库，解决兼容性不好、无法监听、监听多次 等大量影响性能的问题<br><a href="https://paulmillr.com/">https://paulmillr.com/</a></li><li>fast-glob<br>快速批量导入、读取文件的库<br><a href="https://github.com/mrmlnc/fast-glob">https://github.com/mrmlnc/fast-glob</a></li><li>peerflix<br>node.js 的流式 torrent 客户端<br><a href="https://github.com/mafintosh/peerflix">https://github.com/mafintosh/peerflix</a><h3 id="工具-2"><a href="#工具-2" class="headerlink" title="工具"></a>工具</h3></li><li>Nginx<br>高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务<br><a href="https://blog.redis.com.cn/doc/">https://blog.redis.com.cn/doc/</a></li><li>PM2<br>Node进程管理工具，如性能监控、自动重启、负载均衡等<br><a href="https://pm2.keymetrics.io/docs/usage/process-management/">https://pm2.keymetrics.io/docs/usage/process-management/</a></li><li>nodemon<br>监视 node.js 应用程序中的任何更改并自动重新启动服务器<br><a href="https://nodemon.io/">https://nodemon.io/</a></li><li>RobotJS<br>Node.js 桌面自动化，控制鼠标、键盘和阅读屏幕等<br><a href="http://robotjs.io/">http://robotjs.io/</a></li><li>Jenkins<br>领先的开源自动化服务器，Jenkins 提供了数百个插件来支持构建、部署和自动化任何项目<br><a href="https://www.jenkins.io/">https://www.jenkins.io/</a></li><li>nexe<br>将 node.js 应用程序中创建一个可执行文件<br><a href="https://github.com/nexe/nexe">https://github.com/nexe/nexe</a></li><li>debug<br>模仿 Node.js 核心调试技术的小型 JavaScript 调试实用程序。适用于 Node.js 和 Web 浏览器<br><a href="https://github.com/debug-js/debug">https://github.com/debug-js/debug</a><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3></li><li>mongoose<br>旨在在异步环境中工作的 MongoDB 对象建模<br><a href="https://mongoosejs.com/">https://mongoosejs.com/</a></li><li>GraphQL<br>用于 API 的查询语言也是一个满足你数据查询的运行时<br><a href="https://graphql.cn/">https://graphql.cn/</a></li><li>lowdb数据库<br>适用于Node，Electron和浏览器的小型JSON数据库。由Lodash驱动<br><a href="https://github.com/typicode/lowdb">https://github.com/typicode/lowdb</a></li><li>nedb<br>适用于Node.js，nw.js，Electron和浏览器的嵌入式持久性数据库或内存数据库,API是MongoDB的子集<br><a href="https://github.com/louischatriot/nedb">https://github.com/louischatriot/nedb</a><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3></li><li>网易云音乐 API<br>全部接口已升级到最新，具备登录接口,多达200多个接口<br><a href="https://binaryify.github.io/NeteaseCloudMusicApi/#/">https://binaryify.github.io/NeteaseCloudMusicApi/#/</a></li><li>Node-SpliderApi<br>基于 Node+Express 网络爬虫 API 接口 包括前端开发日报、kugou 音乐、前端 top 框架排行、妹纸福利、搞笑视频、段子笑话、各类视频新闻资讯 热点详情接口数据,接口数据更新目标<br><a href="https://ecitlm.github.io/Node-SpliderApi/">https://ecitlm.github.io/Node-SpliderApi/</a></li><li>聚合数据<br>免费向开发者提供全国车辆违章查询API,天气API,基站数据,移动联通基站,电信基站,覆盖国内外1000多个主要城市公共交通信息数据<br><a href="https://www.juhe.cn/">https://www.juhe.cn/</a></li><li>极速数据<br>提供各类生活数据API,方便开发者快速简单的开发APP、软件及其他服务平台<br><a href="https://www.jisuapi.com/">https://www.jisuapi.com/</a></li><li>京东万象<br>供金融、电商、运营商数据,免费数据,热门数据,学籍数据,企业诉讼数据,实名认证,征信数据,质检等多种数据<br><a href="https://wx.jdcloud.com/api">https://wx.jdcloud.com/api</a></li><li>QQ音乐API<br>通过Web网页版请求QQ音乐接口数据<br><a href="https://rain120.github.io/qq-music-api/#/">https://rain120.github.io/qq-music-api/#/</a></li><li>万维易源<br>一站式全网API调用平台<br><a href="https://www.showapi.com/">https://www.showapi.com/</a></li><li>TP5 Splider Api<br>基于Thinkphp5+phpQuery 网络爬虫抓取数据接口 统一输出接口数据api<br><a href="https://ecitlm.github.io/TP5_Splider/#/">https://ecitlm.github.io/TP5_Splider/#/</a></li><li>Roll API<br>提供开发中常用数据的一个稳定聚合Api接口<br><a href="https://www.mxnzp.com/doc/list">https://www.mxnzp.com/doc/list</a></li><li>Open API<br>收集可用的Open APIs<br><a href="https://www.wanandroid.com/openapis">https://www.wanandroid.com/openapis</a></li><li>天行数据<br>160多个免费接口，接口高度统一，简单易用，毫秒级响应<br><a href="https://www.tianapi.com/">https://www.tianapi.com/</a></li><li>free-api<br>免费API,收集免费的接口服务<br><a href="https://www.free-api.com/">https://www.free-api.com/</a></li><li>douban-imdb-api<br>基于豆瓣、IMDB、烂番茄评分的电影电视剧双语(中英)数据api接口<br><a href="https://www.iqi360.com/p/douban-imdb-api">https://www.iqi360.com/p/douban-imdb-api</a><h3 id="框架-1"><a href="#框架-1" class="headerlink" title="框架"></a>框架</h3></li><li>Koa<br>基于 Node.js 平台的下一代 web 开发框架<br><a href="https://koajs.com/">https://koajs.com/</a></li><li>Express<br>用于Node.js 的快速、独立、简约的 Web 框架<br><a href="https://expressjs.com/">https://expressjs.com/</a></li><li>egg.js<br>为企业级框架和应用而生<br><a href="https://www.eggjs.org/">https://www.eggjs.org/</a></li><li>Nest.js<br>构建高效且可扩展的服务器端应用程序的渐进式Node.js框架<br><a href="https://nestjs.com/">https://nestjs.com/</a></li></ul></blockquote>]]></content>
    
    
    <summary type="html">前端300+实用工具</summary>
    
    
    
    <category term="转载" scheme="https://www.smitten.top/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="Tool" scheme="https://www.smitten.top/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>关于Memos</title>
    <link href="https://www.smitten.top/posts/Memos.html"/>
    <id>https://www.smitten.top/posts/Memos.html</id>
    <published>2023-03-26T11:34:14.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我从接触独立博客开始，就一直在博客的子栏目中部署了一个类似 <a href="https://www.barryi.me/personal/digu/">嘀咕</a> 的微博客。<br>最初的作用是备份 QQ 空间、Twitter 和朋友圈等。<br>可是慢慢发现，不知道为什么自己在这些社交媒体的分享欲变得越来越弱，只想有一个地方来记录我平时的一些想法，于是有了嘀咕。</p><p>现在在独立博客圈少部博主中流行的这种“B 言 B 语”，最早来源于少数派上的一篇文章——<a href="https://sspai.com/post/60024">《保卫表达：用后端 BaaS 快速搭建专属无点赞评论版微博——b 言 b 语》</a>，“B 言 B 语”也叫“废话胶囊”。</p><p>由此也衍生出了：</p><ul><li><a href="https://github.com/daibor/nonsense.fun">LeanCloud 版</a>（原版）</li><li><a href="https://github.com/songquanpeng/microblog">Golang 版</a></li><li><a href="https://github.com/ibearye/talk">腾讯云 CloudBase 版</a></li><li><a href="https://immmmm.com/bb-by-wechat-pro/">木木老师修改版</a> 《「哔哔点啥」微信公众号 2.0》</li><li><a href="https://github.com/BBtalkJS/BBtalk">BBTalk</a>Vercel 版</li></ul><p>目前以上版本均可使用，不过可能有些版本的使用成本有点高。</p><p>今天要介绍的是另一个能提供类似功能的应用——<a href="https://github.com/usememos/memos">Memos</a><br>Memos 自己对标的竞品是 Flomo ，我们是不是把它用歪了？</p><h2 id="部署-Memos"><a href="#部署-Memos" class="headerlink" title="部署 Memos"></a>部署 Memos</h2><blockquote><p>前置条件：<br>1.一台 VPS 服务器或本地电脑（或 Docker SaaS 平台）<br>2.一点点 WebStack 技能（Docker、Nginx）</p></blockquote><p>安装<code>docker-compose-plugin</code>插件后，<code>docker compose</code>命令可以去掉中间的”<code>-</code>“，Docker Compose V1 版本已经结束生命周期。</p><p>暂时不建议把 Memos 部署到网站二级目录，如：<a href="https://example.com/memos">https://example.com/memos</a><br>而应该部署到一个二级域名，如：<a href="https://memos.example.com/">https://memos.example.com</a></p><p>1.<strong>新建 <code>docker-compose.yml</code></strong><br>一般在准备用于 Memos 的域名的目录下新建 <code>docker-compose.yml</code> 文件：<br><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /www/wwwroot/memos.example.com<span class="token function">vim</span> docker-compose.yml</code></pre><br>输入以下内容：<br><pre class="language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.0"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token key atrule">memos</span><span class="token punctuation">:</span>        <span class="token key atrule">image</span><span class="token punctuation">:</span> neosmemo/memos        <span class="token key atrule">container_name</span><span class="token punctuation">:</span> memos        <span class="token key atrule">volumes</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> ./memos/<span class="token punctuation">:</span>/var/opt/memos        <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> 5230<span class="token punctuation">:</span><span class="token number">5230</span>        <span class="token key atrule">restart</span><span class="token punctuation">:</span> always</code></pre></p><p>2.<strong>启动 Memos</strong><br>启动 Memos<br><pre class="language-bash" data-language="bash"><code class="language-bash">docker compose up -d</code></pre></p><p>等待镜像拉取完成，Memos 就运行在服务器的<code>5230</code>端口了。<br>此时，打开<code>http://127.0.0.1:5230</code>就能访问 Memos 了。<br>如果有公网 IP，那就打开<code>IP</code>+<code>端口</code>，如： <code>http://119.29.29.29:5230</code> 。<br>用域名反代 IP 见下文第 4 点。<br>常用的命令有：</p><pre class="language-bash" data-language="bash"><code class="language-bash">docker compose up -ddocker compose downdocker compose pulldocker compose up -d --force-recreate</code></pre><p>3.<strong>升级 Memos</strong></p><p>Memos 官方提供的升级命令</p><pre class="language-bash" data-language="bash"><code class="language-bash">docker-compose down <span class="token operator">&amp;&amp;</span> docker image <span class="token function">rm</span> neosmemo/memos:latest <span class="token operator">&amp;&amp;</span> docker-compose up -d</code></pre><p>会导致 Memos 在升级期间掉线，因为 <code>down</code> 了，特别是境内服务器网速不好的情况下，掉线时间会随着 <code>pull</code> 时间无限延长。</p><p>最新版 Docker 升级 Memos 的命令有改进空间：</p><pre class="language-bash" data-language="bash"><code class="language-bash">docker compose pull <span class="token operator">&amp;&amp;</span> docker compose up -d --force-recreate</code></pre><p>但是如果用了镜像加速服务，因为缓存的原因也可能有 <code>pull</code> 不到最新镜像的问题。</p><p>4.<strong>Nginx 反代</strong><br>如果打算对互联网提供 Memos 访问服务，就需要反代 Memos，一般都是用 Nginx，反代<code>5230</code>端口即可。</p><pre class="language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">^</span><span class="token operator">~</span> <span class="token operator">/</span><span class="token punctuation">&#123;</span><span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">5230</span><span class="token punctuation">;</span><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span><span class="token punctuation">;</span><span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Real<span class="token operator">-</span>IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span><span class="token keyword">proxy_set_header</span> X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span><span class="token keyword">proxy_set_header</span> REMOTE<span class="token operator">-</span>HOST <span class="token variable">$remote_addr</span><span class="token punctuation">;</span><span class="token keyword">proxy_set_header</span> Upgrade <span class="token variable">$http_upgrade</span><span class="token punctuation">;</span><span class="token keyword">proxy_set_header</span> Connection <span class="token variable">$connection_upgrade</span><span class="token punctuation">;</span><span class="token keyword">add_header</span> X<span class="token operator">-</span>Cache <span class="token variable">$upstream_cache_status</span><span class="token punctuation">;</span><span class="token comment"># cache</span><span class="token keyword">add_header</span> Cache<span class="token operator">-</span>Control no<span class="token operator">-</span>cache<span class="token punctuation">;</span><span class="token keyword">expires</span> <span class="token number">12</span>h<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>一些主机管理面板或者 NPM 反代面板提供可视化反代设置，那更简单。</p><p>5.<strong>备份数据</strong><br>在第 1 步中的<code>docker-compose.yml</code>文件中，</p><pre class="language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ./memos/<span class="token punctuation">:</span>/var/opt/memos</code></pre><p>这段就是数据持久化配置，如果不做数据持久化，Docker 容器重启后，所有 Memos 都会消失。<br>“<code>:</code>”冒号前面的内容是物理宿主机上的目录，例子中对应的目录为：</p><pre class="language-bash" data-language="bash"><code class="language-bash">/www/wwwroot/memos.example.com/memos</code></pre><p>需要备份的数据是此目录下的<code>memos_prod.db</code>文件，是一个 SQLite 数据库文件，Memos 的所有设置、用户信息、附件和 Memos 都保存在这个文件中。<br>官方提供的示例中，数据卷为家目录<code>/home/username</code>下的<code>.memos</code>目录，是一个隐藏目录，注意对比。</p><h2 id="Memos-美化代码"><a href="#Memos-美化代码" class="headerlink" title="Memos 美化代码"></a>Memos 美化代码</h2><p><img src="https://easyimage.smitten.top/i/2023/03/26/pdjv28-0.webp" alt="效果"></p><h3 id="调用-Bing-每日背景"><a href="#调用-Bing-每日背景" class="headerlink" title="调用 Bing 每日背景"></a>调用 Bing 每日背景</h3><p>适配 <code>v0.11.2</code></p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">html</span><span class="token punctuation">&#123;</span><span class="token property">background-image</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'https://bing.immmmm.com/img/bing?region=zh-CN&amp;type=image'</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>100vh<span class="token punctuation">;</span><span class="token property">background-position</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">background-size</span><span class="token punctuation">:</span>cover<span class="token punctuation">;</span><span class="token property">background-attachment</span><span class="token punctuation">:</span>fixed<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w-full.bg-zinc-100,.bg-white,.hover\:bg-white:hover,.dark .dark\:bg-zinc-700,.dark .dark\:hover\:bg-zinc-700:hover,.memo-wrapper,.bg-gray-200,.dark .memo-wrapper,.memo-editor-container</span><span class="token punctuation">&#123;</span><span class="token property">--tw-bg-opacity</span><span class="token punctuation">:</span>0.66 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.dark header.dark\:bg-zinc-800,aside.dark\:bg-zinc-800,.bg-gray-100,.dark html,.dark body</span><span class="token punctuation">&#123;</span><span class="token property">--tw-bg-opacity</span><span class="token punctuation">:</span>0 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.memo-editor-container>.memo-editor</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> transparent <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>加送界面细节微调：</p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.status-text</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>10px <span class="token important">!important</span><span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token function">rgb</span><span class="token punctuation">(</span>156<span class="token punctuation">,</span>163<span class="token punctuation">,</span>175<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.tag-span,.dark .tag-span</span><span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span>0px 6px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token function">rgb</span><span class="token punctuation">(</span>22<span class="token punctuation">,</span>163<span class="token punctuation">,</span>74<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>12px <span class="token important">!important</span><span class="token punctuation">;</span><span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token function">calc</span><span class="token punctuation">(</span>10 / 12<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">transform-origin</span><span class="token punctuation">:</span> left center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.memo-content-text .link</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token function">rgb</span><span class="token punctuation">(</span>22<span class="token punctuation">,</span>163<span class="token punctuation">,</span>74<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><span class="token property">margin-right</span><span class="token punctuation">:</span>-6px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">header .bg-blue-600</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span>none <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.text-lg</span> <span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 1rem <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.header-wrapper,.sidebar-wrapper</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 11rem <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.filter-query-container</span><span class="token punctuation">&#123;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span>0.5rem<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h3 id="加载「霞鹜文楷」在线字体"><a href="#加载「霞鹜文楷」在线字体" class="headerlink" title="加载「霞鹜文楷」在线字体"></a>加载「霞鹜文楷」在线字体</h3><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">body</span><span class="token punctuation">&#123;</span><span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"LXGW WenKai Screen"</span><span class="token punctuation">,</span> sans-serif <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">changeFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"link"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  link<span class="token punctuation">.</span>rel <span class="token operator">=</span> <span class="token string">"stylesheet"</span><span class="token punctuation">;</span>  link<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"text/css"</span><span class="token punctuation">;</span>  link<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">"https://cdn.staticfile.org/lxgw-wenkai-screen-webfont/1.6.0/lxgwwenkaiscreen.css"</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">changeFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="Hexo-博客嵌入"><a href="#Hexo-博客嵌入" class="headerlink" title="Hexo 博客嵌入"></a>Hexo 博客嵌入</h2><p>懒得搬过来了<br>参考链接:<br><a href="https://blog.leonus.cn/2023/memeos.html">基于Memos实现说说和清单功能。 | Leonus</a><br><a href="https://blog.leonus.cn/2023/photos.html">基于memos实现动态相册 | Leonus</a></p><p>可能大家需要自行适配一下自己的博客，相信以大家的聪明才智肯定没问题的啦。</p><h2 id="Memos-Awesome"><a href="#Memos-Awesome" class="headerlink" title="Memos Awesome"></a>Memos Awesome</h2><ul><li><a href="https://memos.top/">https://memos.top</a></li><li>Discuss in <a href="https://t.me/+-_tNF1k70UU4ZTc9">Telegram</a> 👾</li><li>Docker Hub：<a href="https://hub.docker.com/r/neosmemo/memos">https://hub.docker.com/r/neosmemo/memos</a></li><li>Docker Hub Nightly：<a href="https://hub.docker.com/r/eallion/memos">https://hub.docker.com/r/eallion/memos</a></li><li>Moe Memos 客户端：<a href="https://memos.moe/">https://memos.moe/</a></li><li>Memos-bber Chrome 扩展：<a href="https://github.com/lmm214/memos-bber">https://github.com/lmm214/memos-bber</a></li><li>Memos 微信小程序：<a href="https://github.com/Rabithua/memos_wmp">https://github.com/Rabithua/memos_wmp</a></li><li>Telegram Bot：<a href="https://github.com/qazxcdswe123/telegramMemoBot">https://github.com/qazxcdswe123/telegramMemoBot</a></li><li><a href="https://immmmm.com/bbs-by-memos/">哔哔广场</a>：<a href="https://immmmm.com/bbs/">https://immmmm.com/bbs/</a></li><li><a href="https://github.com/usememos/memos/discussions/315">「分享」Android 使用 HTTP Shortcuts 录入笔记</a></li><li><a href="https://github.com/usememos/memos/discussions/52">「分享」使用 iOS 快捷指令录入笔记，支持多图上传，支持标签选择</a></li><li><a href="https://github.com/usememos/memos/discussions/451">「分享」在 Fly.io 平台上搭建 memos 并自动备份到 B2/S3</a></li><li><a href="https://immmmm.com/memos-api-description/">Memos API 非官方不完全说明：：木木木木木 (immmmm.com)</a></li><li><a href="https://memosweb.yct.ee/">Memos Web (yct.ee)</a></li><li><a href="https://github.com/Quorafind/Obsidian-Memos">Obsidian-Memos</a></li></ul><h2 id="Some-Tips"><a href="#Some-Tips" class="headerlink" title="Some Tips"></a>Some Tips</h2><ol><li>发图尽量把图片传到第三方图床，（至少近期版本）别上传到 Memos 资源库。</li><li>附件也一样别传到 Memos 资源库，可以传到第三方网盘，贴上分享链接。</li><li>备份<code>memos_prod.db</code>数据库遵循两地三中心原则，多处备份，且是单向的。</li><li>如果你意识不到数据对你有多珍贵或重要，用 SaaS 服务即可，不用自建。</li><li>没有那么多人来看你的 Memos，自娱自乐即可。</li><li>如果要用 Memos 里的 Ask AI 可通过<a href="https://github.com/noobnooc/noobnooc/discussions/9">自建 OpenAI API Host</a> 在墙内使用。</li></ol>]]></content>
    
    
    <summary type="html">总结关于目前Memos的一些用法</summary>
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Memos" scheme="https://www.smitten.top/tags/Memos/"/>
    
  </entry>
  
  <entry>
    <title>People Die, but Long Live GitHub</title>
    <link href="https://www.smitten.top/posts/GitHubNeverDie.html"/>
    <id>https://www.smitten.top/posts/GitHubNeverDie.html</id>
    <published>2023-03-17T19:15:03.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>不知道有没有人注意到，Joe Armstrong 最近几个月都在忙着迁移博客到 <a href="https://tiddlywiki.com/">TiddlyWiki</a>。我很早就关注了他的 Twitter，然而之前并没多想。听闻大师在 4 月 20 号去世，我才反应过来，原来他之前的举动是在未雨绸缪。</p><p><img src="https://image-laike9m.oss-cn-beijing.aliyuncs.com/joe_blog.png" alt></p><p>TiddlyWiki 是个单文件的 Wiki 系统，但这并不重要。重要的是，<strong>你把信息存在哪？</strong>如果你希望存储一段信息，让 100 年后的人也能访问，要怎么做？</p><ul><li>Facebook, Twitter, 微博？不要说 100 年，我都怀疑 20 年后它们还在不在；</li><li>Google Cloud, Amazon, 阿里云 + 个人域名？他们大概会存在地更久一些。但没有人能保证不出事故，比如之前的腾讯云事件，比如万一服务器被入侵，黑客把文件删了。还有，你怎么让信息能一直被访问？域名会过期。到某个时候，跑着旧版本操作系统的机器也可能被强制下线或升级，你的服务一定能够在新版本正常运行吗？</li><li>Dropbox, Google Drive, 百度网盘。同样地，这就要看你信不信这些公司一百年后还存在了，哦不对，他们即使还在，服务也可能早关了(望向 Google</li><li>Wiki。Wiki 很好，但并不适合存储个人信息，且可能被删改。</li><li>去中心化存储，比如区块链。说实话，我对区块链了解有限，但直觉上，我怀疑它能否帮助我们达成目标。对比另一个去中心化的例子：BT。当你要下一些老动画或者电影的时候，拖不下来是常事，因为”死种”了。这才几年呢。当然或许区块链有某种神奇的魔法可以解决这个问题？欢迎了解的朋友们补充。</li></ul><p><strong>所以，我们还有什么选择？想来想去，也只有 GitHub 了。</strong></p><p>GitHub 已经成为互联网最重要的基础设施之一，有太多人，太多事都直接或间接地依赖于 GitHub，除非人类在未来完全不需要开源代码(这显然不可能)，否则我想不出 GitHub 有关闭的可能。对 GitHub 来说，存在 100 年简直是小意思，500 年也不是不可能。这是我的预言，不一定准确，但我还挺有信心的。</p><p>不管怎么说，对我们的目标 100 年来说，GitHub 完全可以胜任。除了服务本身的持久性，GitHub 还有两个独特优势：</p><ul><li>Git。Git 能保存所有历史。</li><li>Fork。就算黑客黑进了一个账户，删掉 repo，他能把所有 fork 都删干净吗？</li></ul><p>综上所述，目前来看，我认为 GitHub 是在百年尺度上存储信息并让其能被访问的<strong>唯一</strong>途径。未来也许会有 option 2, option 3 出现，但 GitHub 作为 option 1 依然会存在。我相信，Joe 用 GitHub 来 host 博客绝不是突发奇想，他一定是在了解自己的身体状况的前提下，思考了一遍现存所有存储方式，然后同样发现只有 GitHub 才能满足需求。</p><p>人总想留下某种痕迹，证明自己活过，然而事实上，99.999% 的普通人就这么被历史遗忘了——曾经是这样。我们处在信息时代的早期，同样也处在人类文明的早期。从今往后，被数字化的东西只会越来越多。既然有人意识到了 GitHub 的独特性，随着时间推移，越来越多的人总会意识到。那时候会发生什么？自然是，越来越多的人会把自己的信息搬到 GitHub 上，依托 GitHub 实现曾经人们可望而不可及的”永生”。人有两次死亡，第一次是肉体，第二次是被人忘记。我忘记这句话是谁说的了，但现在我们已经可以回避第二次。只要 GitHub 支持，就一定会有人这么做，至少我是其中之一。几十几百年后，GitHub 将成为世界上最大的数字公墓，注册用户大部分都已去世，然而个人主页，项目，commit 历史 还述说着他们生前做过的事——就比如 Joe 的<a href="https://joearms.github.io/">博客</a>。这虽然是个比较 creepy 的推论，但从另一个角度想，却证明了人类的巨大进步：对抗死亡是人类文明的永恒主题，而我们已经实现了阶段性胜利。现在是文章、照片、视频，也许还有以个人习惯作为输入训练的模型。再往后呢？会不会有基因信息，乃至意识的完整复制呢？依托于稳定的存储，我们能做的事情实在太多了。反例是现在的一些 <a href="https://www.everplans.com/articles/the-top-10-online-memorial-websites">Memorial Websites</a>，他们把逝者的信息放在自己网站上供亲友吊唁。这不能说没用，但在我看来去使用这类服务实在有些草率——就算他们再信誓旦旦，也摆脱不了某一天关站的风险，那时候还指望他们好好管理这些数据？没可能的。</p><p>既然 GitHub 变成数字公墓是一种必然，我对他们的唯一希望，就是保持某种道德义务。我完全可以想象某一天他们出台一个政策，把二十年内没有活动迹象的账户全部 archive，GitHub Pages 全部下线。那就实在太恐怖了。我祈祷那一天不会到来。</p><hr><p>原文链接：<a href="https://laike9m.com/blog/people-die-but-long-live-github,122/">People Die, but Long Live GitHub - laike9m’s blog</a></p>]]></content>
    
    
    <summary type="html">基于Github电子化档案的一些思考</summary>
    
    
    
    <category term="转载" scheme="https://www.smitten.top/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="GitHub" scheme="https://www.smitten.top/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Keep running</title>
    <link href="https://www.smitten.top/posts/KeepRunning.html"/>
    <id>https://www.smitten.top/posts/KeepRunning.html</id>
    <published>2023-03-15T20:09:03.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://easyimage.smitten.top/i/2023/03/15/ucu3i6-0.webp" alt="Barry Running"><br>保持每天运动是个好习惯，这几天我在刷 Github 时就刷到了这么一个可以将我们平时在各种运动 APP 里的数据做一个前端可视化的这么一个项目，于是我也尝试动手搭了一个，下面我就来分享一下我是如何实现的，本文主要分享配置 Keep 的操作。</p><h2 id="Clone-主项目到本地"><a href="#Clone-主项目到本地" class="headerlink" title="Clone 主项目到本地"></a>Clone 主项目到本地</h2><p>Running Page 是 <a href="https://github.com/yihong0618">@yihong0618</a> 创立的一个开源项目，通过这个项目可以从多个主流跑步平台同步锻炼数据，自动生成一个地图可视化的跑步页面。通过 GitHub Pages 可以快速的完成自动部署。</p><p>项目地址：<a href="https://github.com/yihong0618/running_page">https://github.com/yihong0618/running_page</a><br>我们可以将该仓库 fork 到自己的仓库在 clone 下来，或者直接 clone 下载传到自己新建的仓库。</p><h2 id="配置项目文件"><a href="#配置项目文件" class="headerlink" title="配置项目文件"></a>配置项目文件</h2><pre><code>注意：压缩包当中包含多个以 . 开头的文件名称，在 macOS 系统下需要使用快捷键「Command + shift + .」显示隐藏文件。</code></pre><h3 id="1-在根目录中找到「gatsby-config-js」，配置个性化选项。"><a href="#1-在根目录中找到「gatsby-config-js」，配置个性化选项。" class="headerlink" title="1.在根目录中找到「gatsby-config.js」，配置个性化选项。"></a>1.在根目录中找到「gatsby-config.js」，配置个性化选项。</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">pathPrefix</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>   <span class="token comment"># 如需使用自定义域名，此处需要修改为/</span><span class="token key atrule">siteMetadata</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>  <span class="token key atrule">siteTitle</span><span class="token punctuation">:</span> <span class="token string">'Running Page'</span><span class="token punctuation">,</span>   <span class="token comment"># 站点标题</span>  <span class="token key atrule">siteUrl</span><span class="token punctuation">:</span> <span class="token string">'https://running.domain.com'</span><span class="token punctuation">,</span>   <span class="token comment"># 站点域名</span>  <span class="token key atrule">logo</span><span class="token punctuation">:</span> <span class="token string">'https://q.qlogo.cn/headimg_dl?bs=qq&amp;dst_uin=*********&amp;spec=640'</span><span class="token punctuation">,</span>   <span class="token comment"># 左上角头像</span>  <span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">'Just Do It'</span><span class="token punctuation">,</span>  <span class="token key atrule">navLinks</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'Blog'</span><span class="token punctuation">,</span>   <span class="token comment"># 右上角导航栏</span>      <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">'https://blog.domain.com'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><h3 id="2-打开「-github」-gt-「workflows」-gt-「run-data-sync-yml」文件，修改平台类型及信息。不同平台的配置信息可以前往-说明页面-进行查看。"><a href="#2-打开「-github」-gt-「workflows」-gt-「run-data-sync-yml」文件，修改平台类型及信息。不同平台的配置信息可以前往-说明页面-进行查看。" class="headerlink" title="2.打开「.github」&gt;「workflows」&gt;「run_data_sync.yml」文件，修改平台类型及信息。不同平台的配置信息可以前往 说明页面 进行查看。"></a>2.打开「.github」&gt;「workflows」&gt;「run_data_sync.yml」文件，修改平台类型及信息。不同平台的配置信息可以前往 <a href="https://github.com/yihong0618/running_page/blob/master/README-CN.md#%E6%94%AF%E6%8C%81">说明页面</a> 进行查看。</h3><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Run Data Sync<span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>  <span class="token key atrule">schedule</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">cron</span><span class="token punctuation">:</span> <span class="token string">"0 0 * * *"</span><span class="token key atrule">env</span><span class="token punctuation">:</span>  <span class="token comment"># please change to your own config.</span>  <span class="token key atrule">RUN_TYPE</span><span class="token punctuation">:</span> keep <span class="token comment"># support strava/nike/garmin/garmin_cn/keep/only_gpx/nike_to_strava/strava_to_garmin/strava_to_garmin_cn/garmin_to_strava/garmin_to_strava_cn, Please change the 'pass' it to your own</span>  <span class="token key atrule">ATHLETE</span><span class="token punctuation">:</span> BarryYangi  <span class="token key atrule">TITLE</span><span class="token punctuation">:</span> Barry Running  <span class="token key atrule">MIN_GRID_DISTANCE</span><span class="token punctuation">:</span> <span class="token number">4</span> <span class="token comment"># change min distance here</span>  <span class="token key atrule">TITLE_GRID</span><span class="token punctuation">:</span> Over 4km Runs <span class="token comment"># also here</span>  <span class="token key atrule">GITHUB_NAME</span><span class="token punctuation">:</span> BarryYangi  <span class="token key atrule">GITHUB_EMAIL</span><span class="token punctuation">:</span> 2059484047@qq.com<span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">sync</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> Sync    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Python        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>python@v1        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">python-version</span><span class="token punctuation">:</span> <span class="token number">3.7</span>      <span class="token comment"># from pdm</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set Variables        <span class="token key atrule">id</span><span class="token punctuation">:</span> set_variables        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_OUTPUT          echo "PIP_CACHE=$(pip cache dir)" >> $GITHUB_OUTPUT</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Cache PIP        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v2        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">path</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> steps.set_variables.outputs.PIP_CACHE <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>          <span class="token key atrule">key</span><span class="token punctuation">:</span> Ubuntu<span class="token punctuation">-</span>pip<span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> steps.set_variables.outputs.PY <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python -m pip install --upgrade pip          pip install -r requirements.txt</span>        <span class="token key atrule">if</span><span class="token punctuation">:</span> steps.pip<span class="token punctuation">-</span>cache.outputs.cache<span class="token punctuation">-</span>hit <span class="token tag">!=</span> 'true'      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Nike script        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'nike'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/nike_sync.py $&#123;&#123; secrets.NIKE_REFRESH_TOKEN &#125;&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Nike to Strava(Run with nike data backup and show with strava)        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'nike_to_strava'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/nike_to_strava_sync.py $&#123;&#123; secrets.NIKE_REFRESH_TOKEN &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_ID &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_SECRET &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_REFRESH_TOKEN &#125;&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Keep script        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'keep'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/keep_sync.py $&#123;&#123; secrets.KEEP_MOBILE &#125;&#125; $&#123;&#123; secrets.KEEP_PASSWORD &#125;&#125; --with-gpx</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Strava script        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'strava'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/strava_sync.py $&#123;&#123; secrets.STRAVA_CLIENT_ID &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_SECRET &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_REFRESH_TOKEN &#125;&#125;</span>      <span class="token comment"># for garmin if you want generate `tcx` you can add --tcx command in the args.</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Garmin script        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'garmin'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/garmin_sync.py $&#123;&#123; secrets.GARMIN_EMAIL &#125;&#125; $&#123;&#123; secrets.GARMIN_PASSWORD &#125;&#125;</span>        <span class="token comment"># If you only want to sync `type running` add args --only-run, default script is to sync all data (rides and runs).</span>        <span class="token comment"># python scripts/garmin_sync.py $&#123;&#123; secrets.GARMIN_EMAIL &#125;&#125; $&#123;&#123; secrets.GARMIN_PASSWORD &#125;&#125; --only-run</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Garmin CN script        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'garmin_cn'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/garmin_sync.py $&#123;&#123; secrets.GARMIN_CN_EMAIL &#125;&#125; $&#123;&#123; secrets.GARMIN_CN_PASSWORD &#125;&#125; --is-cn</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Only GPX script        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'only_gpx'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/gpx_sync.py</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Strava to Garmin(Run with strava(or others upload to strava) data backup in Garmin)        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'strava_to_garmin'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/strava_to_garmin_sync.py $&#123;&#123; secrets.STRAVA_CLIENT_ID &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_SECRET &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_REFRESH_TOKEN &#125;&#125;  $&#123;&#123; secrets.GARMIN_EMAIL &#125;&#125; $&#123;&#123; secrets.GARMIN_PASSWORD &#125;&#125; $&#123;&#123; secrets.STRAVA_EMAIL &#125;&#125; $&#123;&#123; secrets.STRAVA_PASSWORD &#125;&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Strava to Garmin<span class="token punctuation">-</span>cn(Run with strava(or others upload to strava) data backup in Garmin<span class="token punctuation">-</span>cn)        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'strava_to_garmin_cn'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/strava_to_garmin_sync.py $&#123;&#123; secrets.STRAVA_CLIENT_ID &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_SECRET &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_REFRESH_TOKEN &#125;&#125;  $&#123;&#123; secrets.GARMIN_CN_EMAIL &#125;&#125; $&#123;&#123; secrets.GARMIN_CN_PASSWORD &#125;&#125; $&#123;&#123; secrets.STRAVA_EMAIL &#125;&#125; $&#123;&#123; secrets.STRAVA_PASSWORD &#125;&#125; --is-cn</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Garmin<span class="token punctuation">-</span>cn to Strava(Run with Garmin data backup in Strava)        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'garmin_to_strava_cn'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/garmin_to_strava_sync.py $&#123;&#123; secrets.STRAVA_CLIENT_ID &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_SECRET &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_REFRESH_TOKEN &#125;&#125;  $&#123;&#123; secrets.GARMIN_CN_EMAIL &#125;&#125; $&#123;&#123; secrets.GARMIN_CN_PASSWORD &#125;&#125; --is-cn</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Garmin to Strava(Run with Garmin data backup in Strava)        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'garmin_to_strava'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/garmin_to_strava_sync.py $&#123;&#123; secrets.STRAVA_CLIENT_ID &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_SECRET &#125;&#125; $&#123;&#123; secrets.STRAVA_CLIENT_REFRESH_TOKEN &#125;&#125;  $&#123;&#123; secrets.GARMIN_EMAIL &#125;&#125; $&#123;&#123; secrets.GARMIN_PASSWORD &#125;&#125;</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run sync Tulipsport script        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE == 'tulipsport'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/tulipsport_sync.py $&#123;&#123; secrets.TULIPSPORT_TOKEN &#125;&#125; --with-gpx</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Make svg GitHub profile        <span class="token key atrule">if</span><span class="token punctuation">:</span> env.RUN_TYPE <span class="token tag">!=</span> 'pass'        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          python scripts/gen_svg.py --from-db --title "$&#123;&#123; env.TITLE &#125;&#125;" --type github --athlete "$&#123;&#123; env.ATHLETE &#125;&#125;" --special-distance 10 --special-distance2 20 --special-color yellow --special-color2 red --output assets/github.svg --use-localtime --min-distance 0.5          python scripts/gen_svg.py --from-db --title "$&#123;&#123; env.TITLE_GRID &#125;&#125;" --type grid --athlete "$&#123;&#123; env.ATHLETE &#125;&#125;" --output assets/grid.svg --special-color yellow --special-color2 red --special-distance 20 --special-distance2 40 --use-localtime --min-distance "$&#123;&#123; env.MIN_GRID_DISTANCE &#125;&#125;"          python scripts/gen_svg.py --from-db --type circular --use-localtime          python scripts/gen_svg.py --from-db --year $(date +"%Y")  --language zh_CN --title "$(date +"%Y") Running" --type github --athlete "$&#123;&#123; env.ATHLETE &#125;&#125;" --special-distance 10 --special-distance2 20 --special-color yellow --special-color2 red --output assets/github_$(date +"%Y").svg --use-localtime --min-distance 0.5</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy site        <span class="token key atrule">uses</span><span class="token punctuation">:</span> peaceiris/actions<span class="token punctuation">-</span>gh<span class="token punctuation">-</span>pages@v3        <span class="token key atrule">with</span><span class="token punctuation">:</span>            <span class="token key atrule">github_token</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.MY_GIT_TOKEN <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>            <span class="token key atrule">publish_branch</span><span class="token punctuation">:</span> vercel<span class="token punctuation">-</span>pages            <span class="token key atrule">publish_dir</span><span class="token punctuation">:</span> .            <span class="token key atrule">force_orphan</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>            <span class="token comment"># keep_files: true</span></code></pre><p>这里推荐我们删掉剩下三个 workflows 配置 yml，因为我们不需要，后面我们将会将站点配置到 vercel 上，然后复制我的 <code>run_data_sync.yml</code> 文件内容到该文件覆盖。</p><h3 id="3-找到自己所对应的平台需要完善的帐户信息"><a href="#3-找到自己所对应的平台需要完善的帐户信息" class="headerlink" title="3.找到自己所对应的平台需要完善的帐户信息"></a>3.找到自己所对应的平台需要完善的帐户信息</h3><p>列如 keep：<br><pre class="language-bash" data-language="bash"><code class="language-bash">python scripts/keep_sync.py <span class="token variable">$&#123;&#123; secrets.KEEP_MOBILE &#125;</span><span class="token punctuation">&#125;</span> <span class="token variable">$&#123;&#123; secrets.KEEP_PASSWORD &#125;</span><span class="token punctuation">&#125;</span> --with-gpx</code></pre><br>我们需要能够登录 keep 的手机账号以及密码，随后我们需要用到。</p><h3 id="4-Running-Page-使用-Mapbox-进行地图展示，需要前往-Mapbox-站点-注册一个开发者账号。"><a href="#4-Running-Page-使用-Mapbox-进行地图展示，需要前往-Mapbox-站点-注册一个开发者账号。" class="headerlink" title="4.Running Page 使用 Mapbox 进行地图展示，需要前往 Mapbox 站点 注册一个开发者账号。"></a>4.Running Page 使用 Mapbox 进行地图展示，需要前往 <a href="https://www.mapbox.com/">Mapbox 站点</a> 注册一个开发者账号。</h3><p>登录账号后，选择「Create a token」创建一个令牌，并完善相关信息。提交后会得到一串令牌信息，编辑「src」&gt;「utils」&gt;「const.js」文件，将自己的令牌替换到 MAPBOX_TOKEN 当中。</p><h3 id="5-保存文件并且-push-到自己的-git-仓库"><a href="#5-保存文件并且-push-到自己的-git-仓库" class="headerlink" title="5.保存文件并且 push 到自己的 git 仓库"></a>5.保存文件并且 push 到自己的 git 仓库</h3><h2 id="Git-仓库-secrets-配置"><a href="#Git-仓库-secrets-配置" class="headerlink" title="Git 仓库 secrets 配置"></a>Git 仓库 secrets 配置</h2><p>进入自己的仓库，依次点击 Settings-&gt;Secrets and variables-&gt;Actions-&gt;New repository secret 新建如下图三个 secrets<br><img src="https://easyimage.smitten.top/i/2023/03/15/vvwxu8-0.webp" alt="secrets"></p><p>其中前两项为 keep 的手机账号和密码，最后一项为 github 的 token，如果没有的话可以点击头像-&gt;Settings-&gt;Developer settings-&gt;Personal access tokens (classic)-&gt;Generate new token<br>创建的时候可以把所有权限都勾了，然后创建完就复制记下来，这个 token 是值出现一次的，看完以后就再也不能看了，然后把这个 token 放到前面我们仓库的哪个 secret 里去即可。</p><h2 id="配置-Vercel"><a href="#配置-Vercel" class="headerlink" title="配置 Vercel"></a>配置 Vercel</h2><p>进入我们的 <a href="https://vercel.com/">Vercel</a> 没有账号的注册一个然后绑定我们的 GitHub ，绑定完直接点击刚刚我们新建的仓库导入即可。<br>然后我们回到 Github 的仓库点击 Actions，按如下步骤手动触发一次工作流。<br><img src="https://easyimage.smitten.top/i/2023/03/15/w1jap5-0.webp" alt="Actions"></p><p>等待工作流跑完如果是勾就说明没问题了，这个时候我们会发现多出来了一个 vercel-pages 分支，这个分支我们用来在 vercel 上部署，我们来到 vercel 的本项目的 setting 页面更改默认的部署分支为 vercel-pages，步骤如下图：<br><img src="https://easyimage.smitten.top/i/2023/03/15/w4jupa-0.webp" alt></p><p>保存完成后我们需要在去 vercel-pages 分支在 push 一次 vercel 这边才会真正应用，我们只需在 github 仓库的 Actions 页面重新执行一次我们刚刚操作过的哪个工作流即可。</p><p>等待工作流跑完，然后你回到 vercel 页面等待部署完你就会发现部署分支已经变为了 vercel-pages</p><h2 id="vercel-绑定域名"><a href="#vercel-绑定域名" class="headerlink" title="vercel 绑定域名"></a>vercel 绑定域名</h2><p>如果你想将本页面分享给你的朋友看这样肯定是不够优雅的，哪如果你有自己的域名可以到 vercel 的 Setting 页面的 Domains 选项绑定自己的域名。</p><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>在此希望这个项目能带给我们的不仅仅是一次简单的项目部署经验，能让我们借此养成一个良好的运动习惯才是最重要的，然后记录下来，将来可以去追溯当下。<br>Just enjoy it.</p>]]></content>
    
    
    <summary type="html">将我们平时在各种运动 APP 里的跑步数据做前端可视化</summary>
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="keep" scheme="https://www.smitten.top/tags/keep/"/>
    
    <category term="运动" scheme="https://www.smitten.top/tags/%E8%BF%90%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>优雅的通过PC接管移动设备音频</title>
    <link href="https://www.smitten.top/posts/PCVideo.html"/>
    <id>https://www.smitten.top/posts/PCVideo.html</id>
    <published>2023-03-15T15:09:03.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>可能我们在生活中偶尔会有这种需求，就比如说正在寝室或者办公室学习或者办公的时候需要听语音条或者看一个视频又不方便外放声音，而且又不想频繁换耳机（懒），这时这种场景需求就可以被满足。</p><h2 id="个人应用场景参考"><a href="#个人应用场景参考" class="headerlink" title="个人应用场景参考"></a>个人应用场景参考</h2><p>IPad 音频被电脑接管，IPad 放在旁边自动播放刷抖音、听音乐、如下：<br><img src="https://easyimage.smitten.top/i/2023/03/15/n8rtcv.webp" alt="IPad"></p><p>其他还有一些很多需求大家跟自己的实际情况而定。</p><h2 id="Windows-平台"><a href="#Windows-平台" class="headerlink" title="Windows 平台"></a>Windows 平台</h2><p>在 win10 以及 win10 以上的平台上，我们可以通过一款软件很轻松的做到，我们只需要在微软应用商店上下载一款名为 <a href="https://www.microsoft.com/zh-cn/p/bluetooth-audio-receiver/9n9wclwdqs5j">Bluetooth Audio Receiver</a> 的软件即可。<br>Bluetooth Audio Receiver 的使用非常简单，有两个决条件：</p><ol><li>电脑必须拥有蓝牙功能，或者有一个蓝牙适配器。</li><li>将手机（或支持 A2DP 的播放设备）与电脑通过蓝牙配对、连接。</li></ol><p>然后运行 Bluetooth Audio Receiver，在列表中选择想要播放音乐的手机，点击 <strong>Open Connection</strong>，最后去手机播放音乐即可。<br><img src="https://easyimage.smitten.top/i/2023/03/15/nf3oop-0.webp" alt="Bluetooth Audio Receiver"></p><h2 id="Linux-平台"><a href="#Linux-平台" class="headerlink" title="Linux 平台"></a>Linux 平台</h2><p>在 Linux 平台上可以会稍微麻烦一点，不过相信你都用上 Linux 了，输几行命令来装几个软件还是小 kiss 的。<br>首先，确保您已经在 Linux 系统上安装了 Bluez、Pulseaudio 和 pulseaudio 蓝牙模块。大多数 Linux 发行版都预装了这些工具。以防万一它们丢失，请按如下所示安装它们。</p><h3 id="在-Linux-上安装-Bluez"><a href="#在-Linux-上安装-Bluez" class="headerlink" title="在 Linux 上安装 Bluez"></a>在 Linux 上安装 Bluez</h3><p>要在 Arch Linux 及其变体上安装 Bluez，请运行：<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> pacman -S bluez</code></pre><br>在 Debian、Ubuntu 上：<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> bluez</code></pre><br>在 Fedora、CentOS、RHEL 上：<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> dnf <span class="token function">install</span> bluez</code></pre><br>或者<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> yum <span class="token function">install</span> bluez</code></pre><br>On openSUSE: 在 openSUSE 上：<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">zypper</span> <span class="token function">install</span> bluez</code></pre></p><p>安装 Bluez 后，确保蓝牙服务已启动并在引导时启用。</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> systemctl start bluetooth</code></pre><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> bluetooth</code></pre><p>要验证蓝牙状态，请运行：<br><pre class="language-baash" data-language="baash"><code class="language-baash">$ systemctl status bluetooth</code></pre></p><h3 id="在-Linux-上安装-Pulseaudio"><a href="#在-Linux-上安装-Pulseaudio" class="headerlink" title="在 Linux 上安装 Pulseaudio"></a>在 Linux 上安装 Pulseaudio</h3><p>PulseAudio 是一个开源、跨平台、支持网络的声音服务器程序，通过 freedesktop.org 项目分发。它支持 Linux，以及各种 BSD 发行版，例如 FreeBSD 和 OpenBSD，macOS。 Pulseaudio 在大多数 Linux 发行版的默认存储库中可用。要通过蓝牙播放，我们应该安装 pulseaudio 蓝牙模块。</p><p>运行以下命令在 Arch Linux 及其变体（如 EndeavourOS 和 Manjaro Linux）上安装 Pulseaudio 和其他所需程序：<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> pacman -S pulseaudio pavucontrol pulseaudio-bluetooth</code></pre></p><p>在 Debian、Ubuntu 和 Linux Mint 上，只需运行：<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> pulseaudio pulseaudio-utils pavucontrol pulseaudio-module-bluetooth</code></pre></p><p>Fedora、RHEL 8、AlmaLinux 8、Rocky Linux 8：<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> dnf <span class="token function">install</span> pulseaudio pulseaudio-utils pavucontrol pulseaudio-module-bluetooth</code></pre></p><p>CentOS 7.x., RHEL 7.x: CentOS 7.x.、RHEL 7.x：<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> yum <span class="token function">install</span> pulseaudio pulseaudio-utils pavucontrol pulseaudio-module-bluetooth</code></pre></p><p>openSUSE:<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">zypper</span> <span class="token function">install</span> pulseaudio pulseaudio-utils pavucontrol pulseaudio-module-bluetooth</code></pre></p><h3 id="将-Linux-PC-与手机配对"><a href="#将-Linux-PC-与手机配对" class="headerlink" title="将 Linux PC 与手机配对"></a>将 Linux PC 与手机配对</h3><p> 确保手机已与您的 PC 配对。蓝牙配对非常简单！你可能已经做过很多次了。这就不多说了，如果幸运的话，连接后就可以通过电脑听到手机的声音了。如果没用的话你可能还得继续下续的操作。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>创建一个名为 ~/.config/pulse/system.pa 的文件：<br><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">mkdir</span> ~/.config/pulse/</code></pre></p><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">nano</span> ~/.config/pulse/system.pa</code></pre><p>在其中添加以下行：</p><pre class="language-bash" data-language="bash"><code class="language-bash">.include /etc/pulse/system.paload-module module-bluetooth-policyload-module module-bluetooth-discover</code></pre><p>保存并关闭文件。使用命令重新启动蓝牙服务以使更改生效：</p><pre class="language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> systemctl restart bluetooth</code></pre><p>您可以直接编辑“/etc/pulse/system.pa”文件并进行更改。但是，强烈建议不要编辑系统范围的配置文件，而是编辑用户配置文件。这就是为什么您应该创建“~/.config/pulse”目录，然后将系统配置文件复制到其中并根据您的需要进行编辑。~/.config/pulse/default.pa 文件不是完整的副本，而是可以以“.include /etc/pulse/default.pa”行开始，然后覆盖默认值。这样我们就可以避免将来 pulseaudio 更新时出现问题。</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>至此你已经完成了所有操作。<br>Just enjoy it！<br>    参考文章：<a href="https://ostechnix.com/turn-your-linux-pc-into-bluetooth-speakers-for-your-phone/">Turn Your Linux PC Into Bluetooth Speakers For Your Phone - OSTechNix</a></p>]]></content>
    
    
    <summary type="html">本文简单总结如何快速通过PC接管移动设备音频</summary>
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="音频" scheme="https://www.smitten.top/tags/%E9%9F%B3%E9%A2%91/"/>
    
    <category term="蓝牙" scheme="https://www.smitten.top/tags/%E8%93%9D%E7%89%99/"/>
    
  </entry>
  
  <entry>
    <title>论Linux to go</title>
    <link href="https://www.smitten.top/posts/LinuxToGo.html"/>
    <id>https://www.smitten.top/posts/LinuxToGo.html</id>
    <published>2023-03-15T10:09:03.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>可闻大家应该都听说过 win to go，但是 win to go 因为对性能要求太高官方都已经停止了对这个项目的维护，虽然说当下你仍可以通过各种途径安装最新的 windows 到你的 U 盘上，但是前提是你有一个性能足够好的 U 盘，如果你不确定你的 U 盘是否合适，你可以下载一个名为<strong>WTGBench</strong>的软件来测试一下</p><h2 id="选择一个合适的-Linux-发行版"><a href="#选择一个合适的-Linux-发行版" class="headerlink" title="选择一个合适的 Linux 发行版"></a>选择一个合适的 Linux 发行版</h2><p>当下 Linux 发行版的选择课太多了，主流的有 Ubuntu、ArchLiux、Kali 等等等等，大家可以根据自己的需求选择、本文将以 Ubuntu 22.04 作为演示。</p><h2 id="制作-U-盘工具的选择"><a href="#制作-U-盘工具的选择" class="headerlink" title="制作 U 盘工具的选择"></a>制作 U 盘工具的选择</h2><p>如果你还想要 U 盘在做完系统后还能正常作为一个 U 盘来存放一些文件，你就不得不去了解一款叫 <a href="https://www.ventoy.net/cn/index.html"><strong>Ventoy</strong></a> 的神器，先按照官方文档将你的 U 盘制作为 Ventoy 启动盘，在此之后你就字需要将制作好的 U 盘虚拟盘文件扔到 U 盘里然后就能通过 Ventoy 来引导启动，详情大家可以去官方看文档，很详细，这里就不多说。</p><h2 id="安装-Ventoy-插件"><a href="#安装-Ventoy-插件" class="headerlink" title="安装 Ventoy 插件"></a>安装 Ventoy 插件</h2><p><a href="https://www.ventoy.net/cn/plugin_vhdboot.html">Plugin.WinVhdBoot . Ventoy</a><br><a href="https://www.ventoy.net/cn/plugin_wimboot.html">Plugin.wimboot . Ventoy</a><br>常用的有这两个插件，这里主要用到的是第一个，第二个如果你要以后安装 win to go 你也可以一起下下来，下载完完这两个压缩包后解压然后找到如下图所示的两个文件放到 U 盘根目录新建的<strong>ventoy</strong>目录，注意！注意！这里的<strong>v</strong>是小写的！</p><p><img src="https://easyimage.smitten.top/i/2023/03/15/smwjkm-0.webp" alt></p><h2 id="美化-Ventoy（可选）"><a href="#美化-Ventoy（可选）" class="headerlink" title="美化 Ventoy（可选）"></a>美化 Ventoy（可选）</h2><p>Ventoy 自带的 GRUB 主题我就评价一个字——<strong>丑</strong>,换一个漂亮又简洁的 <a href="https://www.gnome-look.org/p/1482847">Distro Theme</a> 吧。</p><p>Files 往下翻找到 arch.tar，下载解压到 <code>/ventoy/themes/arch</code> 里，进 VentoyPlugson 修改配置。</p><h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><p>去官网下载即可，<a href="https://ubuntu.com/#download">Enterprise Open Source and Linux | Ubuntu</a>，下载最新 LTS 版本。</p><h2 id="下载-Oracle-VM-VirtualBox-制作系统"><a href="#下载-Oracle-VM-VirtualBox-制作系统" class="headerlink" title="下载 Oracle VM VirtualBox 制作系统"></a>下载 Oracle VM VirtualBox 制作系统</h2><p><a href="https://www.virtualbox.org/wiki/Downloads">官网</a>下载对应电脑系统的版本即可</p><h3 id="安装完后开始制作系统"><a href="#安装完后开始制作系统" class="headerlink" title="安装完后开始制作系统"></a>安装完后开始制作系统</h3><p>按下图步骤先新建一个虚拟<strong>vdi</strong>格式的虚拟硬盘，这里一定要注意要选<strong>固定大小</strong>的！<br><img src="https://easyimage.smitten.top/i/2023/03/15/sstqsc-0.webp" alt="VM"></p><p>磁盘创建完后点击三条杠开始回到欢迎界面新建虚拟电脑步骤如下图：<br><img src="https://easyimage.smitten.top/i/2023/03/15/sul6rz-0.webp" alt><br>虚拟硬盘注意选择我们刚刚新建的。</p><p>创建完成后点击设置确认启用 EFI 已勾选。<br><img src="https://easyimage.smitten.top/i/2023/03/15/swfr6h-0.webp" alt></p><p>然后在如下位置添加我们下载的 Linux 镜像文件<br><img src="https://easyimage.smitten.top/i/2023/03/15/sxceh3-0.webp" alt></p><p>设置完成点击 OK 应用设置，然后点击启动<br>如果进入 UEFI 界面进不去系统的话输入 <code>exit</code> 退出然后在 BIOS 里选择 CDROM 作为我们的启动项。</p><p>然后正常安装，注意的地方有我们需要手动分区，所以在选择安装位置的时候我们选择下面哪个选项<br>我的分区设置如下：<br><img src="https://easyimage.smitten.top/i/2023/03/15/szvr7a-0.webp" alt></p><p><img src="https://easyimage.smitten.top/i/2023/03/15/szzy0x-0.webp" alt></p><p>安装完成后进入系统在系统内我们还需安装适配 Ventoy 的插件<br>Linux 浏览器进入 <a href="https://github.com/ventoy/vtoyboot/releases">Releases · ventoy/vtoyboot</a> 下载 iso 文件，解压、终端进入目录输入以下命令来安装：<br><img src="https://easyimage.smitten.top/i/2023/03/15/t26qb3-0.webp" alt></p><h3 id="将-vdi-虚拟硬盘文件拷贝到-U-盘"><a href="#将-vdi-虚拟硬盘文件拷贝到-U-盘" class="headerlink" title="将 vdi 虚拟硬盘文件拷贝到 U 盘"></a>将 vdi 虚拟硬盘文件拷贝到 U 盘</h3><p>将 vdi 虚拟硬盘文件拷贝到 U 盘，并且在文件后加上 <code>.vtoy</code> 后缀</p><h2 id="进入-BIOS-关闭安全启动"><a href="#进入-BIOS-关闭安全启动" class="headerlink" title="进入 BIOS 关闭安全启动"></a>进入 BIOS 关闭安全启动</h2><p>这时重启电脑并且并且进入 BIOS，不同型号的主板的按键不同，然后关闭安全启动，不懂大家可就自行百度。</p><h2 id="重启并且选择-U-盘启动"><a href="#重启并且选择-U-盘启动" class="headerlink" title="重启并且选择 U 盘启动"></a>重启并且选择 U 盘启动</h2><p>如果不出意外的话，大家进入 ventoy 界面就能看到刚刚我们拷进去的 Linux 了，选中回车进入系统。</p><h2 id="检查各个硬件驱动是否正常"><a href="#检查各个硬件驱动是否正常" class="headerlink" title="检查各个硬件驱动是否正常"></a>检查各个硬件驱动是否正常</h2><p>检查显示器、触摸板、声音、网络等是否正常，有问题的话可以自己善用网络解决。<br>我这里给大家提供 ubuntu 下没有声音的解决方案，大家可以尝试一下：<br><a href="https://answers.launchpad.net/ubuntu/+source/alsa-driver">Questions : alsa-driver package : Ubuntu (launchpad.net)</a><br><a href="https://answers.launchpad.net/ubuntu/+source/alsa-driver/+question/699972">Question #699972 “No sound on ubuntu 20.04.3” : Questions : alsa-driver package : Ubuntu (launchpad.net)</a><br><a href="https://www.yyearth.com/index.php?aid=33">ubuntu系统下使用alsamixer来配置声卡 - YY分享 (yyearth.com)</a><br><a href="https://developer.aliyun.com/article/837036">Linux下使用alsamixer配置系统默认的声卡设备(默认音频输出设备、输入设备、系统音量)-阿里云开发者社区 (aliyun.com)</a></p>]]></content>
    
    
    <summary type="html">本文简单总结如何快速制作一个个人随身Linux系统</summary>
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Linux" scheme="https://www.smitten.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>VPS 基础Docker环境配置</title>
    <link href="https://www.smitten.top/posts/VPSDocker.html"/>
    <id>https://www.smitten.top/posts/VPSDocker.html</id>
    <published>2023-03-14T11:12:03.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>服务器：腾讯香港轻量应用服务器 24 元 / 月 VPS 一台（最好是选非大陆（香港）的服务器）如果是小白刚开始玩的话，可以购买 Racknerd 的服务器（地区选美西），最低一年不到 100 块.</p><h1 id="登陆服务器"><a href="#登陆服务器" class="headerlink" title="登陆服务器"></a>登陆服务器</h1><p>选择一款连接SSH的软件。<br>Mac 或者 Linux 用户可以直接用系统自带的终端（也叫Terminal）来登陆服务器。<br>输入：<br><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> 你的用户名@你的服务器IP -P <span class="token number">22</span>  </code></pre></p><p>如果你没有更改 ssh 的端口，默认就是22，当然为了服务器安全，建议你可以换一个别的端口，具体请见：保护好你的小鸡！保姆级服务器安全教程！  </p><h1 id="升级-Packages"><a href="#升级-Packages" class="headerlink" title="升级 Packages"></a>升级 Packages</h1><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> -i <span class="token comment"># 切换到 root 用户  </span></code></pre><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update -y  <span class="token comment"># 升级 packages  </span></code></pre><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">wget</span> <span class="token function">curl</span> <span class="token function">sudo</span> <span class="token function">vim</span> <span class="token function">git</span> -y  <span class="token comment"># Debian 系统比较干净，安装常用的软件 </span></code></pre><h1 id="添加SWAP虚拟内存"><a href="#添加SWAP虚拟内存" class="headerlink" title="添加SWAP虚拟内存"></a>添加SWAP虚拟内存</h1><p>注意：VPS 的内存如果过小，建议设置一下 SWAP，一般为内存的 1-1.5 倍即可，可以让系统运行更流畅！  </p><p>设置 SWAP 可以用脚本:<br><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x box.sh <span class="token operator">&amp;&amp;</span> <span class="token function">clear</span> <span class="token operator">&amp;&amp;</span> ./box.sh </code></pre></p><p>选择 18，然后输入你想要扩容的数值即可。  </p><h1 id="安装-Docker-环境"><a href="#安装-Docker-环境" class="headerlink" title="安装 Docker 环境"></a>安装 Docker 环境</h1><h2 id="安装-Docker（非大陆服务器）"><a href="#安装-Docker（非大陆服务器）" class="headerlink" title="安装 Docker（非大陆服务器）"></a>安装 Docker（非大陆服务器）</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -qO- get.docker.com <span class="token operator">|</span> <span class="token function">bash</span>  docker -v  <span class="token comment">#查看 docker 版本  </span>systemctl <span class="token builtin class-name">enable</span> docker  <span class="token comment">#设置开机自动启动  </span></code></pre><h2 id="安装-Docker-compose（非大陆服务器）"><a href="#安装-Docker-compose（非大陆服务器）" class="headerlink" title="安装 Docker-compose（非大陆服务器）"></a>安装 Docker-compose（非大陆服务器）</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">curl</span> -L <span class="token string">"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -s<span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -m<span class="token variable">)</span></span>"</span> -o /usr/local/bin/docker-compose  <span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose  docker-compose --version  <span class="token comment">#查看 docker-compose 版本  </span></code></pre><h2 id="安装-Docker（国内服务器）"><a href="#安装-Docker（国内服务器）" class="headerlink" title="安装 Docker（国内服务器）"></a>安装 Docker（国内服务器）</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -sSL https://get.daocloud.io/docker <span class="token operator">|</span> <span class="token function">sh</span>  docker -v  <span class="token comment">#查看 docker 版本  </span>systemctl <span class="token builtin class-name">enable</span> docker  <span class="token comment">#设置开机自动启动  </span></code></pre><h2 id="安装-Docker-compose（国内服务器）"><a href="#安装-Docker-compose（国内服务器）" class="headerlink" title="安装 Docker-compose（国内服务器）"></a>安装 Docker-compose（国内服务器）</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> -s<span class="token variable">`</span></span>-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> -m<span class="token variable">`</span></span> <span class="token operator">></span> /usr/local/bin/docker-compose  <span class="token function">chmod</span> +x /usr/local/bin/docker-compose  docker-compose --version  <span class="token comment">#查看 docker-compose 版本  </span></code></pre><h2 id="修改-Docker-配置（可选）"><a href="#修改-Docker-配置（可选）" class="headerlink" title="修改 Docker 配置（可选）"></a>修改 Docker 配置（可选）</h2><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：  </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">></span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;</span><span class="token string">EOF  &#123;      "log-driver": "json-file",      "log-opts": &#123;          "max-size": "20m",          "max-file": "3"      &#125;,      "ipv6": true,      "fixed-cidr-v6": "fd00:dead:beef:c0::/80",      "experimental":true,      "ip6tables":true  &#125;  EOF</span>  </code></pre><p>然后重启 Docker 服务：<br><code>systemctl restart docker</code><br>至此，你的服务器已经配置好了基础的 Docker 环境。  </p>]]></content>
    
    
    <summary type="html">便于自己快速配置VPS Docker环境</summary>
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Docker" scheme="https://www.smitten.top/tags/Docker/"/>
    
    <category term="VPS" scheme="https://www.smitten.top/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>Hi,Regex</title>
    <link href="https://www.smitten.top/posts/Regex.html"/>
    <id>https://www.smitten.top/posts/Regex.html</id>
    <published>2023-03-08T17:37:00.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文本中找出满足你想要的格式的句子。</p></blockquote><p>一个正则表达式是一种从左到右匹配主体字符串的模式。 “Regular expression”这个词比较拗口，我们常使用缩写的术语“regex”或“regexp”。 正则表达式可以从一个基础字符串中根据一定的匹配模式替换文本中的字符串、验证表单、提取字符串等等。</p><p><a href="https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md">学习正则表达式(learn-regex)</a><br><a href="https://regexlearn.com/zh-cn">https://regexlearn.com/zh-cn</a><br><a href="http://louiszhai.github.io/2016/06/13/regexp/">正则表达式前端使用手册</a><br><a href="https://www.runoob.com/regexp/regexp-tutorial.html">菜鸟教程</a><br><a href="https://regex101.com/">Regex101</a><br><a href="https://regexr.com/">Regexr</a><br><a href="https://github.com/geongeorge/i-hate-regex.git">iHateRegex</a><br><a href="https://jex.im/regulex/">Regulex</a> - Regulex is a JavaScript Regular Expression Parser &amp; Visualizer.<br><a href="https://github.com/any86/any-rule">any86/any-rule: 🦕 常用正则大全, 支持web / vscode / idea / Alfred Workflow多平台 (github.com)</a></p>]]></content>
    
    
    <summary type="html">Regex学习站点</summary>
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Regex" scheme="https://www.smitten.top/tags/Regex/"/>
    
  </entry>
  
  <entry>
    <title>三分钟让你的Web网页变优雅</title>
    <link href="https://www.smitten.top/posts/font.html"/>
    <id>https://www.smitten.top/posts/font.html</id>
    <published>2023-03-08T17:37:00.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://easyimage.smitten.top/i/2023/03/07/jwfdfu-0.webp" alt="霞鹜文楷"></p><p>项目地址：<a href="https://github.com/chawyehsu/lxgw-wenkai-webfont">https://github.com/chawyehsu/lxgw-wenkai-webfont</a></p><p>直接调用 CDN。</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://npm.elemecdn.com/lxgw-wenkai-screen-webfont/style.css<span class="token punctuation">"</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>print<span class="token punctuation">"</span></span> <span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>this.media=<span class="token punctuation">'</span>all<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>或 @一蓑烟雨 分享的 staticfile CDN</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.staticfile.org/lxgw-wenkai-screen-webfont/1.6.0/lxgwwenkaiscreen.css<span class="token punctuation">"</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>print<span class="token punctuation">"</span></span> <span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>this.media=<span class="token punctuation">'</span>all<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* Screen version */</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"LXGW WenKai Screen"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>Perfect.</p>]]></content>
    
    
    <summary type="html">启用「霞鹜文楷」在线字体，一款优雅的Web开源字体</summary>
    
    
    
    <category term="前端" scheme="https://www.smitten.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="在线字体" scheme="https://www.smitten.top/tags/%E5%9C%A8%E7%BA%BF%E5%AD%97%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客工作流CI（一键部署的快乐）</title>
    <link href="https://www.smitten.top/posts/HexoCI.html"/>
    <id>https://www.smitten.top/posts/HexoCI.html</id>
    <published>2023-02-21T15:44:14.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一直都想尝试一下基于 Github Action 来进行全自动化的 hexo 博客内容的输出，今天终于闲下来尝试了一下，发现是真滴香！</p><pre><code>CI/CD 解释：CI\CD 其实说的是三件事情：「持续集成（Continuous Integration）」、「持续交付（Continuous Delivery）」、「持续部署（Continuous Deployment）」。  因为「持续交付」和「持续部署」的英文缩写是一样的，所以这三件事情缩写成了 CI\CD 。</code></pre><hr><h1 id="Github-Action-优点"><a href="#Github-Action-优点" class="headerlink" title="Github Action 优点"></a>Github Action 优点</h1><ol><li>可以多域名多站点部署</li><li>不会出现从服务器去连接github连接不上的情况</li><li>可以一键多处全部部署完成✅</li><li>不再需要使用繁杂的前置命令<blockquote><p>hexo clean<br>hexo generate  </p></blockquote></li></ol><p>比如我自己是在 <a href="https://vercel.com/">vercel</a>, <a href="https://github.com/">github page</a> 两处来部署的站点。</p><blockquote><p>vercel 站点：<a href="https://blog.yct.ee/">Barryの小站 (yct.ee)</a><br>github 站点：<a href="https://www.smitten.top/">Barryの小站 (smitten.top)</a></p></blockquote><p>其中 vercel 是白嫖的 <a href="http://cloudflare.com/">cloudflare</a> 免费的 CDN，github 站点用的是 <a href="https://dcdn.console.aliyun.com/">aliyun DCDN</a> 但是目测有时候 DCDN 会慢一点而且有时候缓存会清理不掉，也可能是我自己的设置问题。</p><p>不过如此确实大大提高可用性与速度。</p><h1 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h1><p>在这里分享一下我的工作流，大概步骤是这样的：</p><blockquote><p>Obsidian 新建 post 文章编辑完成后通过 git 自动保存到备份仓库，当备份仓库接收到 push 的信息时并发现 <strong>已发布文章</strong> 里有新文章时触发工作流，将新文章 push 到 hexo 源码仓库的 posts 文件夹，此时 hexo 源码仓库接收到 push 信息触发工作流进行自动部署到主站</p></blockquote><p><img src="https://easyimage.smitten.top/i/2023/02/21/naz1ta-0.png" alt="Obsidian git"></p><p>这个插件配合着 github action 来用简直无敌, 平时除非要改动博客源码，不然根本都不需要去动网站源码，在编辑器专注于写作即可，写完文章稍等这个插件便会自动备份数据，同时将要发布的文章自动拉取到 github 上的 hexo 仓库进行部署，vercel 检测到 push 也会进行同步更新，这样就实现了一个全自动化的工作流</p><h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><p>如果你和我有着同样的需求，可以参考以下内容，可能会给你省下很多时间。</p><h2 id="GitHub-自动部署-Hexo"><a href="#GitHub-自动部署-Hexo" class="headerlink" title="GitHub 自动部署 Hexo"></a>GitHub 自动部署 Hexo</h2><p>实现以上工作流的第一步就是先要将自己的 hexo 源码上传到 GitHub 仓库上并配置好工作流来进行自动部署。</p><h3 id="教程常量声明"><a href="#教程常量声明" class="headerlink" title="教程常量声明"></a>教程常量声明</h3><div class="table-container"><table><thead><tr><th style="text-align:left">常量名</th><th style="text-align:left">常量释义</th></tr></thead><tbody><tr><td style="text-align:left"><strong>[Blogroot]</strong></td><td style="text-align:left">本地存放博客源码的文件夹路径</td></tr><tr><td style="text-align:left"><strong>[SourceRepo]</strong></td><td style="text-align:left">存放博客源码的私有仓库名</td></tr><tr><td style="text-align:left"><strong>[SiteBlogRepo]</strong></td><td style="text-align:left">存放编译好的博客页面的公有仓库名 Site 指站点，教程中会替换成 Github、Gitee、Coding</td></tr><tr><td style="text-align:left"><strong>[SiteUsername]</strong></td><td style="text-align:left">用户名 Site 指站点，教程中会替换成 Github、Gitee、Coding</td></tr><tr><td style="text-align:left"><strong>[SiteToken]</strong></td><td style="text-align:left">申请到的令牌码 Site 指站点，教程中会替换成 Github、Gitee、Coding</td></tr><tr><td style="text-align:left"><strong>[GithubEmail]</strong></td><td style="text-align:left">与 github 绑定的主邮箱，建议使用 Gmail</td></tr><tr><td style="text-align:left"><strong>[TokenUser]</strong></td><td style="text-align:left">Coding 配置特有的令牌用户名</td></tr></tbody></table></div><h3 id="Github-Action-使用教程"><a href="#Github-Action-使用教程" class="headerlink" title="Github Action 使用教程"></a>Github Action 使用教程</h3><p>为了确保交由 <code>Github Action</code> 来持续部署时，<code>Github Action</code> 具备足够的权限来进行 <code>hexo deploy</code> 操作, 需要先获取 <code>Token</code>。<br>访问 Github-&gt;头像（右上角）-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens-&gt;generate new token, 创建的 Token 名称随意，但必须勾选 repo 项和 workflows 项。</p><p>token 只会显示这一次，之后将无法查看，所以务必保证你已经记录下了 Token。之后如果忘记了就只能重新生成重新配置了。</p><h3 id="创建存放源码的私有仓库"><a href="#创建存放源码的私有仓库" class="headerlink" title="创建存放源码的私有仓库"></a>创建存放源码的私有仓库</h3><p>我们需要创建一个用来存放 <code>Hexo</code> 博客源码的私有仓库 <code>[SourceRepo]</code><br>这里之所以是私有仓库，是因为在接下来的配置中会用到 <code>Token</code>，如果 <code>Token</code> 被盗用，别人可以肆意操作你的 github 仓库内容，为了避免这一风险，才选择的博客源码闭源。<br>创建完成后，需要把博客的源码 push 到这里。首先获取远程仓库地址，此处虽然 SSH 和 HTTPS 均可。SSH 在绑定过 ssh key 的设备上无需再输入密码，HTTPS 则需要输入密码，但是 SSH 偶尔会遇到端口占用的情况。请自主选择。</p><h3 id="配置-Github-Action"><a href="#配置-Github-Action" class="headerlink" title="配置 Github Action"></a>配置 Github Action</h3><ol><li>在 <code>[Blogroot]</code> 新建 <code>.github</code> 文件夹, 注意开头是有个 <code>.</code> 的。然后在 <code>.github</code> 内新建 <code>workflows</code> 文件夹，再在 <code>workflows</code> 文件夹内新建 <code>autodeploy.yml</code>, 在 <code>[Blogroot]/.github/workflows/autodeploy.yml</code> 里面输入<pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> 自动部署<span class="token comment">#当有改动推送到master分支时，启动Action</span><span class="token key atrule">on</span><span class="token punctuation">:</span>push<span class="token punctuation">:</span>branches<span class="token punctuation">:</span>  <span class="token punctuation">-</span> masterrelease<span class="token punctuation">:</span>types<span class="token punctuation">:</span>  <span class="token punctuation">-</span> published<span class="token key atrule">jobs</span><span class="token punctuation">:</span>deploy<span class="token punctuation">:</span>runs<span class="token punctuation">-</span><span class="token key atrule">on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>lateststeps<span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 检查分支    uses<span class="token punctuation">:</span> actions/checkout@v2    with<span class="token punctuation">:</span>      ref<span class="token punctuation">:</span> master  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 安装 Node    uses<span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1    with<span class="token punctuation">:</span>      node<span class="token punctuation">-</span><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"18.x"</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 安装 Hexo    run<span class="token punctuation">:</span> <span class="token punctuation">|</span>      export TZ='Asia/Shanghai'      npm install hexo<span class="token punctuation">-</span>cli <span class="token punctuation">-</span>g  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 缓存 Hexo    id<span class="token punctuation">:</span> cache<span class="token punctuation">-</span>npm    uses<span class="token punctuation">:</span> actions/cache@v3    env<span class="token punctuation">:</span>      cache<span class="token punctuation">-</span><span class="token key atrule">name</span><span class="token punctuation">:</span> cache<span class="token punctuation">-</span>node<span class="token punctuation">-</span>modules    with<span class="token punctuation">:</span>      path<span class="token punctuation">:</span> node_modules      key<span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> runner.os <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>build<span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> env.cache<span class="token punctuation">-</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> hashFiles('<span class="token important">**/package-lock.json')</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      restore<span class="token punctuation">-</span><span class="token key atrule">keys</span><span class="token punctuation">:</span> <span class="token punctuation">|</span>        $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> runner.os <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>build<span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> env.cache<span class="token punctuation">-</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>        $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> runner.os <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>build<span class="token punctuation">-</span>        $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> runner.os <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 安装依赖    if<span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> steps.cache<span class="token punctuation">-</span>npm.outputs.cache<span class="token punctuation">-</span>hit <span class="token tag">!=</span> 'true' <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    run<span class="token punctuation">:</span> <span class="token punctuation">|</span>      npm install <span class="token punctuation">-</span><span class="token punctuation">-</span>save  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 生成静态文件    run<span class="token punctuation">:</span> <span class="token punctuation">|</span>      hexo clean      hexo generate  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 部署到Github    uses<span class="token punctuation">:</span> JamesIves/github<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>deploy<span class="token punctuation">-</span>action@v4    with<span class="token punctuation">:</span>      token<span class="token punctuation">:</span> ghp_xxxxxxxxxxxxxxxxxxxxxxx      repository<span class="token punctuation">-</span><span class="token key atrule">name</span><span class="token punctuation">:</span> BarryYangi/BarryYangi.github.io      branch<span class="token punctuation">:</span> main      folder<span class="token punctuation">:</span> public      commit<span class="token punctuation">-</span><span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token string">"$&#123;&#123; github.event.head_commit.message &#125;&#125; Updated By Github Actions"</span></code></pre></li><li>之后需要自己到仓库的 Settings-&gt;Secrets-&gt;actions 下添加环境变量，变量名参考脚本中出现的，依次添加</li></ol><h3 id="重新设置远程仓库和分支"><a href="#重新设置远程仓库和分支" class="headerlink" title="重新设置远程仓库和分支"></a>重新设置远程仓库和分支</h3><ol><li>删除或者先把 <code>[Blogroot]/themes/butterfly/.git</code> 移动到非博客文件夹目录下, 原因是主题文件夹下的 <code>.git</code> 文件夹的存在会导致其被识别成子项目，从而无法被上传到源码仓库。</li><li>在博客根目录<code>[Blogroot]</code>路径下运行指令<pre class="language-BASH" data-language="BASH"><code class="language-BASH">git init #初始化git remote add origin git@github.com:[GithubUsername]&#x2F;[SourceRepo].git #[SourceRepo]为存放源码的github私有仓库git checkout -b master # 切换到master分支，#2020年10月后github新建仓库默认分支改为main，注意更改#如果不是，后面的所有设置的分支记得保持一致</code></pre></li><li><p>添加屏蔽项因为能够使用指令进行安装的内容不包括在需要提交的源码内，所有我们需要将这些内容添加到屏蔽项，表示不上传到 github 上。这样可以显著减少需要提交的文件量和加快提交速度。打开<code>[Blogroot]/.gitignore</code>,输入以下内容：</p><pre class="language-txt" data-language="txt"><code class="language-txt">.DS_StoreThumbs.dbdb.json*.lognode_modules&#x2F;public&#x2F;.deploy*&#x2F;.deploy_git*&#x2F;.ideathemes&#x2F;matery&#x2F;.git</code></pre><p>如果不是 <code>matery</code> 主题，记得替换最后一行内容为你自己当前使用的主题。</p></li><li><p>之后再运行 git 提交指令，将博客源码提交到 github 上。</p> <pre class="language-BASH" data-language="BASH"><code class="language-BASH">git add .git commit -m &quot;github action update&quot;git push origin master#2020年10月后github新建仓库默认分支改为main，注意更改</code></pre></li><li><p>可能遇到的 bug </p><p> 因为 butterfly 主题文件夹下的.git 文件夹的存在，那么主题文件夹会被识别子项目。从而无法被上传到源码仓库。若是遇到添加屏蔽项，但是还是无法正常上传主题文件夹的情况。请先将本地源码中的 themes 文件夹移动到别的目录下。然后 commit 一次。接着将 themes 文件夹移动回来，再 commit 一次。 </p></li></ol><h3 id="查看部署情况"><a href="#查看部署情况" class="headerlink" title="查看部署情况"></a>查看部署情况</h3><p>此时，打开 GIthub 存放源码的私有仓库，找到 action。<br>根据刚刚的 Commit 记录找到相应的任务<br>点击 Deploy 查看部署情况<br>若全部打钩，恭喜你，你现在可以享受自动部署的快感了。</p><h2 id="Obsidian-备份配置"><a href="#Obsidian-备份配置" class="headerlink" title="Obsidian 备份配置"></a>Obsidian 备份配置</h2><h3 id="插件下载"><a href="#插件下载" class="headerlink" title="插件下载"></a>插件下载</h3><p>首先先在 Obsidian 插件市场中下载 Obsidian git 插件（需要戴莉）<br><img src="https://easyimage.smitten.top/i/2023/02/21/nzk0of-0.png" alt="Obsidian git"></p><h3 id="git-备份仓库设置"><a href="#git-备份仓库设置" class="headerlink" title="git 备份仓库设置"></a>git 备份仓库设置</h3><p>先在 github 建立一个私人仓库，当然你想让你的笔记让别人看到公开仓库也行：）<br>然后进行本地仓库设置<br>打开 Obsidian 本地仓库的文件夹，新建 <code>.gitignore</code> 文件，来屏蔽一些我们不需要进行备份的文件内容如下：<br><pre class="language-none"><code class="language-none">.obsidian.trash</code></pre><br>然后建立 <code>.github/workflows</code> 目录，在该目录下配置工作流：<code>ci.yml</code>:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> 上传文章<span class="token key atrule">on</span><span class="token punctuation">:</span>  push<span class="token punctuation">:</span>    branches<span class="token punctuation">:</span>      <span class="token punctuation">-</span> master    paths<span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'已发布文章/**'</span><span class="token key atrule">jobs</span><span class="token punctuation">:</span>  deploy_job<span class="token punctuation">:</span>    runs<span class="token punctuation">-</span><span class="token key atrule">on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    name<span class="token punctuation">:</span> build    steps<span class="token punctuation">:</span>      <span class="token comment"># check out the repository</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout            uses<span class="token punctuation">:</span> actions/checkout@v2      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Pushes to another repository        uses<span class="token punctuation">:</span> cpina/github<span class="token punctuation">-</span>action<span class="token punctuation">-</span>push<span class="token punctuation">-</span>to<span class="token punctuation">-</span>another<span class="token punctuation">-</span>repository@main        env<span class="token punctuation">:</span>          API_TOKEN_GITHUB<span class="token punctuation">:</span> <span class="token punctuation">[</span>GithubToken<span class="token punctuation">]</span>        with<span class="token punctuation">:</span>          source<span class="token punctuation">-</span><span class="token key atrule">directory</span><span class="token punctuation">:</span> <span class="token string">'已发布文章'</span>          destination<span class="token punctuation">-</span><span class="token key atrule">github-username</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>GithubUserName<span class="token punctuation">]</span>          destination<span class="token punctuation">-</span><span class="token key atrule">repository-name</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>SourceRepo<span class="token punctuation">]</span>          target<span class="token punctuation">-</span><span class="token key atrule">directory</span><span class="token punctuation">:</span> <span class="token string">'source/_posts'</span> <span class="token comment"># hexo中发布文章目录</span>          user<span class="token punctuation">-</span><span class="token key atrule">email</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>GithubEmail<span class="token punctuation">]</span>          target<span class="token punctuation">-</span><span class="token key atrule">branch</span><span class="token punctuation">:</span> master</code></pre><p>然后在本地 obsidian 根目录（能看到 <code>.obsidian</code> 的哪个目录）下运行运行指令</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">git</span> init <span class="token comment">#初始化</span><span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:<span class="token punctuation">[</span>GithubUsername<span class="token punctuation">]</span>/<span class="token punctuation">[</span>备份仓库名<span class="token punctuation">]</span>.git<span class="token function">git</span> checkout -b master <span class="token comment"># 切换到master分支，</span><span class="token comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span><span class="token comment">#如果不是，后面的所有设置的分支记得保持一致</span></code></pre><p>之后再运行 git 提交指令，将博客源码提交到 github 上。</p> <pre class="language-BASH" data-language="BASH"><code class="language-BASH">git add .git commit -m &quot;github action update&quot;git push origin master#2020年10月后github新建仓库默认分支改为main，注意更改</code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>然后你可以在你设置的发布文章的文件夹中新建一篇文章，这里推荐使用 QuickAdd 结合 templater 快速生成带有 hexo 文章 yaml 的模板文件，然后随便写几句话保存。<br>然后按 <code>ctrl</code> + <code>p</code><br><img src="https://easyimage.smitten.top/i/2023/02/21/t16eg8.webp" alt="git"></p><p>选择着两项都能立即同步仓库<br>随后看你的 obsidian 备份仓库的 action 是不是成功执行，不出意外的话到此你就已经可以开始享受全自动化的工作流了。</p><h2 id="Vercel-部署-Hexo"><a href="#Vercel-部署-Hexo" class="headerlink" title="Vercel 部署 Hexo"></a>Vercel 部署 Hexo</h2><h3 id="git-仓库添加-vercel-配置文件"><a href="#git-仓库添加-vercel-配置文件" class="headerlink" title="git 仓库添加 vercel 配置文件"></a>git 仓库添加 vercel 配置文件</h3><p>此步非必须，但是不做后续可能会遇到很多奇奇怪怪的问题，其实就是让 vercel 取消当访问以正斜杠结尾的路径时，将以 308 状态代码响应，并重定向到不带尾部斜杠的路径。如果 hexo 的路径不尾随 <code>/</code> 的话可能非根页面都会 404，并且有些 hexo 的第三方的评论也是通过路径返回数据到前端页面的，路径不一致的话评论都不一样。<br>配置很简单只需在 <code>[Blogroot]</code> 目录加上 <code>vercel.json</code> 文件：<br><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"trailingSlash"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span></code></pre><br>即可。</p><h3 id="vercel-配置"><a href="#vercel-配置" class="headerlink" title="vercel 配置"></a>vercel 配置</h3><p>首先你得去注册一个 <a href="https://vercel.com/">vercel</a> 账号，然后在 dashboard 页面点击 Add New-&gt;Project, 绑定你的 github 账号并选择刚刚你自己 Hexo 的源码仓库，你应该是可以在看到一个 Hexo 的图标的哪个仓库，点击导入，然后什么都不用设置点击 Deploy 就 ok 了，等待他自动构建完成，如果没用报错网页一切访问正常，那么恭喜你，vercel 的部署就这么简单的完成了。</p><h3 id="vercel-绑定域名"><a href="#vercel-绑定域名" class="headerlink" title="vercel 绑定域名"></a>vercel 绑定域名</h3><p>如果你想更优雅的访问 vercel 站点的话就想要绑定一个自定义域名，步骤也很简单<br>在 vercel dashbord 面板点击你的 hexo 项目-&gt;Settings-&gt;Domains, 在上方输入你购买的域名<br>然后来到 dns 服务商这里绑定解析<br><img src="https://easyimage.smitten.top/i/2023/02/21/pi49z8-0.jpg" alt="dns"><br>这里在国内可以绑定国内的 vercel dns</p><p>至此，全部的博客部署工作已经完成。</p><p>EOF</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="CI/CD" scheme="https://www.smitten.top/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>我要我们在一起</title>
    <link href="https://www.smitten.top/posts/WeAreToghter.html"/>
    <id>https://www.smitten.top/posts/WeAreToghter.html</id>
    <published>2023-02-17T21:25:24.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>偶然之间看到一篇帖子, 不知道后来的我们, 十年后会怎么 🌎</p><blockquote><p>整理后的帖子相对完整，原文缺失部分<br>这是整理后的帖子原文： <a href="https://www.douban.com/note/260167887/">https://www.douban.com/note/260167887/</a><br>原作者： 你这个贱人<br>原文地址：豆瓣： <a href="http://www.douban.com/group/topic/36139334/">http://www.douban.com/group/topic/36139334/</a> 【贱贱贱人直播】与我十年   长跑的女朋友就要嫁人了。📺<br>故事背景地： <a href="http://www.tudou.com/programs/view/36RvNyr4TUI/">http://www.tudou.com/programs/view/36RvNyr4TUI/</a></p></blockquote><p>昨天下午凌一尧给我发来一张照片，是一件婚纱，她问好不好看，我说还行。</p><p>她说“初五举办婚礼，和我们以前想象得一样，有鲜花拱门，有红地毯，有白婚纱黑礼服，就是没有你。”</p><p>我说“要不要我去凑个份子？”</p><p>她半天之后才回复说:“不用了。</p><hr><p>2001 年的夏天，我十六岁，正在读高中。即便是夜晚，气温仍然高得令人辗转反侧，黑漆漆的夜晚满是室友们翻身和叹息的声音，而我咬着小电筒，蒙着一条薄被单，写下人生中唯一的一封情书。<br>我的读者叫凌一尧，马尾辫，大前额，身材娇小，细腰长腿小翘臀。要命的是，她偏偏是一位学霸，常年霸占月考名次红榜第一排，这样脑瓜子聪明又美得翻泡的妞儿绝对是众人心目中的雅典娜，只可跪舔不能直视。<br>几乎每天，我都会想入非非，幻想着各种与她搭讪的场面。其中包括她从楼梯上滚下来毁容了，我抱她朝着医院狂奔，并且发誓这辈子我都不会抛弃她，最后她在我的怀里留下了幸福的泪水。<br>送出情书的第二天，我的创作地点就转移到政教处办公室，对面坐着姚主任，我们私下管他叫“姚千岁”。他说：“吕钦扬同学啊，昨天你一夜写了三页纸，今天怎么就咬笔杆了？是不是这个环境不利于激发创作灵感，要不要拿回宿舍慢慢写？”<br>我理智地拒绝道：“不用了，这里有空调。”<br>凌一尧把我的情书送给政教处，这事做得太坑，我内心的伤痛尚未愈合，班主任跑来告诉我一个好消息：“你要上电视了！”<br>“什么电视？”我有些激动。<br>“闭路电视。经过校领导研究决定，这次纪律整顿大会的主题是杜绝早恋，你要在学校直播室做一次公开检讨。”<br>“为什么是我？不就一封情书吗？”<br>班主任思索片刻，说：“可能是别人脸皮太薄了，怕留下心理阴影。”<br>他妈的！<br>纪律整顿电视会议之前的那几天，我的心情却糟糕到极点。<br>每次远远地看见凌一尧，我都会走向旁边的岔路，不愿意与她打照面。说实话，我对她有些记恨，无法理解她为什么那样做，难道被我喜欢是一件很痛苦的事情？如果是这样，以后不喜欢你就是了呗。<br>据说历次电视会议的录像都会被妥善保存，作为我校发展历程的丰碑，为了给学妹们留下一个好印象，我特意理了一个清爽的发型，熨了一下白衬衫，还借了一双白色的耐克跑步鞋。第一次上电视，好激动。<br>那天中午政史二班的体育委员来访，对我进行亲切慰问，鼓励我好好表现。他带来一个消息，说那封情书不是被上交的，而是被他们班主任曹老太缴获的，凌一尧还被拉到办公室做了一通思想审查。<br>学校演播室中间摆着一台黑色的摄像机，镜头前面摆着一个主席台，依次坐着诸位领导以及各年级组长，而门口站着的是六名犯罪嫌疑人，其中一个就是我。那五个家伙我差不多都认识，他们的罪名比较另类，什么拿街机子儿冒充硬币买茶叶蛋，什么大半夜拿鱼竿在校园的池塘里钓鱼的，还有那位住在二楼的同学，他用大搪瓷杯装尿往院墙外面泼，墙外方圆几米的庄稼死得透透的，连野草都长不出一棵。<br>相比之下，我绝对是最纯洁的。但不知道为什么，当我说我因为写情书给女孩却被对方送给老师了，他们一个个都面露鄙夷之色，仿佛我犯下比他们更龌龊的罪行。当时我就清醒地认识到，错的不是我，而是这个世界。<br>由于早恋是今天重点批判的主题，姚千岁将我安排在最后出场。班主任对我有点不放心，还特意跑来对我进行战前动员和辅导，他说：“等会儿千万不要紧张，控制住情绪。”<br>“你怕我被吓哭？”我有种受辱的感觉。<br>班主任说：“不是，我担心你在这么严肃的地方笑场。”<br>终于轮到我了，我站到话筒前面朗读上次写的检讨，尽量不看镜头，像在给姚千岁致哀悼词。正要谢幕之时，副校长却在发表一则有关早恋危害的讲话，此时我非常困窘，傻逼似的杵在那里，被全校数千双眼睛在看不见的地方盯着，这种滋味真心痛苦。<br>不知道副校长说了什么，姚千岁突然对我发问，所有人都看着我，包括镜头。我一头雾水地“啊”了一下，此处是第二声。<br>姚千岁将问题重复一遍：“吕钦扬同学，你对自己的所作所为有没有感到后悔？”当时我就震惊了！这他妈算是什么垃圾问题？你又不是没看过我那封情书，写得感人肺腑，催人泪下，引人沉思，都发誓这辈子非凌一尧不娶了，你现在他妈的问我后不后悔？我他妈只是以大局为重，配合你演一场杀鸡儆猴的戏而已，你还真把我当冤大头了？我就算真的后悔了，不可能当众说出来啊，否则以后还怎么混？面对那黑洞洞的镜头，不，那不只一个镜头，那是数千双眼睛，我作出一个重大而深远的决定———我盯着镜头，说：“我不后悔。”<br>那天傍晚的天气非常好，走出学校演播室，西边铺天盖地的一大片火烧云，我的白衬衫都被映得红彤彤的。各个班级刚好下课，学生们像出栏的猪一样涌出教室直奔餐厅，许多认识或者不认识我的人冲着我打招呼，连年轻的男女老师都意味深长地对我哼笑。<br>经过凌一尧所在的班级，几个女生拿着饭盒走出来，其中一个便是凌一尧，她抬头看见我，立即像见了鬼似的退了回去。其他女生起哄起来，悠长的“噢哟”在走廊里回荡着。我这样一个阿 Q，经历此生最为辉煌的时刻，迈出的每一步都像踩在软绵绵的云端，仿佛自己是一个凯旋的盖世英雄。<br>我为一时的倔强付出巨大的代价———惩罚等级由警告升级为记过，礼拜一全校晨会，别人都在聆听领导训话，而我在冲洗操场角落那个简陋又瘟臭的厕所。冲完厕所以后，我淡定地走过队列前面的那条煤渣路，手里的铁皮桶吱呀吱呀地响着，相当拉轰。<br>这些举动相当幼稚，用现在的话概括这是在“作死”，但它们在当时足以让我成为全校的三大奇葩之一。更悲剧的是，入榜的是我的两个死党，“大乔”和“子石”。我之所以鼓起勇气给凌一尧写情书，其中一个原因便是和这两个傻逼打赌了，他们说如果我追到凌一尧，他们就在校园里裸奔一圈。<br>当时周杰伦才出道，大乔就果断成为铁粉，一曲《爱在西元前》日夜哼唱，最终进入全校文艺汇演的名单。然而，正式演出那天他当着数千师生的面公然忘词。他悲愤下台后并未气馁，而是继续苦练这首歌，两天以后的傍晚，他偷偷翻窗进入学校总控室，对着麦克风重新清唱一遍《爱在西元前》，那销魂的歌声传遍校园的每一个角落。子石名叫蒋慧东。他去泡隔壁职高的一个妹子，几个地痞们带着自家车床磨出的砍刀来战，他舞着泔水老汉的扁担，光着膀子把对方揍得满地找牙，连学校保安都没敢过问。但就是这样一个群架王，晚自习时突发奇想，挖了一坨清凉油抹在 JJ 上，试图达到“头悬梁锥刺股”的功效，最后他的嚎叫响彻整个教学区，从此再也没人记得他的神勇。我不知道大家如何评价的，因为我的氪金狗耳早已阵亡。之所以重点这两位仁兄，是因为他们俩正在看这个直播故事，他们希望我多褒少贬，不要破坏他们的伟岸形象，但我选择站在真相这一边。随后很长时间里，我都不太好意思和凌一尧走得太近，因为总有傻逼在旁边“矮油”“噢哟”。子石和大乔不遗余力地耍宝，烘托我的形象，而我感觉这样太小丑了，但一抬头我看见凌一尧嘴角的笑，一下子发现自己非常愿意当这个小丑。在那个年龄，无论无意的出糗还是有意的献丑，只要能博取那个人的一笑，便会欣喜若狂。而多年以后，这样的快乐已然灭绝。<br>因为有我这个炮灰的经验教训摆在这里，喜欢凌一尧的男生很多，敢于追求的却几乎没有。我们亲眼看见一个高三哥把她在圣诞节把她约到桥边，送她一盒巧克力，凌一尧怎么不肯要，三哥一怒之下把那盒巧克力丢进河里。第二天，子石和大乔把巧克力盒子捞上来，打开包装一看，嘿，没有进水。我们把巧克力分了，晚上遇到凌一尧时我拿了三块几乎被我焐软的巧克力给她，她居然没有拒绝，收下了！我本来是想恶作剧一下而已，她这样一来，我都没敢说那是昨天被丢下河的那盒巧克力。巧克力事件之后，莫名其妙地，我和她的关系出现好转，虽然彼此遇见时从来不打招呼，但她嘴角总是有一丝浅得几乎看不出来的微笑。<br>“你眼瞎啊，她一直板着脸，哪里有过微笑？”大乔非常直白地反对。子石也很困惑:“难道这就是肉笑皮不笑？”我只能慨叹这两个蠢货的无知，告诉他们有一些东西“只有相爱的人才能体会”。后来凌一尧说，那大半年里我们是在用意念恋爱，没有一句对白。<br>为了迎接素质教育检查团的视察，学校举办一次声势浩大的秋季运动会，还从体校借了一帮外援来捧场。那三天里，全校处于停课状态，对我而言这就是另一个形式的放假而已。而我发现自己有半套黄冈密卷的作业没写，科代表说运动会一结束就要交作业，我不得不加班加点地抄答案。教室里只有寥寥几人，凌一尧突然来我们班找一位学霸妹子，也是她的初中同学。我躲在高耸入云的书堆后面，看着她们低声说笑，虽然不知道她们在聊些什么，可是她一笑，我也忍不住跟着龇牙咧嘴。不料，她一扭头看见我时愣了一下，双眼瞪得大大的，就跟喵星人准备开天眼了似的。<br>我赶紧低头写试卷，再一抬头时她已经站在我旁边，我一紧张，赶紧把那份标准答案往桌肚子里塞，比被老师发现还紧张。她伸手把那份答案掏出来，说：“我还以为你在认真学习呢，原来是在抄答案。”<br>我说“偶尔为之……”<br>她又问：“你怎么从来都不和我说话的？”<br>我说：“我怕写检讨。”<br>她的小脸涨得通红，辩解道：“那个真不是我弄的！我把那信夹在英语课本里，被曹老师翻到的！”<br>我说：“你知道姚千岁说了什么不？他说我是‘害群之马’，自己不学好还去骚扰人家品学兼优的女生，是‘癞蛤蟆想吃天鹅肉’。他都这样说了，我怎么敢再和你说话？”<br>她皱起眉头，将信将疑地说：“姚主任是想用激将法吧？”<br>我哼笑一声，说：“如果我以后有出息，这就是激将法，如果我没有出息，这就是他的神机妙算，老狐狸从来不会吃亏的。不过他也没有说错，我的确是癞蛤蟆想吃天鹅肉，可能再过多少年，我还是他手里的反面教材。”<br>“你后悔了？”她低声问道。<br>我说：“不知道……”<br>运动会之后没多久，凌一尧偷偷塞给我一张字条，她说：“如果你能够考到本科，高考结束以后咱们就假装在一起，气死姚千岁！”<br>子石和大乔很快发现我的不正常，因为我很少搭理他们俩，整天埋在教室里学习，有点“不合群”了。他们俩试图拯救我于水火之中，但研究许久都未果，直到看见我与凌一尧在教学楼走廊里相视一笑，他们才若有所悟。<br>于是，我被驱逐出三大奇葩的队列。其实没有了我，他们俩照样可以玩得很嗨，譬如用煤渣块狙击操场上接吻的小情侣。整个高三，我们都保守着这个秘密，两人即便在校园里迎面走过，也从来不打一声招呼。但我看见她浅浅的笑意，我努力压抑着内心的激动，双拳握得指甲嵌入掌心。偶尔旁边没人的时候，我会自言自语地把她的姓名说出来，然后像一只疯猴子似的狂奔乱跳，那真是一件快乐到极点的事情。凌一尧，我喜欢你呀！喜欢得恨不得在教学楼里裸奔，恨不得在操场上打滚，恨不得冲进校长办公室尖叫！那一年的高考，全省数学平均分 68 分，我只考了 38 分，总分离本科线还差 9 分！填报志愿那天，我和凌一尧在美术考生画室旁边的天台上聊天，我非常沮丧地告诉她，我没能达到本科线，她不用兑现当初的约定了，但凌一尧抿着嘴巴摇头，笑盈盈的样子。她说：“只要你努力过就行了呀。”我愣了一下，不太明白她的意思。她再对我眨巴眼睛，我这时候才猛然顿悟，开心得手舞足蹈起来，而她甩着小手直打我，叫我“不要发癫”。这是她的一个口头禅，每当我或者她的朋友开心得失态，她就会很温和地笑着，在后面提醒“哎呀，不要发癫啦！”对我而言，这个分数只适合报大专，而具体哪个学校哪个专业都是无所谓，当前要务是离凌一尧近一些，于是我和她一起去了六朝古都。我们的学校不在同一个区，但坐车也就半个小时路程，平时见面还不是难事。大一的课程比较少，凌一尧突然提出来要去勤工俭学，我问她准备干点什么，她提出来的想法毫无创意，什么饭店接待，发传单，卖电话卡。<br>我问她“你知道我爷爷干嘛的么？”她摇头说不知道。我说国庆节回家，我把他的传家宝带来，到时候你就看着吧，我小学就做他的学徒了。国庆节之后，我们在大学城摆起爆米花的小摊位，摇啊摇，摇啊摇，砰！那天爆米花很好卖，特别是凌一尧心惊胆战地摇着那个摇把，就有许多人过来围观，毕竟女孩子做这个太新鲜了。不过第二天傍晚就有人把我们赶走了，因为附近停了车子，一声炸响之后就有警报器鬼叫，涉嫌扰民。<br>尽管如此，我们还是很开心，晚上去看半价电影，柜台问我们要不要爆米花，我和凌一尧傻呵呵地笑。<br>她曾经说:“如果哪天我们想要分开了，就想一想曾经一起在街头卖爆米花的日子。”<br>现在我正在想，你呢？<br>大学那几年，我们与大多数校园情侣一样，试着一起打工却总是没有头绪，吃喝玩乐又没有太多钱，经常出去玩半天都花不了五十块钱，照样穷开心。到了期末，作为一个学霸，她完全闭门不出，专心复习，而我一个学渣只要做完小抄就可以安安心心地玩游戏了。<br>就这样一直混着，我到了大三时，我们面临分道扬镳的危险。她还要一年才本科毕业，以后还要考研，而我已经面临实习。她说:“要不你考专升本吧！”我考虑好几天，最后还是决定离开校门，我说“你乖乖上学，以后还要读研，我先出去闯，等你毕业了我刚好娶你过门！”我至今不知道自己当初的决定是否正确，有时坚定地认为那是男人的担当，但一旦喝多了就会把因果联系扯得非常远，最后归根结底到我没有好好念书才会导致两相忘的结局。我第一份工作，是在一家监理公司当资料员，每月只有一千四百元的工资。当时我最喜欢听别人说“工作难找”，因为只有听到这样的话，我才觉得自己不是 loser。<br>在监理公司工作，本应是很轻松的，但不是指我们这种苦逼资料员，每天白天忙得要命，对着电脑处理各种文件，晚上凌一尧打电话过来和我聊天，我已经累得只想闷头大睡。当时我的心情的确非常焦躁，经常怀念学校里的惬意生活，所以当凌一尧喋喋不休地说着学校里发生的好玩的事情，我却没有耐心听下去，打断道:“明天再聊吧，你也早点休息。”她愣了一下，说:“你是关心我呢，还是嫌弃我呢？”我说:“我就是很累。”她呵呵冷笑一声，把电话挂了，周围一片寂静时我却睡不着了，一下子被自己吓醒了: 三年了，这是我第一次这样大逆不道！凌一尧是一个性格很犟的女孩，她不轻易翻脸，但只要翻了脸，那就真是很难弥合了。她掀起的冷战持续足足一个礼拜，电话照接，但就是很冷淡，冷淡得让人觉得她一夜之间移情别恋了。我急得团团转，但她认为的惩罚时间一到，就立即打电话过来问“知道错了吗？”我说“罪该万死。”“以后还会再犯么？”我赶紧发誓，这辈子都不敢再敷衍她这个小姑奶奶，她这才给我一条生路。但是，冷战结束不等于我们之间的矛盾消失，她只需要学业和恋爱，而我刚刚开始承受来自各方面的压力，尤其是对未来的担忧。我当时是一个胸无大志的可怜虫，我最羡慕的职业只是总监，啥事不干就有人送烟酒塞红包，我这辈子就这点理想了。<br>资料员干了大半年，自我感觉非常良好，跟在监理后面混吃混喝，烟酒不断，施工单位把我们当爷爷供着。<br>有一天，凌一尧的手机被偷了，我发现自己的存款竟然不够给她买一只新手机。那种挫败感极其折磨人心，但凌一尧不介意，她买 ic 卡和我打电话，说反正平时只和我联系，叫我以后赚了大钱再给她买。有妞如此，夫复何求？可是这个“大钱”在哪里？我当时尚未感觉到紧迫感，还在盘算着自己哪天有了监理资格，该有多轻松惬意。<br>情人节那天，我和凌一尧在外面约会，经过一家婚纱店，她就把小脸贴在玻璃橱窗上看，她说“以后咱们结婚的话，就租这件婚纱走红地毯，怎样？”我得瑟地说“租什么租，直接买下来收藏就是了！”凌一尧蹲下来看角落里的标价牌，低声说“你至要不吃不喝一年半才能买下来。”我当时就脸红了，不是因为自己高估婚纱的价格，而是因为高估自己的能力。我居然要不吃不喝一年半才能给我的妻子买下婚礼上那件婚纱？说到刚毕业的那段屌丝岁月，心情有些郁闷，还是说点有趣的事情吧。那天我给凌一尧的情人节礼物是一只熊娃娃，四十五块钱。她很开心地放在家里，可是她叔叔家小孩看中那个娃娃，蛮横地抱了回去。凌一尧不好意思说不给，但她第二天坐了俩小时的车回到那个卖娃娃的小店，买了一个一模一样的，直奔她叔叔家，硬是把我送的那只换了回来。我说“两个都一样，干嘛还要换？”她说“我都给那一个取了名字，两个怎么可能一样？”<br>终于有一天，我决心辞职，离开这种安逸却庸庸碌碌的生活，原因之一是和我一起共事的监理大叔挨揍了。<br>当时监理有些严格，把施工单位惹毛了，平时称兄道弟的人按住老监理揍，最后甩下一句话:“你们这种垃圾，给脸不要脸，我们看在你们是业主的走狗的份上才丢点骨头给你们，你们还蹬鼻子上脸了？”他们没有为难我，但我被伤到了: 我这辈子不可以做一个捡别人残羹冷炙的走狗。原因之二便是凌一尧考研了，我想多赚钱，争取在她研究生毕业时给她一个安稳的家。她读的是本校的研究生，于是我去南京找了工作，三年的同居生活开始了。<br>房子是凌一尧找的，四十平，月租六百。我们一起购置许多东西，比如简易折叠衣橱，厨具，餐具，以及被褥。凌一尧把两副餐具摆好，脸上满是小妻子般的认真，我躺在床上看着她忙这个忙那个，突然觉得不可思议: 我十六七岁时得有多幸运才会得到这样一个小家伙的青睐！<br>凌一尧有时很像一个孩子，某个周末我去上班，她一个人在家睡到黄昏。我下班回来时她还抱着枕头睡着，我换拖鞋时她睁开眼睛，说:“吕钦扬，我最喜欢看你回家。”我说“噢”“那你什么时候最喜欢我？”我没回答上来，她有些不高兴，到了第二天早上我才告诉她“我们并肩站在镜子前一起刷牙的时候我最爱你”<br>我们那段时间的生活条件很简单，早餐是熬一小锅米粥，一小碟肉松，还有两个煮鸡蛋。我们约定谁先醒谁先去做，但每次都是她先醒，我百思不得其解，她不是那么容易自然醒的人，可是我又从来听不到闹铃声。后来我才知道，她把闹铃调成震动，把手机垫在枕头边缘，这样她就可以早起做饭又不把我吵醒。“白痴，手机会有辐射的啊！”我埋怨道。她说:“我就是喜欢喊你起床吃早饭呀！”她那得瑟的模样，就像幼儿园里得了小红花等待表扬的小朋友。<br>当时她的手机是大学室友淘汰下来送给她的，摩托罗拉的，开合时都会吱呀吱呀地响，外面的漆都掉了。我工作三个月，她的生日那天，我买了一只小的儿童蛋糕，两个人一起做了几道菜，这个生日就这样勉勉强强过掉了。晚上，她裹着被子躺在我怀里看电视，我从枕头底下摸出一只盒子递给她，她小心翼翼地打开，里面是我攒钱买的一部夏普翻盖手机。她盯着那手机看了半天，一句话也不说，我有些纳闷，把她掰过来时才看见她的眼泪啪嗒啪嗒地往下掉。我问道：“不喜欢？” 她还是什么话都没讲，直接搂住我的脖子，眼泪直接往我肩膀上擦，后来我才知道，前两天她同学嘲笑她的手机老土，“五十块钱卖给我都不要”，她怕我听了难过，就一直没敢告诉我。<br>哪怕已经相恋那么多年，凌一尧在我眼里依然是一个雅典娜，集性感，可爱，聪慧，与善良于一身。她穿着睡裙抬起胳膊晾晒衣裳；把我的脸假想成镜子左照右瞧的时候最可爱；她坐在台灯下一边写作业，一边与我讨论自由主义与无政府主义；她明知道行乞的人是骗子，但路过那些人面前时还是忍不住丢一枚硬币，以求自己良心的安宁。天气转凉的时候，她开始向同学学习针织，买了毛线照着图册开始鼓捣起来，并且不允许我偷窥她的杰作。然而当作品终于完成，试穿时她才悲催地发现毛衣小了一圈，即使穿上也像猪八戒中了三个菩萨的套索似的。我被勒得喘不过气，非常无助地看着她，她却气呼呼地拍我的肚子，说：“都怪你！养这么胖！浪费我的心血！” 为了穿上她这件开山之作，我决定努力减肥，当我觉得自己可以穿上那件毛衣，却又错过穿毛衣的季节。再后来，那件毛衣也找不着了，如今，那个为傻逼织毛衣的女孩也不见了。<br>大乔在镇江工作，而子石在宁波，有一次他们俩一起来南京玩，我们四人一起去吃傣妹。聊天时大乔说漏嘴了，说到当年他们俩和我打赌的事情，凌一尧的脸色顿时一沉，问我：“你追我就只是因为一个赌？” 我吓得脸都白了，因为我记得一些影视剧里这样的事情会导致女生彻底翻脸，大乔和子石也愣住了。但凌一尧马上又笑起来，对大乔和子石说：“那你们俩说话算数，什么时候裸奔？”<br>子石赶紧辩解说：“等你们俩结婚了，我们就在婚礼上裸奔，好吧？” “行。”凌一尧愉快地答应。我觉得非常欣慰，我们家尧尧是一个开得起玩笑的好孩子，但晚上回到家里，她终于收起笑脸，要我好好解释一下那个赌到底什么意思———原来她只是不想在别人面前丢我的面子，但该清算的账一个都跑不掉。我很遗憾当时没有趁机要大乔和子石兑现诺言，现在他们再也不需要裸奔了。<br>有时我觉得凌一尧挺难揣摩的，还是一次情人节的早上，我们在南京地铁站外面看到一个男人捧着一束花向一个女孩单膝下跪，当众表达爱意。凌一尧一脸艳羡地旁观着，一口气一直提着，直到围观结束才舒畅地吐出来，啧啧地回味无穷。她看得太认真，以至于不知不觉地将嘴里的豆浆吸管咬扁了，有点郁闷，我只得去便利店买了一瓶爽歪歪，因为可以拿吸管。我以为她喜欢这种浪漫的玩意儿，于是下午下班后也买了一束花，准备找个地方让她开心一下，不料见面后我刚把花拿出来，她吓得赶紧往旁边走，低声说：“快收起来，丢人死了！” 我有些受挫，垂头丧气地跟她一起回家，不料关门以后她一边埋怨我乱花钱，一边得瑟地把花夺过去闻了又闻，喜悦之情溢于言表。我问她为什么看别人送花表白时那么开心，她说：“喜欢看戏又不等于喜欢演戏，被人围观的时候好难为情啊，像个白痴似的。” “那我们结婚的时候怎么办？那么多人围观。。。”我问。凌一尧想了想，居然露出紧张的神色：“是啊，还真是一道坎儿，我现在就得开始做心理准备了。”<br>凌一尧读研三的时候，她家里开始给她介绍对象，反复几次之后她终于交代说自己已经有男朋友，而且交往很久了。她家问我的具体状况，凌一尧怕被反对，于是给我虚报一些内容，尤其在收入方面，她说我的职务是部门经理，月薪八千，但事实上，但是我当时只有三千五。 “你家很在乎这个吗？”我非常脑残地问。凌一尧白了我一眼：“在乎了又怎么样？难道现在还不是时候？” 我当时有种尊严遭到践踏，尤其是她虚报我的收入状况，觉得她瞧不起我当时的经济状况，于是自个儿生了闷气。但凌一尧也被她家里催得紧，加上做课题和找工作的压力，她的心情也非常糟糕，于是和我第一次吵开了。我们彼此说了很伤对方的话，她说我没出息不长进，我叫她去找个小老板，不用跟着我受穷罪。最后，她气得躲在阳台上哭。我坐在房间里，看着她用了一年多的旧包，空空如也的梳妆台，还有那只我送给她的，使用两年仍然干干净净的手机，突然心酸得疼。我走到阳台，把她拥在怀里，说了一声对不起。她没有顺从，也没有抗拒，只是望着眼前这个城市的一隅，目光里满是迷茫。我渐渐意识到，这已经不是无忧无虑的高中，也不是温饱与快乐即可安生的大学，我若是化不开她的忧虑，兴许可能永远地失去她。<br>凌一尧即将毕业时，我离开南京，因为朋友喊我一起出去闯，去海边干一个很大的围海工程。他描述了一幅美妙的蓝图，一起合伙搞土方，我在测量和预算方面有些经验，他信得过。我当时觉得这是一个千载难逢的机会，尚未与凌一尧商量便一口答应下来，我要向她证明我不是一个安于现状的窝囊废，我终究要闯出一片天地。她知道以后非常生气，但我意已决，她也不好作出过多阻拦。她给我打包行李，又一直把我送上长途车，她没有哭，但车子开动时她站在卷起的尘土里，额发在风中飘动，抬手轻轻一挥，我整颗心都猛地沉了下去。我得有多铁石心肠，才会踏上一条离你越来越远的路呀？每当我醉了酒，天旋地晕的时候，我都会想起无数个凌一尧。那个穿着校服扎着马尾辫，清秀又稚气的凌一尧；那个在昏暗路灯下偷偷塞字条给我的凌一尧；那个一接吻就会忍不住闭上双眼的凌一尧；那个睡到半夜突然抱住我的胳膊说“我爱你”的凌一尧。但唯有那个站在黄昏余晖中无奈地目送我远去的凌一尧，最让我寝食难安，甚至哪天让我死不瞑目。<br>海边的气候非常恶劣，紫外线强度高，而且海风像刀子一样，脚下的土地踩十秒就能踩出一个吃人的陷阱。除此以外，我们住在活动板房里，而工人们直接搭了简易窝棚，而且每一滴淡水都是稀缺资源，尽管我们面对着整片大海。我们先请承建单位吃饭，穿得体面的都是 X 总，稍微邋遢的都是 X 工。这帮人都不是善类，他们在酒桌上的目标不是吃饭，也不是谈事，而是要把对方往死里灌，这也是朋友带我过来的原因———扛酒是我的技能之一。这一喝，便是一顿接一顿，有时上顿的酒还没醒，下一顿的酒又开始了。那天为了报价的事情，我们又请客吃饭，觥筹交错的时候凌一尧突然打电话来，说：“我肚子疼得厉害。”<br>“怎么了，来那个了？”我问。<br>“不是，就是疼。”<br>“是不是着凉了？要不要去医院看一下？”除了这些废话，我还能说些什么呢。<br>“你在干什么？”<br>“我在喝酒呢。”<br>凌一尧无奈地苦笑，说：“喝酒？那你继续喝吧。”然后她挂了电话，我再回拨过去，已经没人接听。此时，里面的人在喊我主持那圈酒的喝法，我只得回到包厢，然后又是喝醉。坐车回海边，一路停了四次下来呕吐，吐得魂都要丢了，却还要逞强大骂这种酱香型的酒太他妈不适应了。第二天酒醒以后，我才依稀想起凌一尧说肚子疼的事情，赶紧打电话过去慰问。她说她夜里吃了止疼片，迷迷糊糊一会儿醒一会儿睡，直到天亮才眯了一会儿。这就是恋人分离的痛苦，你不知道她有多需要你，而她不知道你有多心疼她，两个人都在各自的世界以为自己是被遗忘的那个人。大多数的矛盾都是在这种分离中诞生，若是近在咫尺，天大的矛盾，一个拥抱即可化解。“我离开这段时间你还适应吗？”我问。她沉默片刻，说：“还好，快习惯了。就是一看见你的拖鞋，枕头，牙刷和杯子，都有些失落。以前打扫房间时在床垫底下找到你的臭袜子都会骂你，现在找不到了，却更加难过。”<br>那个围海工程相当艰苦，与大海斗智斗勇，一边铺路一边通车，潮水一来就得逃命，潮水一退就得抢工期，有时昼潮夜汐冲得猛烈，几天的血汗都白费了。那间房子的租期快到了，房东要一次交满一个季度，而我和凌一尧的八万块共同定期存款还有一个多月。她舍不得放弃利息，问我有没有现金，可我身无分文。刚好有一个堤坝等待合拢，若是潮水来了，豁口会被冲开，而抢堵的时间很有限。业主方为了避免大的损失，许诺谁去把这事操作了，可以现场支付劳务费以及机械台班费，双倍。其实这事的危险并不大，只不过潮水将至，上机操作的人会被困在堤坝上，直到潮水退去。我和另一个小伙子约好一起上了，两个人，两台大型挖掘机。一个多小时左右，豁口堵住了，我想回到岸上，但指挥部不允许，要我们呆在挖掘机上。果然，二十分钟后，潮水铺天盖地漫上来了，把黑色的编织袋堤坝淹没了，刚好把挖掘机的履带淹没一半。我四周都是茫茫的海水，海风卷着浪水往驾驶舱打，像下雨一样。没有方向感，恶心，眩晕。期间，凌一尧发短信问我在干什么，我没敢告诉她我在海水中央，我说外面在下雨，我在打牌。她说:“你不是一向不喜欢打牌吗？”<br>我说:“玩玩嘛，闲着。”她有点不高兴:“你不要沾惹那些坏习惯。”整整三个小时，潮水才渐渐退下去，我回到指挥部已经反胃得不想吃饭。拿到业主给的两千元现金，我直接开着一辆破摩托车赶往十五公里外的小镇，把钱打了过去。“我把钱打给你了。”我打电话说。“你前天不说没钱么？借的？”我说“是啊”她切地一声，说“你才不会向别人借钱呢，你不会是打牌赢来的吧？”我楞了一下，然后笑:“哈哈，被你发现了。”<br>凌一尧是一个十足的守财奴，即便她不缺钱，也不舍得在享受消费上花费过多。相处那么多年，她惦记过的名牌东西少之又少，我几乎可以数得过来。她曾经眼巴巴地惦记 IPONE4，我打算给她买一部，但她嫌贵不肯要，最后买了一个 IPOD。她一手举着 IPOD，一手举着那只被时代甩得老远的夏普翻盖，说：“这两个加起来，就是 IPONE 啦，分工还很明确呢！”<br>　　我问她：“你干嘛那么节省？”<br>　　她说：“怕把你花穷了，以后娶不起我。”<br>　　我又逗她：“如果以后咱们俩不在一起，你不是亏大了吗？”<br>　　她一边鼓捣着 IPOD，一边随口答道：“那更不能乱花了，万一别的女孩大手大脚的，你更娶不起了。我得给你攒着，不能让你打光棍。”<br>　　她当时只顾着玩游戏，没有多想，可是晚上睡觉睡到半夜，她突然一下子坐起来，把我吓了一跳。我问她：“你怎么了？”<br>　　她说：“刚才做梦，梦见你白天和我说的话，你为什么说以后咱们俩不在一起？”<br>　　我无奈地解释：“我就随口说说而已。”<br>　　她把被子往旁边一扯，睡到床的边缘，背对着我，嘀咕道：“以后不许说了，提都不能提。”<br>凌一尧从未到过海边，她印象中的海滨是蓝天白云软沙滩，海水哗哗地舔脚丫，但我这里是黄海，海水像咖啡一样浑浊，海风达到六七级是起步价。她毕业时曾经想来这里看我，但我没有让她来，只是说我一闲下来就争取回去找她。我怕破坏她对大海的憧憬，怕她嫌弃我十天半个月不洗澡的邋遢，怕她心疼我的嘴巴因水土不服而长出一圈血痂。这里连一个女性专用的卫生间都没有。她到处找工作，尽管姿态摆得很低，却还是屡屡碰壁。有的单位觉得她的学历过高，生怕她呆得不长久，于是不录用；有的则完全将她视为一个普通的劳力，开出的待遇很低；甚至有人觊觎她的年轻漂亮，作出一些暗示。而那段时间，我们正在和当地的一拨人开仗，他们带来几辆渣土车堵路，要包揽这里的活儿，叫我们让出便道工程。若是在城市里碰到这种飞扬跋扈的人，我兴许会躲得远远的，宁可吃一点亏也不去招惹，但这次不一样。我要生活，我赚钱，我要像野狗一样咬死所有抢我饭碗的同类。那场架的参与者大概有四十多人，我们这边是一帮来自天南地北的年轻人，而对面都是当地的流氓。我们这边的人大都是老实的工人和斯文的技术员，要么不会打架，要么下不去手，非常吃亏。我遭到围殴，后脑被狠狠捶了几拳，整个人都懵了，拎起一块木方就挥舞，完全处于混乱状态。那个和我一起守堤坝的小伙子被打急了，他满脸鲜血，一边吼着，一边爬上一台轮式挖掘机。油门一加，斗子的钢齿直接拍扁一辆渣土车的驾驶室，这样一个疯狂的举动，终于镇住那帮地痞，也保住我们的便道工程。事后我才发现，我左手疼得厉害，端不起饭碗。我朋友送我去医院拍片子，虎口骨折并且肌腱撕裂。原本这事我们可以报警，让对方赔偿，甚至以故意伤害罪起诉，但是一旦如此，那个开挖机的小伙子也可能逃不脱干系。<br>老板说：“这事就算了吧，医药费我们自己付。” 而左手虎口的伤，虽然差不多治愈了，最终还是留下终生的缺陷，大拇指的反应非常迟钝，握拳执物时总是非常别扭。老板叫我不要去鉴定伤残，直接承诺补贴我五万元，有时，我们对于这个社会而言只是一个小小的工蚁，随时可以是一个牺牲品。凌一尧知道以后在电话里哭，叫我赶快回南京，但我没有听她的，固执地留了下来。我叫她再等我一段时间，只要工程结束，我拿了工资分红和伤残补贴金，就完全有能力娶她回家了。<br>凌一尧向来是一个非常隐忍的女孩，如果不是沉重得让她无法承受的坏情绪，她都不会轻易向我宣泄，顶多闹一闹小脾气就过去了。她终于找到一份算得上满意的工作，每天一个人上班下班，一个人吃饭睡觉。我从镇上搞来一个无线上网卡，夜晚闲下来时会开车开到一个搜得到信号的堤坝上，和她视频一会儿。她每次都会像约会似的认真对待，梳洗化妆，连小房间都收拾得干干净净。由于摄像头和屏幕是两回事，我们轮流看着着镜头，好让对方可以感受被“深情凝望”的滋味。有时我会说：“尧尧，我想要你了。”她说：“来吧。” 然后我们互相抖窗口，这就是相隔数百公里的性爱。有一天，她加班到十点多，往回走时遭到一个变态男人的尾随，无论走得多快，对方都紧随不舍。情急之下，柔弱的她向路边一辆车子求助，司机帮她用远光灯照那个变态，并且大声叱问，那个变态才落荒而逃。尽管安全脱险，但凌一尧受到很大的惊吓，一整夜都没敢睡觉，她打电话与我吵架，问我到底回不回去。我给出的答案与以往一样，做完这个工程至少能带十七八万回去，只要干完就立即回去。但她不依不饶，两人开始争吵起来。最后她说了一句狠话：“我今天要是被人强奸了，你带一百万回来又能怎么样？你口口声声说赚钱是为了娶我，我看你是为了你自己，这样的恋爱谈了还有什么用，有你没你都一样，不如分掉算了。” 那天我陷进淤泥潭里差点丢了小命，被人救援上来腰部以下几乎麻木，从小到大从未受过那样的罪，本来就满腹的委屈，被她这样一说，我也忍不住光火了：“分就分！嫌我没出息的是你，现在埋怨我不在身边的又是你，你以为我想背井离乡在这个鬼地方卖命？既然这样，你去找一个富二代好了，不愁没钱花还天天陪着你，只要拔一根毛就能把你娶走！” 她听我这样一吼，顿时被呛住了，电话那头沉默许久以后她才低声地说：“吕钦扬，你以前不是说过么？我是你辛辛苦苦追来的，几千双眼睛见证的。。。” 她说到这里就说不下去了，带着哭腔挂了电话。而我一下子醒悟过来———高中毕业的那个暑假，我曾经说过，“你是我辛辛苦苦追来的，几千双眼睛见证的，以后只有你甩我，没有我甩你。即使你哪天说了分手，我也不会答应。” 原来她一直都记在心里。<br>当我年底离开海边，那场异地恋已经持续长达九个多月。这九个月里，我们一个在风急浪高的海边，一个在节奏匆忙的城市，过着完全迥异的生活。我提着行李包从车站里走出来，城市的喧嚣让我觉得无所适从，就像一个流放雪山多年的野人。一看见我，凌一尧的眼圈就红了，她扑上来一把抱住我的时候，周围的人都在好奇地看着，仿佛我们是偶像剧的男女主角。当我走过一面镜子，无意中往里瞥了一眼，这才明白到底怎么回事———我穿着一件我自以为还算干净的军大衣，面部被海风和紫外线弄得又黑又粗糙，头发不自然地翘着，仅仅在路上耽误两天就长出青色的胡渣，完全是一个年轻农民工的形象。而我身边的凌一尧，衣着细致，身材窈窕，化着几乎看不出来的裸妆，完全是一个漂亮得让人忍不住多看几眼的都市女孩。不知道怎么的，她挽我胳膊时，我不自觉地往旁边避让，总是不习惯这样的亲昵。她很快感受到我的疏远，也不再勉强，打车时我们坐在后排，每人坐一边，互相不说话。她带我去买衣服，然后一起去宾馆开房，我洗澡时她帮我搓背，两人赤裸相对时我才告诉她，刚才我突然涌起一阵自卑感。凌一尧努力地搓我身上的尘垢，摸到我后背那条不慎被钢钎剌出来的狰狞伤疤，她用手指轻轻触碰着，许久都没有说话。“早知道是这样，死也不会让你去那里。”她说。我却非常希望她看到我的成就，我洋洋得意地告诉她，我已经和那个公司的领导处得很好，年后可能要被派去乌鲁木齐负责一个项目，年薪十五万。然后我自顾自地描述一个美好的未来，要考一级建造师，要赚更多的钱，要积累更多的经验和人脉，以后还要自己拉工程队单干。但凌一尧对此并不感兴趣，而她是我唯一在乎的听众。那天我们做爱了，我不记得久别重逢时的具体细节，只记得她突然狠狠地咬住我的肩膀，像被夺食的猫一样死死地咬住。我疼得连头皮都麻了，却没有反抗，我知道她心里堵着许多情绪不知如何表达。那两排细细的齿痕至今未消，一直烙在我的左肩，有时我怀疑它是一个诅咒，如影随行，一直延续到我彻底忘记她的那天。<br>不知道为什么，以往二十五六年，我一向是文艺小青年，但在海边呆了大半年以后，我突然怎么也变不回来了。即便我穿着体面的衣裳，做了好的发型，但几天以后衣裳皱巴巴了，发型也乱糟糟了。我觉得自己像一张被烫皱的透明糖纸，再也熨不平了。最让我无法接受的是，回到正常的人类文明社会，我才发现自己的肤色与周围的同龄人明显区分开来。为了恢复原先的肤色，我买了各种牌子的美白护肤品，每天早晨中午和晚上都要用一遍，甚至在堂妹的指导下学习使用面膜。可是，海边滩涂的紫外线辐射比城市高出数倍，咸海风侵袭下的肌肤就像风腊肉一样，那些措施几乎不起一点作用。我之所以那么焦躁，是因为她的父母又在给她介绍对象，我年底必须去拜会一趟，让他们认可我这个女婿。当我把内心的忧虑告诉凌一尧，她毫不在乎地安慰道：“没事的呀，我就说你是为了养我才去闯的，他们不会为难你的。”她这样一说，我才稍微安心下来，但事实证明，我此生做的最失败的事情，就是将那么重要的拜会搞砸。<br>大年二十七夜，我拎着几瓶天之蓝登门拜访，虽然她父母很热情，但我总觉得那更多是一种客套。吃饭时她爸爸问到我的学历，职业，以及家庭，我敢肯定这些问题他已经在凌一尧面前问一遍，只是想要我亲口重新给一次答案。这种技巧性的拷问让我非常不自在，但还是毕恭毕敬地回答：我大专毕业，现在做工程，家离市区还有十几公里，父母都是种植花木的农民。她爸爸说做工程赚钱，现在农村人日子过得挺好，她妈妈一直没有表态，只是叫我喝酒吃菜。酒一喝多，我就觉得自己的口风有点把不严了，于是忍住少开口，而她妈妈这个时候提及我这有碍观瞻的肤色。我的心里堵得慌，满是委屈，又不敢反驳，生怕酒劲之下言多必失。凌一尧跑回房间，拿来我以前的照片，解释说我以前不是这个样子，她爸爸则打圆场说年轻人不怕吃苦很难得，又不是天生黝黑。那原本只是一次不太完美的拜会，但下楼的时候，遇到的一件事情让这次拜会变得非常糟糕。我离开时他们送我到楼下，刚好小区里有邻居远远地打招呼，她父母都一起过去握手闲聊，凌一尧和我在原地聊天。但她妈妈很快也把凌一尧招呼过去，向对方介绍这是自家闺女，研究生毕业，在哪里哪里工作。这个时候我才发现，邻居那边有一个年轻的小伙子，皮肤白皙，一身的书生气。凌一尧在父母的指引下叫伯伯，叫婶婶，接受夸奖时礼貌地笑，不时地回头望我一眼。我看着一辆电动车后视镜里的自己，皮肤黝黑，加上酒后的模样，完全不是我自己能接受的模样。我在那里傻傻地站着，不知道该怎么办才好，最后我还是带着一身酒气，沿着墙角自个儿晃了出去。<br>凌一尧打电话来的时候，我已经坐在出租车里往回走，她问我为什么不辞而别，我呵呵地冷笑。我不敢对她父母表达内心的不满，只能把气撒在她的身上，我故意用冷漠的态度让她内疚，让她知道我不是没有尊严。可我偏偏忘了，那个愿意一边抹眼泪一边默默被我肆意伤害的凌一尧，正是那个唯一在乎我情绪的人。别人都只在意我飞得有多高，飞得有多远，只有她在意我飞得累不累，也只有她希望我停下来歇一歇。可惜，我这样一个贱人，最擅长的就是伤害身边最亲近的人。</p><p>尽管豆瓣有许多人相信星座之说，但我还是坦言，我对此丝毫不信，无法理解为什么可以用出生月份来判断复杂的人与事。但与星座学说相比，我更讨厌别人拿生肖说事，因为网络上的星座学通常是不伤人的马后炮，而生肖说则经常成为棒打鸳鸯的帮凶。同样是出生于虎年与龙年，成人之美者会说这叫龙盘虎踞，而掘坟毁婚者则说这叫龙虎相斗，有人向凌一尧灌输第二种说法。凌一尧当然不会相信这样的无稽之谈，但她妈妈非常固执地将它视为我与凌一尧不合适的理论依据之一。那个时间，刚好我与凌一尧相处得颇为不融洽，彼此明明没有一点恶意，但不知道中了什么邪，说着说着就因为一点措辞之类的小事吵得不可开交。她总是责怪我脾气太犟，而我总是埋怨她当初没有提前公开我的存在，最后不欢而散，一次又一次地验证“龙虎相斗”的说法，尽管之前的八九年都相处得那么愉快。2012 年大年初四，我去市区时打电话给她，她说在寺庙里上敬年香，要傍晚才能回去。可我真的很想她，打算当面向她道歉，化解目前我们两人之间的矛盾呢，于是守在她家楼下的凉亭里等候着。等了三个多小时，我终于看见她回来了，但坐的是别人的车，开车的就是上次那个书生气十足的男人. 车子是本田歌诗图，即便我耗尽当时的积蓄也未必能够拥有. 他们两个人一起下车，凌一尧似乎情绪很好，而那个男的也笑着，手里咣咣地掂着车钥匙。他们一起上楼，凌一尧家所在的那栋楼。我本来打算将她喊住，但直到他们的脚步从楼道里消失，我都没有开得了口。<br>那种失魂落魄的感觉，简直每分每秒都试图置人于死地，每一次心跳都像锤子在胸口猛敲，我难过得恨不得直接往马路躺下来，谁把我撞死谁就是我大爷。我与凌一尧恋爱的初期，我们都小心翼翼地经营着，有时也会因为一点小事儿生闷气，无端吃醋，生怕人生第一场恋爱夭折。但时间一久，慢慢磨合着，彼此之间竟然如同家人般相互依偎，从不敢想过旧人换新欢，从未想过分离的一天。</p><p>但这一天终于还是来了。<br>尽管凌一尧说那是长辈们的安排，她个人从未认同，一口咬定我是在无理取闹，但我问她那天为什么和别人一起去敬年香，为什么不直接去拜堂算了，她一下子愣住了，然后说：“你不相信我？” 我想说我当然相信她，但我只是无法忍受她与别人像情侣一样在人前出入，更不能忍受当整个世界都对我发动围剿暗算，而我认为绝不相负的那个人却站在战场的另一边。我的所有姿态，尊严和自信，都一下子垮了，就像《悟空传》里那只猴子一样，被刀劈斧砍雷劈火烧之后只剩一副躯壳屹立不死，但紫霞仙子的一句话，便让那双眼睛再也失去神色。元宵节之前，她父亲忽然打电话给我，约我单独见一次面。</p><p>她的父亲约我在一家茶座见面，我并不知道他要聊什么，但还是努力做了准备，争取让他明白我对凌一尧的感情。<br>但我坐到他面前，才发现我根本没有为自己辩护和自荐的机会，她父亲几句话就将我堵得死死的。他说:“这段时间我虽然没有过问你们的事情，但我也看得出来，你和尧尧处得不好，她经常躲在房间里哭，不吃饭，两个人连相处都不好，还怎么一起生活？”他又说:“我选这个位置，就是想让你看看这个路口，今天还算天气不错，但雨雪天呢？严寒酷暑天呢？别的女孩坐在车子里打着空调，我们家尧尧坐在你摩托车上淋雨顶风晒太阳吃尾气？我们不是势利也不是物质，只是希望她过得好。”我终于抢话说:“我不会让她受穷，我会去赚钱，我已经有二十多万了，以后我也可以让她过上好日子！”她爸爸呵呵笑了一声，说:“以后？你没有权力要求别人等你一个空头支票啊。”<br>而后，她爸爸还说了其他一些东西，譬如我和她站在一起就没有夫妻相，她母亲也不希望凌一尧嫁给一个包工头。<br>但我已经无力听下去了，脑子里只是想着大二那年我们一起去周庄玩，吃饭时旁边一个话唠老太和我们搭话，啧啧地赞叹我们是金童玉女，以后生出来的小宝宝一定也很漂亮。当时凌一尧红着脸一直笑，而我闲得无聊与老太太扯，老太最后一拍大腿去择菜去了。当时我心口压抑得难受，担心自己一个黝黑的爷们儿当众哭出来，站起来不服气地对他拱了拱手，转身去前台结账走人。我当时心口堵得慌，胸口压着一块巨石，像一条狼狈的狗一样微微张着嘴巴，呼吸困难且短促。</p><p>那段时间，凌一尧的日子也不好过。她明确拒绝他人的安排与介绍，每天不洗漱打扮，更不出门，用这样的方式向我证明自己的立场。为此，她与母亲发生激烈的争吵，闹得左邻右舍都议论纷纷，她母亲患有支气管炎，春节还没结束就住院了。但我又能怎么办？虽然她父亲还没说完，我就起身离开了，但我明白他此行的目的绝不是对我羞辱或是嘲讽，而是要我与凌一尧停止交往。我过得黑白颠倒，不知道自己为谁而活，活着到底有什么意义，脾气变得极其暴躁。早在 2008 年，我妈妈就已经见过凌一尧，她知道我遭遇怎样的事情，几次自责自己没本事，没有为我积累财富。我没有安慰她，也没有责怪她，只是一个人独自发呆。我把所有罪责都归结到自己是一个穷小子的原因上，也是从那段日子开始，我对金钱产生无比执着的痛恨，以及无比狂热的向往。刚好朋友打电话过来，约我一起去乌鲁木齐参与一个太阳能发电站的工程，但需要提前垫资。我几乎没有犹豫，一口答应下来，决定把我和我父母所有的积蓄一起带上，孤注一掷。事到如今，我已经没有什么好畏缩的，我连凌一尧都输了，还有什么输不起的？大不了哪天形影相吊，身无分文，找一个安静的地方了结这条可笑可悲可怜可耻的贱命。临行之前，凌一尧打电话过来，她说：“吕钦扬，我们分手吧。”只是简单一句话，不由我分说，她便直接挂了电话。不知道为什么，我心里竟然一点痛楚的感觉都没有，麻木得就像一块死肉，直到许久之后手机再次震动，我才醒悟过来。凌一尧在短信说：“刚才免提说给我妈听的，你不要当真。你今天去订票，我们一起回南京。”我一下子精神起来，回复说：“要什么时候的票？”“明天中午，好吗？”她像在哀求我。我当即开摩托车赶去车站，一路狂飙七八十码，订了第二天中午 11 点 20 分去南京的长途车票。当时我的内心掺杂着各种情绪，疑虑，自责，兴奋，欣慰，以及被全世界围剿时与她一同突围的悲壮。</p><p>第二天上午十点我就在车站外面等候着，手里捏着两张车票，既期待又忐忑，就像守在高墙外即将与主公家千金私奔的狗奴才。</p><p>凌一尧一开始还低声和我打了电话，说等会儿就出来，但两个短信之后，便再也没有动静。我有些焦急，但又怕在不恰当的时刻打不恰当的电话，于是耐心地继续等。11 点 20 分过去了，车子发动了，她还是没有出现，我捏着两张过期车票傻傻地站在那个空空的检票口。大约十一点半，她终于发来短信，说:“你直接来南京，我已经在路上了。”我不知道发生什么事情，猜想今天的她一定处境混乱，于是顾不上多问，赶紧重新买了最近一班的票。<br>我颠簸一个下午，到达凌一尧那里已经快到下午七点。我们避开那些不愉快的话题，就像以前一样一起拥抱，亲吻，然后去外面吃饭。那是我第一次请她吃西餐，也是我第一次吃西餐。当厨师把牛排端上来，说他要揭盖子了，而我木然地看着他，不知道他揭盖子与我有什么关系。凌一尧解围说:“先帮我揭吧。”她把红色的餐巾挡在面前，厨师揭开盖子，油星点四溅，被餐巾挡住。我当时才想起来，这步骤我以前是知道的，只不过在外面呆久了，早已忘记。那厨师望了我一眼，又看了凌一尧一眼，虽然面无表情，一句话都没讲，但不知道怎么了，我就是莫名其妙地多想了。晚上我住在她那里，那个我们曾经一同经营的小家。与以前一样，我们一起打扫整个寒假都没人住的房间，一起铺床套被子，然后轮流洗澡，最后在床上拥吻做爱。那天我有些蛮横地占有她的身体，她似乎感受到我的情绪，一直咬着嘴唇默默承受着，但我准备退出去戴套时她却搂住我的脖子，说:“就在里面！”我问:“安全期吗？”她低声地说:“不是。”我看着她的眼睛，她目光坚定，她的手指紧紧地抓着我的肩膀，指甲嵌入肌肤，仿佛已经决定破釜沉舟，再也不回头。</p><p>那天晚上十一点多，我们都没有睡着，在被窝里牵着手，讨论以后的安排。我说我想去乌鲁木齐一趟，大约五个月的工期，只要赚到这笔钱，我就可以大大方方站在她的父母面前，用事实证明我可以让凌一尧过得好。凌一尧听说我将全家所有积蓄都搬出来拼，建议我不要去冒险，希望我在南京找一份工作。我问道：“如果我不去赌一把，守着一份少得可怜的工资，你父母永远不会瞧得起我。” 她说：“万一输了怎么办？” 我一下子被问住了，因为我当时对金钱财富充满狂热，就像一只饿极的猴子，敢于去抓万丈悬崖边的一只野果。我没有回答她，只是把她拥在怀里，把脸埋在她柔顺的长发里呼吸，一阵恐惧涌入心底。我赌输了怎么办？ 兴许我会一死了之，把这具臭皮囊丢在新疆的戈壁滩上喂野狗吧。正是在这个时候，她母亲打电话过来，凌一尧打开台灯，忐忑不安地接听，那头的声音也被我听得分明。她母亲询问她有没有安顿好，晚饭在哪里吃的，什么时候上班，最后才兴冲冲地说：“罗 XX 这孩子真不错，今天特意把你送到南京，回来时还给我带了南京的盐水鸭，真是很勤快。” 凌一尧很尴尬地看我一眼，敷衍道：“哦。” 然后她妈妈又说：“你和那个吕钦扬分了就分了，不要再有来往，纠缠不清的惹闲话。这个罗 XX 条件不错，又是知根知底的，你们俩再处处，平时多打打电话，或者上网聊聊，总会处出感情的。” 凌一尧只是嗯嗯地应着，不敢抬头看我了。电话挂断之后，凌一尧翻身过来抱住我，在我胸口蹭来蹭去，叫我不要介意，她只是敷衍一下而已。我的心情就是非常沮丧，甚至觉得躺在这张床上是一件很不道德的事情，我说：“你现在怎么有那么多事瞒着我？” 凌一尧说：“你以为我愿意藏那么多事？我妈问我有没车票，我说没有，她就叫罗 XX 送我了，我不告诉你是怕你多想，不肯来南京找我。” 可我那可悲的自尊心又开始作祟，脑子里老是想着她和那个人坐在那辆歌诗图里，而我像一个傻逼似的坐在长途客车上。我没有责怪她的意思，我只是恨自己为什么总是处于下风，为什么那些人非要这样巧取豪夺。凌一尧又是安慰，又是发誓，甚至不停地挑逗我。以往她惹我生气了，只要这样一挑逗，挠我的痒痒，我便翻身将她扑倒，一场小矛盾便化为乌有。可惜，这次不奏效。她思索片刻，翻身趴到我的胸口，说：“吕钦扬，如果下个月有个人不来找我，我希望你能尽快赶回来，好吗？” 我一下子风声鹤唳地紧张起来，问道：“谁？罗 XX？”她平静地说：“我大姨妈。”我一时没反应过来，她又补充道：“或者我找你去。” 我这时候才反应过来，一把将她拥入怀中，恨不得把她勒得窒息。凌一尧呀凌一尧，我喜欢你喜欢得恨不得为你去死，我想把我赚来的每一分钱都交给你花，我想让你这辈子都不受半点委屈。我不想远走他乡，我不想颠沛流离，我不想每天早晨一睁开眼睛就很失落，不知道你在哪里，心情如何。我想你啊爱疯飞饿啊将发往放 PJGFKCFOIAF 哦额坟挖金风科技啊绝非挖掘啊我佛架飞机哦额外 JPAWFJO AWIJGFAWJI AFGE A FEO KPFWO XIANG NI A A OA AF FAW FA F OF 哈哈复合肥哈额发发火佛 QFA Q 飞饿肌肤 iaf 哈哈哈爱好哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈哈哈啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊 (这里一段乱码就是原文估计 LZ 写到这里戳到痛处咯）。</p><p>那天凌一尧送我去车站，但她连候车大厅都没有进得去，两个人在安检口就仓促地分开了。我本来想再回头与她告别，但门口拥堵着太多旅客和工作人员，我们只能隔着长长的通道望着，最后打着手势，两人在玻璃幕墙内外杵着。我们互相听不见对方的声音，只能面对面地打电话，就像囚犯与探监者一般。她说：“我昨天把重要的东西都收拾在包里了，打算今天一直送你到站台，兴许到时候一咬牙就直接跟你一起上车，一起去乌鲁木齐。”听着她这有些孩子气的话，我不禁苦笑一声，问道：“你这是想私奔么？” 她却将脸凑近玻璃，认真地说：“我没有开玩笑，我真想过了，我也做得出来。”我伸出手指在玻璃上刮了一下，就像以往刮她鼻尖一样，检票口通知检票时，我在玻璃上哈气，写了两个反体字：“等我。”我不喜欢南京车站，我讨厌一切为了管理方便而设定的有悖人情的垃圾规定。从南京到乌鲁木齐，一共 41 小时，我睡了又醒，醒了又睡，做着各种各样的梦。其中一个梦最为蹊跷，当时一个列车员推着小车来售卖零食饮料，我刚好迷迷糊糊地睡着，做了一个非常奇怪的梦，梦见自己又回到高三，我和凌一尧迎面走来，她的嘴角洋溢着微微的笑容，我走过去大声地说：“凌一尧，我们以后会在一起，十年，我们以后还要结婚！” 然后凌一尧骂我是流氓，周围的同学都笑，连大乔和子石都笑，我非常生气地告诉他们俩这是真的。不一会儿，姚千岁大老远地跑过来，手里拎着一个棍子，我就没命地跑。按理来说，梦里的人不会跑得快，可我跑得非常快，甚至能感受到头发被风扯得嘶嘶作响。我就那样一直跑着，感觉这辈子都要用来奔跑，我很快乐，我要大声地笑。旁边人的声音陡然提高，我一下子从梦里惊醒，发现那列车员竟然仍然推着车子往这里走，前进距离不超过五米。当时我突然想起一个悲观的故事：黄粱美梦。我真希望自己这辈子一直活在那个梦里，被姚千岁追赶着，拼命地逃命着，全校学生都在笑着，教学楼阳台和路边都黑压压地站着一大片，就在围观运动会上的三千米长跑。那时候的我还是一个勇敢的少年，而凌一尧也是一个羞涩文静的少女，我们所有的爱情都藏在那一次次擦肩而过，沉默不语的微笑里。<br>新疆的戈壁滩，开春之前的积雪淹没小腿，我戴着银行劫匪般的头罩，裹着又长又厚的军大衣，扛着沉重的仪器，在荒野里深一脚浅一脚地跋涉。海边是湿冷，这里则是干冷，但温度低得出乎我的想象，我的嘴巴不停地开裂。夜里盖着被子时脚上的冻疮痒得难受，只能伸在外面冻一会儿，冻醒了再缩回被窝里暖一会儿，痒醒了才伸出去冻。凌一尧想给我寄冻疮膏，但快递根本不可能送到，我这里太偏僻了，连蔬菜和肉都要从很远的地方拖过来。一拖就拖一卡车，一吃就是大半月。一起在这里混生计的也有与我差不多年龄的，农民工耐得住吃苦，但那些细皮嫩肉的年轻人都熬不住，没呆几天便跑得光光的。幸好我在海边干过大半年，那边的条件比这里好不到哪里，早就习惯了，何况我已经没有退路。过了没多久，凌一尧打电话告诉我，例假来了，孩子没来。她显然有些沮丧，而我说不清自己是什么心情，也不知道自己应该怀有怎样的心情。她家里还是极力试图促成她与罗 XX 在一起，我们之间偶尔还会因一点小矛盾而争吵，我的脑袋像被门板夹过似的，明明知道她与我一起抗争着，可还是忍不住一次又一次通过这种拙劣的方式来向自己证明她没有离我而去。由于工地的 GPS 仪器出了故障，我们不得不利用原始方式定位高度。我背着二十公斤的全站仪，拿着对讲机，跑出很远去寻找被大雪淹没的原始基准点。不料，我走着走着就迷失方向，我以为可以摸回营地，不料最后我连自己的脚印都找不到了，而对讲机那头的那帮人根本无法判断我的方位。这是我以往在海边从未遇到的状况，有种被人类世界抛弃的恐慌，我不敢乱走，叫那些工人赶紧回营地找人救援。但直到晚上九点，夜色已然降临，四周只剩白雪映出的冷光，还是一点进展都没有，对讲机里满是男人们乱哄哄的争吵。我以为自己的小命会丢在这里，只能背朝肆虐的寒风，用大衣裹住身体，拼命维系最后那点体温。我掏出手机给凌一尧打电话，但要么就是信号全无，要么就是无法接通，连他妈的他妈的他妈的他妈的短信都总是他妈的他妈的他妈的他妈的他妈的他妈的发送失败。我平生第一次发现自己是一个胆小鬼，这样怕死，我怕我死了以后父母没人照顾，怕自己无法被及时发现，怕凌一尧见到的是一具面目全非的残骸，更怕自己像狗一样无人问津地曝尸荒野，葬礼上连一个为我哭泣的人都没有。凌一尧啊凌一尧，如果我真的死在这里，请呼唤我的名字，把我的灵魂带回故乡吧。<br>我找了一个地势稍高的土坡，将全站仪加在坡顶，以便尽早被人发现，然后躲在北风面的凹处，能活多久就活多久。我不知道自己能不能熬过去，做好最坏的打算，用冻得几乎失去知觉的手横握着笔杆，借着雪地映出的微光，在施工日志的中页写遗书。我在这里投了多少钱，外面还有谁谁谁欠我钱，我又欠谁谁谁的钱，我的户口还在学校里没拿回来，如此而已。我本来想说对不起父母，早走一步，劝凌一尧不要悲伤，下辈子有缘再见，但我歪歪扭扭地写完那些账目，再也没精力写字了。我蜷缩在那个角落里，脑子里开始胡思乱想，想着我要是即将失去意识，应该用什么样的姿势才显得体面安详一些，不至于狼狈潦倒。有时我觉得这身体已经完全不属于我自己，四肢像木头一样无知无觉，心脏是性命寄生的最后一块阵地。也是在这个时候，我依稀听见上风口传来发动机的声音，还有人高声呼喊，以及雪地里沙沙的脚步声，随后有人从身后的土丘上冲下来，蹲在我旁边一边喊我名字一边拍我的脸。我感觉自己像被人摁在水里，所有的声音都含糊不清，灯光尤为刺眼，看不清他们到底谁是谁，也不知道自己到底算是获救了，还是正在垂死。他们把我抬起来往上一提，我整个人就像飘进太空的一块废料，所有的意识都跟着失重地飘着。他们把我抬进开着空调的车子里，盖上厚被子，让人揉捏我的四肢，不停地呼喊我，叫我保持清醒：“吕工，吕工，吕工……”我恍恍惚惚地就听见一个熟悉的声音：“吕钦扬，吕钦扬……”我一下子坐了起来，拼命地推开那些工人，瞪大眼睛努力地四处观望，发现根本没有凌一尧的身影，又颓然地倒了下去。后来，那些工人和我喝酒时经常拿这事开玩笑，说他们当时被吓了一跳，以为我是回光返照，以为我是听到勾魂小鬼的点名。我一边喝酒一边嘲笑他们的迷信愚昧，哈哈哈哈哈哈哈哈。呵呵。医院离这里太远，我被带回营地以后烤了一会儿的火也就缓过气来，他们便让我躺在床上休息，专门让烧饭的老头子来伺候我。我一觉睡到第二天下午才醒，掀开窗帘看见一轮咸鸭蛋黄般黯淡的红日，凌厉的冷风吹得活动板房的单层玻璃呜呜作响。我喝了热汤，让老头子给我手机充电，然后给凌一尧打电话。电话一通，她便问我昨天在干嘛的，为什么只打了一声就挂了。我说我昨天差点丢了命，连遗书都写好了。凌一尧似乎不太相信我的话，她说：“你到底是去工作还是去打仗的，为什么会有生命危险，如果真的那么危险那就回来啊！”面对这样的责问，我不知道如何应答才好，我已经把自己所有的积蓄都投入这场豪赌，怎么可能因一场意外而举手投降。我在这里扛住雨雪风霜，就是为了让她此生都活得安逸，我只希望她此生都不必感受生活的艰辛，哪怕一辈子都无法理解我此时的狂热。随后她告诉我，她父母托人在我们那个城市给她找了一份新工作，待遇相当不错，催她回去工作。她知道，这样的安排无非是让她离罗 XX 更近一些，更好地掌握两人之间的动向，于是她努力地抗争着，一天一天地拖着。她说：“今天我妈妈说了一句话，我哭了好一会儿。”</p><p>我问：“她骂你了？”她说：“不是。她说‘树欲静而风不止，子欲养而亲不待’，叫我不要等她哪天不在了，才后悔现在没有尽孝。”我愣了好一会儿，突然意识到“疏不间亲”，无论我多爱她，我的地步都很难逾越她的父母。这就是我拼死拼活地卖命，恨不得拿把刀坐在市场中央割肉兜售的结局吗？我强忍左胸口的酸痛，问道：“你想回去了？”凌一尧沉默片刻，而后低声说：“我会尽力扛。”尽力扛，只是尽力扛。呵呵。她能够与我一直走到现在，已经是仁至义尽，我没有权力要求她必须永远与我坚持到底，爱情不是靠绑架得来的。我把烧饭的老头子支了出去，然后向她保证我很快就能出头了，我们可以过得非常幸福，可以让所有人都惭愧他们现在的阻挠. 我感觉自己当时的口才出奇地好，比以往任何时候都好，用亢奋的状态向她描述一个美好的未来，完全不像一个从鬼门关回来的人。但凌一尧只是安静地听着，缄默得让我一度怀疑她是否还在电话那头，我不得不傻逼兮兮地“喂”“喂”“喂”。她只是微微的叹息一声，说：“可是，我已经很累了呀。”那一瞬间，我感觉自己的天空猛然塌陷一块，自以为永远不会动摇的精神支柱摇摇欲坠，电话另一头那个让我魂牵梦萦的女孩突然变得无比陌生。我可以相信日出西方，相信江水倒流，相信六月飞雪，就是不能相信凌一尧也会决心动摇，也会有打算离我而去的一天。我忽然发现自己在雪地里对死亡的胆怯显得那么可笑，吕钦扬啊吕钦扬，你拼命地熬着忍着撑着盼着等着，终于保住这条下贱卑微的狗命，迎接你的现实就是这个模样么？生亦何欢，死亦何苦，早知道这样，为什么不干脆听从命运的安排，在老天为你选择的那块埋骨地了结此生算了？你怎么不死掉算了？你干嘛不死掉算了！！！！你死掉算了好不好！！！！啊哈哈哈哈哈哈！！！！！！！也是在那一天，我和凌一尧之间的裂纹越来越明显，分道扬镳的日子不期将至。在戈壁滩的那段日子，我忙得不可开交，要么在施工现场东奔西跑着，要么趴在电灯泡底下看图纸，要么与工人们混在一起喝酒。偶尔闲暇下来，我傻傻地坐在房间里看着床头那个日历，一遍又一遍地推算工程完工验收的日期。另一个工程队的项目部有一台电视机，外接信号锅的，偶尔我会去那里看一会儿电视，特别喜欢看江苏卫视。不是看非诚勿扰，也不是看电视剧，只是想看一下镜头里的街景。有一天，一个专题节目介绍我家乡的特产，我硬是死死地抓住遥控器，将那帮想看抗日连续剧的家伙晾了十几分钟。最让我万分痛苦的是，凌一尧似乎对我越来越冷淡，以往她接电话时都是兴高采烈的，现在却是问：“什么事？”“你至于这样故意伤我么？”我终于不满地问.“我有吗？”“你态度这样冷淡，是不是不愿意接我电话？”她说：“我们总不可能一辈子都像初恋时那样火热吧，总有一天，你接到我的电话时会不耐烦，握我的手时也毫无感觉。”我呵呵地笑：“可能你说得对吧，但那是第几个十年呢？”凌一尧沉默许久才说：“我妈闹我闹得很凶，一闹就犯气管炎，她都要拿断绝母女关系说事儿了，我能怎么办？我以前一直觉得自己过得很好，家庭和睦，爱情美满，学业也很顺利。可是现在呢，家庭，爱情和工作都乱糟糟的，每天夜里都失眠，早上一睁眼又想着怎样把今天熬过去。我真的很累，太累了。” 我从未见过凌一尧这样暴露自己的脆弱，可我不知道如何安慰，因为我自己的心空得像一个深不见底，连回音都没有的峡谷。我很想将她牢牢抓住，可我又觉得自己像在与她的家人打一场拉锯战，每个人都打着爱她的旗号不肯撒手，却从未有人在乎她夹在其中被撕扯得多痛苦。我说：“既然你这么为难，那就不要勉强了，回去吧。” 凌一尧愣了一下，问道：“这是你说的？” 我深呼吸一口气，努力将泪水咽了回去，说：“我说的。” 电话那头一片沉寂，而后挂断了。此后的很长时间，我们谁都倔强地不肯联系对方，直到有一天南京的房东打电话给我，问我另一把钥匙在哪里，我才知道她已经退掉房子，回家去了。我离开戈壁滩的时候积雪正在消融，我把手里的数据都交给项目部，连同那本撕掉遗书的施工日志，而我带来的垫付资金暂时只能抽走不到一半。一个关系不错的朋友开着破旧的越野车把我送了出去，一路打滑，一路颠簸，一直把我送到火车站。</p><p>从南京到乌鲁木齐，背离朝阳，冲向黄昏，而从乌鲁木齐与之相反。那四十多小时里，我一直稀里糊涂地想着心事，日落时怀疑自己离太阳越来越远是不是一个不详之兆，日出东方时又在期待这是预示我可以拥有走出困境的幸运。我很无助，感觉自己的力量微弱得几乎渺小，只能寄希望于这些毫不相干的启示。我辗转回到那座城市，没有回家，在车站旁边的宾馆住了下来。我洗澡剃须换了干净衣裳，试图逼着自己睡一会儿，好让自己与凌一尧见面时精神状态好一点。可是，我又困又累，却怎么也睡不着，一闭上眼睛就心慌气短，仿佛有人在我耳边敲着锣鼓大声聒噪:“她要离开你了！她要离开你了！”凌一尧知道我回来了，我们约在安定广场见面，面对面站着，她看着我的眼睛，说:“怎么那么多血丝？多久没睡觉了？”我不知道怎么回答，因为我最近一次超过四小时的睡觉就是从戈壁雪地里捡回小命后近乎昏厥的长睡。旁边有很多小孩子穿着旱冰鞋跑来跑去，我们生怕被撞到，于是坐到旁边的长椅上。我告诉她，我每天都很想她，已经把新疆的工程丢下了，不想再离开她了。她皱起眉头，问:“你不是在那里垫资了吗？丢下那里，你以后怎么办？”<br>我有些不高兴:“你希望我回去？”她想了想，低叹道:“我怕你人财两空，不值得。”我顿时不知道怎么说了，不停地揣测她这句话到底什么意思，可我的脑子处于混沌状态，不知道该往哪个方向思考。她随后又说:“前段时间，我和我妈吵了，把她气得犯病，我外婆都打电话过责备我，问我是不是打算闹得家人不相认，以后逢年过节都不想回家团聚，给祖宗磕头。”她抬眼看我的时候，眼泪一下子流出来，委屈地说:“我外公去年去世，今年清明节应该扫墓的，可我躲在南京就是没回来，你难道还不理解我？我小时候是外公外婆带大的，他们都说我忘恩负义，白眼狼。”我一边帮她擦眼泪，一边抚慰道:“我这个工程一结束就有钱了，我去买车，我们去给你外公磕头，挨家挨户拜访你家亲戚，我也可以很孝敬你的长辈。”她推开我的手，自己擦掉眼泪，说:“你忘了吗？我和你已经是地下恋爱了，我和罗 XX 从年初开始就是名义上的交往，我现在已经回不去了啊！我回不去了！”我们回不去了？我迷茫地看着凌一尧那张脸，那张曾经给我温柔也给我力量的面容现在满是悲伤与决绝，这也是十年来我第一次感受到近在咫尺却远在天涯的无奈。我许久才缓过神来，问道:“你要我怎么办？”凌一尧低头沉默一会儿，说:“我很累了，扛不住了，给我自由吧。”我感觉自己像被人狠狠地砸了后脑，眼前一片黑，但还是努力站起来点头说:“好，听你的。”“你会恨我的吧？”她也跟着站起来。我咬住嘴唇尽量让自己不要说话，那么多小孩子在旁边，不要当众丢人，只是张开胳膊把她搂入怀里，狠狠地抱了一下，最后一次嗅了嗅她长发的香味，然后扭头离开那个广场。凌一尧啊凌一尧，我曾经发誓要为之遮蔽风雪，此生疼爱和保护的女孩啊，你才是世界上最强大的人，你拥有轻描淡写一句话就可以将我抽空灵魂放逐天际的神力啊！从今往后，我该往哪里走，该为谁而活，我该怎样面对那么漫长那么漆黑那么毫无意义的人生啊？</p><p>随后的一个礼拜，我过着这辈子最潦倒的日子。我暂时不想回新疆，也不想去找那些熟知凌一尧的好友，但我已经把家里所有的积蓄都砸在项目上了，所以不敢回家见父母。我一直在宾馆里睡着，拉着窗帘，没日没夜地睡，实在饿得受不了，就干啃房间里本来就有的桶装方便面。</p><p>我以为自己呆在这个城市可以做些什么，但事实上我根本无从改变眼前的现实，凌一尧没有再给我发一条短信，打一个电话，我也没有再去联系她。于是，我决定出去走走。</p><p>这几年来，我一直在走，从江苏走到新疆，从荒凉的沿海滩涂走到更荒凉的戈壁滩。但我从未迷失方向，即便走在只知前后左右不知道东南西北的风雪里，我心里也依然竖着一座高高的灯塔，依然有人期待我的归去。可是现在，灯塔的光亮彻底消失，我再也找不到回去的路了。</p><p>我独自回到南京，去找以前那间房子，房东尚未将它租出去，我恳求他让我呆一晚。凌一尧离开时将房子打扫得干干净净，一些被遗弃的生活用品被整整齐齐地摆在角落里，蓝色的毛巾牙刷杯子都是我的，红色的都是她的；床头靠背还贴着当初我从新袜子包装上面撕下来的标签，她总是因此而数落我“幼稚”；台灯罩上有她用唇彩画的卡通脸，咧着嘴，没心没肺地笑着。</p><p>没有被褥，我只能裹着衣服躺在硬床板上，开着电视睡觉。我总是迷迷糊糊地听见她的声音，每次都猛然惊醒，却发现只是电视的声音。我真希望我所经历的只是一个噩梦，真希望我醒来时看见她正在阳台晾晒衣裳，黄昏余晖映出她可爱的身体轮廓，或者她忽然推门进来，手里提着的塑料袋还贴着超市的标签。可是她已经走了，不会再出现了。</p><p>第二天上午，我独自站在镜子前洗漱，将红色和蓝色的牙刷放在一个杯子里，然后带上房门离开。那天我重新踏上前往乌鲁木齐的火车，从此孑然一身，无牵无挂，这个躯体是行尸走肉，这颗心不再属于凌一尧，而这条命我敬老天爷。</p><p>回到戈壁滩，别人问我事情处理得怎样，我嘿嘿地笑着说一切妥当，一副无比幸福的模样。我不是可怜虫，我不需要博取所谓的怜悯，我已经丢了灵魂，但尖牙与利齿还在，我可以参与残酷的争夺。</p><p>我变成工地上脾气最古怪的人，工作时精力充沛，休息时嘻嘻哈哈，但监理都对我敬而远之，因为我一会儿像哈巴狗一样对他们点头哈腰叫爷爷，一会儿像疯狗一样对他们凶相毕露，甚至趁着酒劲追打吹毛求疵的小监理。合伙人经常数落我，却又纵容着我，因为他们不方便与别人翻脸，他们需要我这样的疯狗。</p><p>只是，一闲下来，我就开始发呆。同事开玩笑说，我是“墙角里的一根打狗棒”。</p><p>我们经常会请业主或者质监站之类的人吃饭，我每次都咋咋呼呼，哗众取宠地说着各种庸俗的荤段子，然后拿出同归于尽的架势来喝酒，一杯接一杯地死磕。所有人都夸我海量，年轻有为，前途不可估限，但我知道，酒场和官场都是谎言的集散地。</p><p>我蹲在一望无垠的戈壁滩上吐，然后趴在地上哭，旁边的同事都开心地笑，所有人都知道我酒劲上来就会哭，却没人知道我到底在哭什么。那几个月里，我与她完全没有联系，似乎这辈子都老死不相往来。我在遥远的新疆数着每一次日升月落，期待将她遗忘的那天，可是一旦每次喝得酩酊大醉，每次从噩梦中惊醒，我都会疯狂地想念那个熟悉的名字。</p><p>可是酒醒之后，站至人前，我还得每天强颜欢笑，听别人讲我酒后的失态模样有多么傻逼多么傻逼多么傻逼，然后我和他们一起笑得直抹眼泪。</p><p>那里的生活极其枯燥，业主项目部的司机小廖用 U 盘传给我一些歌曲，我把那些它们一股脑全装进手机里，从凤凰传奇到维塔斯，从摇滚到红歌，我毫不挑选地挨个儿听过去，在空旷的戈壁滩上一边开车一边高声嚎唱。</p><p>唯独有一首歌让我不得不将车子停在路边，捂着胸口，趴在方向盘上缓气———五月天的《你不是真正的快乐》。</p><p>电力企业是一个不差钱的豪门，但不包括 2012 年在建的太阳能发电站，由于欧美对中国光伏产品的反倾销制裁，光伏电站顿时陷入资金泥潭。新疆戈壁滩的气候恶劣，通常四月份才能正常开工，十月底就完全不具备施工条件，我们提前一个月冒着冰雪和低温开工测量放线，终于在十月基本完工。</p><p>此时的业主暴露资金极度短缺的问题，他们的注册资金是会计师操作出来的，而银行又盯着上头的政策，不敢轻易贷款。于是，我们的工程款没了着落，业主方拿资料审核说事，一天一天地拖着不肯验收。</p><p>我带着工人将业主的车子堵在工地不放行，派出所的民警一趟又一趟过来协调，反反复复八趟之后，连派出所都不太愿意来了。最终我们去骗业主里那个稍微老实的负责人，说暂时只要签字验收就行了，今年不会催要拖欠的工程款，他们刚好不堪其扰，不得不把字签了。</p><p>这个社会，老实人都是要吃亏的。签字的第二天，我们的人挤满整个业主项目部的办公室，拍着桌子催要工程款，把那个女文员吓得躲在角落里哭。我拿着一大把小锁，将他们办公室里的抽屉和资料柜都挂了锁，但挂到那个女文员那边的时候，我看见她的抽屉里摆着一只玻璃罐子，里面摆着五颜六色的许愿星，而她的桌角还有许多未完成的折纸。</p><p>我忽然想起来，凌一尧也曾经为我折过这个东西。</p><p>我像一个张牙舞爪的孩子被大人狠狠地扇了一耳光，陡然发现自己失态时的丑陋，我为什么会变成这样？曾经那个善良的温和的喜欢恶作剧从来不忍心伤害别人的吕钦扬哪里去了？这个一脸狰狞拍桌挂锁满口脏话的吕钦扬又是从哪里来的？</p><p>我没有锁那个女文员的抽屉，默默地走出那间拥挤的办公室。</p><p>十一月中旬，大雪封路之前，我提前离开戈壁滩，返回阔别半年的家乡。也是在到家的当天，我踌躇许久后终于鼓起勇气拨通那个熟悉的号码，她听到我的声音一下子愣住了，叫我稍等一会儿，然后跑回房间接听。</p><p>我说：“没想到你这个南京号码还通着。”</p><p>她说：“我每个月只交一点钱维持不停机，可惜一直没人联系这个号，这几天还在想着把这个号停掉算了。”</p><p>我愣了一下：“等我的？”</p><p>她没有说话，不肯定也不否定。</p><p>我说不禁喜出望外，迫不及待地向她展示自己柳暗花明的现状：“我已经回来了，我也赚到钱了，不是穷小子了！你不是喜欢甲壳虫吗？我们去买一辆！还有开一家书店，我们可以去物色店面！我以后除了和你出去旅行，再也不出去逛荡了，我很想你，我每天都很想你……”</p><p>我自言自语似的说了一大堆的话，想狗等待主人筷子上那块骨头一样渴望她点一下头，然后我开着摩托车狂飙过去拥抱她，我的人生从此完美无缺，我每天都要向苍天和大地感恩戴德。</p><p>可惜，凌一尧低声打断道：“我已经订婚了。”</p><p>我一下子愣住了，再也蹦不出一个字，甚至忘记收起脸上因对未来的憧憬而不知不觉地流露出的笑容。订婚了。。。未婚妻。。。妻。。。我难过得忍不住蹲了下来，用拳头抵住胸口狠狠地摁，试图抑制内心如同比万千虫蚁啃噬的痛楚。</p><p>凌一尧啊凌一尧，你真会开玩笑啊，你怎么可能告诉我这样一句话？你还是扎着马尾辫的高中生啊，你不是要跟我一起气死姚千岁吗？你不是说“妻”这个称呼好别扭可是你又很期待成为我的这个字吗？你不是说一想到这个世界终将诞生一个或者两个拥有我们两人血脉的孩子就会觉得神奇又激动吗？</p><p>我不坚强，我不自信，我不要脸，我是一个贱人，我想和一个无赖的孩子一样躺下来蹬腿哭喊，把自己全身弄得满是尘土，你回答我：你！！！！！！为！！！！！什！！！！！么！！！！！！言！！！！！！而！！！！！无！！！！信！！！！！</p><p>这近两个月里，我们依然保持着联系，过得却不是太好。她经常脾气暴躁，无缘无故地对我发火，把我所有的缺点都翻出来说一遍。有些缺点甚至是许多年以前的，我也早就已经克服，不知道是不是在戈壁滩上透支太多精力，我竟然一点都不生气，任由她自说自话地骂着。她连挂电话都没有预兆，没有再见，没有晚安。</p><p>我们仅仅见过一面，在这座小城的电影院里。那场电影的观影厅空荡荡的没几个人，我们没敢坐在一起，她坐在我的左前方，没有回头，而我几乎一直盯着她的侧影。我记得高二时语文老师给她们班代课，叫我帮他去隔壁班架一下投影仪，我一进去就有人起哄，而她低头写作业不敢抬头看我一眼。这一晃，就是十年，那个腼腆的少女即将嫁作他人妇。</p><p>但我们一直没有停止抗争，这两个月里，只是这艘船上载了太多的人，她搬不动船上的巨锚，而我无法阻止港口缓缓升起的闸。那段时间我看很多电影，读很多书，也聆听许多人的建议。有人说，你的痛苦放在人群里简直微不足道，许多人的心里都深埋着那样一段不见天日的回忆，以后她会渐渐地与丈夫相处融洽，而你也会找到另一个女人，你可以不爱她，也可以对她很好，生一个孩子，你们的心思便全在抚养孩子身上了，谁还在乎爱情是什么？</p><p>我相信那个人所说的话，可是我不要那样的人生。我不想一回家就看到一张冷漠的脸，不想在风月场所眯着醉眼牵走一个不知姓名的女孩，只因她依稀有一点尧尧的影子，我更不想哪天躺在床上奄奄一息，身边围了一大群人，但我却感觉万分孤独，只有雪白的天花板上映出那张几乎遗忘的笑脸。</p><p>凌一尧说，这大半年里她再也没有与家人吵过，但也没有再和他们撒娇谈笑过，每天上班下班，吃完饭便礼貌地放下碗筷，安静地返回自己的房间。<br>她曾经问罗 XX:“你觉得你喜欢我吗？”</p><p>罗 XX 说:“挺喜欢的吧。”</p><p>罗 XX 的人品不坏，也很斯文，他生于温室，生活自理能力还停留在少年时代，大小事宜都有自己的主见，最后还是要服从父母的安排。</p><p>就在挑选婚纱的当天，这个帖子开播的前一天，罗 XX 在她家吃饭，她也跟着喝了一点酒，然后笑了。她母亲很高兴，说尧尧今天心情不错，终于见到笑脸了。但她母亲洗碗时，她站在厨房门口说:“妈，我告诉你一件事，我这一年没有一天过得开心，我一想到以后也要这样过，就害怕得想死。”</p><p>她母亲说:“你喝多了吧，月底都快领证了还说这种话？”</p><p>凌一尧回房间给我打电话，笑着告诉我这事，她那天的话特别特别的多，一句话反反复复地说，而我沉默地听。十几分钟以后，她似乎有些自责地叹气，说:“喝多了，平时不会告诉你这些屁事的。”</p><p>然后她又突然无奈地苦笑起来，说:“我妈的反射弧真够长的，现在才开始摔盘子，我出去看看。”</p><p>我说不清这段时间自己到底什么心态，随着月底的临近，我觉得自己的心像烧尽的木炭一样渐渐黯淡。最为迷茫的是，我有时无法确定自己到底希望她婚后过得幸不幸福，许多小说和电影都说过，爱一个人就祝她幸福，可我却无法笃定地祝她幸福？我一度怀疑自己对她的感情是否足够真挚，罪责感充斥内心。</p><p>1 月 23 日那天，凌一尧和她母亲上街购物，恰巧发现一家饰品店的老板是她小学和初中的同学，冒 XX。高考之后的暑假，我和冒 XX 第一次认识，她帮我和凌一尧瞒这段感情瞒了好几年，直到两年前才渐渐失去联系。凌一尧的母亲说：“我们家尧尧初五结婚，伴娘还没定人呢，你要不要一起来玩？”</p><p>冒 XX 问凌一尧：“你和他到现在才结婚？”</p><p>凌一尧说：“不是他。”</p><p>冒 XX 用意外又惊诧的目光看着她，然后当场婉拒，说年初店里忙，走不开。凌一尧当晚打电话给我，呵呵地苦笑，说：“一共邀请了几个高中同学，一个个都说没空，蒋 XX 直接说不想来，她说以后你结婚时请她，她更不想去。”</p><p>蒋 XX 也是凌一尧初中的同学，也是我高中时的同班同学，也就是开头提到的那个学霸妹子，我抄她的作业，骗她的零食，偷翻她的日记，我一直以为她讨厌我。</p><p>凌一尧说：“我跟我妈说，我和你本来可以得到很多人的祝福，现在他们的祝福都快变成诅咒了，连一个捧场的好朋友都没有。我妈这次被我说哭了，但是没再骂我，上次她摔过盘子之后，心情就一直不太好。”</p><p>子石放假从外地回来，我约他出来吃饭，刚好舒缓内心的抑郁，随口问万一抢婚的话他去不去。子石摇头说：“如果他们真的走到那一步了，你就没必要再折腾了，一个乌烟瘴气的婚礼足够让很多人一辈子抬不起头了。不过，不是还有一个星期才领证吗？你再去努力一下，实在改变不了，那就认命吧，这个世界上有太多不如意却还是维系下去的婚姻了。”</p><p>枕边人不是心上人，心上人只是梦中人。我想到凌一尧从今往后便是别人家的贤妻良母，而我也不得不与另一个女人同床异梦地度过下半辈子，两个人此生都不敢将对方的名字念出来，不禁感到一阵胸闷气短。我可以每天逢场作戏地欢笑，当然也可以假装深情地说“我爱你”，这些都不过是作为一个演员的基本素养，但我无法忍受凌一尧躺在另一栋房子的另一张床上的另一个臂弯里，心里默念着我的名字。</p><p>除非凌一尧亲口对我说，她已经放下了。</p><p>我打电话约凌一尧出来，在这座城市一座古园林见面，和上次在电影院里一样，我们刻意保持着距离。一直走到一座高高的小土山，山坡上生长着一片竹林，坡顶有一座小凉亭，她回头看我一眼，我才紧走几步跟了上去。她说：“我讨厌这种偷偷摸摸的滋味，像在做什么不要脸的事情似的。再过几天，所有事情都已经定了，无论你怎么约我，我都不会再出来了。”</p><p>我说：“我也很憋屈，很窝火，我们本来应该光明正大地牵手逛街的，而不是现在这个样子。”</p><p>“你憋屈？呵呵，”凌一尧笑了一声，“以前有一次我和罗 XX 上街买东西，他也牵过我的手，可我觉得更像做贼一样恐慌，害怕你不知道什么时候在什么地方就突然冒出来。”</p><p>听她这样说，我鼓起勇气，恳求道：“既然这样，我们都不要放弃好吗？时间还有，感情还在，我们豁出去拼一下，把这件事情缓下来。我可以去找你爸妈谈，只要是反对我们的人，有一个算一个，我都可以去找他们谈。”</p><p>但她一直不说话，我有些心慌了，问道：“那你现在还想不想和我一起？”</p><p>凌一尧这才抬头看着我的眼睛，说：“想。”</p><p>“那你在犹豫什么？”</p><p>“怕。”</p><p>“怕什么？”</p><p>凌一尧想了一下，说：“怕很多事情，最怕的就是你现在只是不甘心，没有以前那么喜欢我了，如果是这样，我宁愿现在就散了。”</p><p>我没想到她心里竟有这样的疑虑，完全出乎我的意料，一时不知道怎么回答，片刻之后才为自己辩护道：“我们从高中就开始相处，现在已经十年了，你应该最懂我。我很少向你许诺或者发誓，但保证过的就一定会去兑现，我现在非常确定地告诉你，我对你的感情绝不是不甘心。”</p><p>凌一尧点了点头，又问：“那我爸妈和罗 XX 家怎么办？以前我以为你不回来了，又被我妈闹得难受，觉得你不在了，跟谁过都是一样过，就把这事给应了。现在我说不想结婚了，我爸妈肯定不会同意，罗 XX 家也会来闹。”</p><p>我说：“你不要担心，这事我来扛。”</p><p>凌一尧盯着我的眼睛，而后咬着嘴唇认真地点头，一开始见面时的焦躁不安消散得无影无踪，但我的内心却满是愧疚———我们都同样并非完美，性格有各自的弱点，过分的单纯与善良让她举步维艰，而我竟偏执地踏上自以为的英雄之路，留她独自在炎凉世态里苦撑。</p><p>我原本打算先去拜会凌一尧的家人，但思索再三，还是更改主意，打电话约罗 XX 出来谈一谈。约谈地点还是一家音乐茶座，他们二人一同出现的，落座时凌一尧习惯性地坐到我身边。</p><p>我对凌一尧说：“我们两人谈点事情，你先坐到他车里玩一会儿。”</p><p>罗 XX 掏出遥控钥匙递给凌一尧，但凌一尧接过去隔着落地窗摁了一下，又放回桌面上，拎着包出去了。我们一直目送她坐上车，才收回目光打量对方，一时间不知道怎么开口，最后我尴尬地笑道：“有点像给她开家长会，哈？”</p><p>罗 XX 也讪笑一声，但气氛稍微缓和一点。</p><p>我问道：“你和凌一尧相处这么久，觉得开心吗？”</p><p>他说：“还可以吧。”</p><p>“你确定你爱她？”</p><p>罗 XX 犹豫片刻，抹着鼻尖说：“反正蛮喜欢的。”</p><p>我却不客气地说：“你应该也看得出来，这大半年里凌一尧从未开心过，我和她一起走了十年，不得已的分手就像被迫离婚一样痛苦。她心里想着我，但不代表我和你之间谁比谁更优秀，而是我运气好一些，十年前就认识她了。现在我很诚恳地希望得到你的帮助，把领证结婚这事停了吧，你们俩勉强凑合在一起不会过得好。”</p><p>罗 XX 有些不服气：“那你前面这几个月干嘛去了？”</p><p>“我以前做得不对，所以现在来纠正错误。本来这事有很多解决途径，只要尧尧一口咬定不领证不结婚，我带她直接离开这个城市，难道你们还能捆绑着逼婚？之所以与你沟通商量，是希望咱们年轻人私底下把这事解决了，尽量把负面影响降到最小，不要伤害长辈，你看怎么样？”</p><p>罗 XX 保持缄默，手指一直拨弄那把车钥匙。</p><p>我给他添了茶水，说：“你们相处几个月，时间不算短了，但你对她了解多少呢？你每次向别人介绍她，第二句就是她的硕士学位；夏天你老是怂恿她穿得性感一些，可她不是你用来向哥们儿炫耀的宠物啊；还有，你总是不停地草泥马草泥马，并且认为这是时尚用语，不是脏话。这些事情都让她非常反感，可是她为什么不说出来呢？”</p><p>罗 XX 不是笨蛋，他明白我的言外之意，我也适时地停止这种攻击性的责问，将话题岔开，与他谈及我与凌一尧在高中时的趣事。罗 XX 一开始有些抵触，但听着听着，也跟着笑了起来，在他笑容最灿烂的时候，我再次严肃地向他请求道：“兄弟啊，以你的条件，再找一个漂亮女朋友不是难事，但我只有一个凌一尧，错过了她，我这辈子都会过得不安生。所以，希望你能帮我一把，恳请你帮我一把。”</p><p>罗 XX 渐渐收起笑脸，思索片刻后说：“如果我不帮忙呢？”</p><p>我说：“我刚才已经讲过了，凌一尧我是肯定要带走的。你帮忙，这事会变得好看一点，你不帮忙，这事只是稍微难看一些而已。”</p><p>罗 XX 坐在那里想了一会儿，最后叹息一声，说：“我明白了。这事我得想一想，明天再打电话给你，给你答复。”</p><p>他起身离开，刚离开座位，凌一尧就从那辆车里下来，往茶座里走来。她和罗 XX 在门口遇到，两人互相打了一声招呼，然后一个出门登车而去，一个在我对面身边坐了下来。凌一尧问：“谈得怎么样？”</p><p>我说：“我也不确定，不过既然已经把话说开了，那你以后就要做好和一条道走到黑的心理准备。”</p><p>凌一尧点了点头，而后又眯眼微笑道：“这条道不会是黑的。”</p><p>整整一天，我一直心神不宁地等着电话，甚至想过万一凌一尧被她父母软禁在家，我就喊一帮哥们儿去抢人，或者打电话报警说有人抢我的老婆。只要凌一尧点一下头，承认她想跟我走，我便再无任何顾忌，大不了从此远走高飞。</p><p>大约凌晨两点，罗 XX 没有打电话过来，却接到凌一尧的电话，她说：“罗 XX 叫我转告你，他已经向他家人说过了，他和我性格不合，两个人相处得不愉快，想取消婚约。我爸妈的态度也不太激烈，我说我也不想和罗 XX 结婚了，他们就只是叹气，没多说什么。”</p><p>“那我什么时候去你家拜会？”我问道。</p><p>“你不要急嘛，再等两天，等大家都把这事认下了，你再过来找我爸妈谈。”凌一尧停顿片刻，说，“我都把东西收拾好了，要是他们还那么固执，我就直接跟你走。”</p><p>我努力抑制内心的喜悦，问道：“你现在什么感觉？”</p><p>凌一尧拖着长音的“嗯”，最后长吸一口气，释然地说：“感觉像又活过来了。”</p><p>挂断电话之后，我张开四肢躺在床上，听着床头闹钟滴滴答答的声音，每一次声响都昭示我正在一秒一秒地远离自己的青春。可是，缱绻于心的爱情如同一个野蛮的天神，呼啸着从天而降，抓着我的衣领飞向九天云霄之外。我闭着眼睛感受这种踏步云端的喜悦，仿佛一瞬间时光倒流，我又回到许多年前的那个漫天火烧云的黄昏，满脸稚气的孩子敲着饭盒喊我的名字，年轻的老师们笑而不语，而凌一尧一脸绯红地躲在满是起哄声的教室里，就像一个即将嫁给我的小新娘。</p><p>而我内心曾经的自卑，以及对金钱的狂热，就像那只名叫“理查德帕克”的白老虎，甩一甩尾巴，轻轻一跃，消失于新疆戈壁滩的绿洲之中。</p><p>理查德. 帕克，呵呵。</p><p>如果这个故事让诸位不满意，非要追根究底地质疑这样一个故事是否可信，那我重新讲一个靠谱一点的故事吧。</p><p>我从新疆回来的第三天，去安定广场闲逛，偶然发现花圃台阶旁边有一个漂亮的新娘正在拍婚纱照。她很漂亮，表情又有些木讷，像一个牵线木偶一样被摄影师指挥着，与新郎摆出各种造型。</p><p>我喊了她的名字：“凌一尧。”</p><p>她看见我时愣了一下，而后丢下那个打扮得油头粉面的新郎，提着婚纱的裙摆，快步走了过来。穿着这身单薄的婚纱，她冻得瑟瑟发抖，又有些羞赧，问道：“你哥呢？”</p><p>我说：“他在新疆没回来。”</p><p>“你还去吗？”</p><p>我点头说“还去，要去收账。”</p><p>凌一尧噢了一声，“你等我一下”，她去台阶旁边拿起自己的加长羽绒服披上，又拎来自己的包，将一张银行卡递给我，说：“这是你哥身份证办的卡，以前一起时的定期存款，你帮我带给他，他知道密码。”</p><p>“嗯。”我将银行卡接了过去，揣进口袋。</p><p>“一定要带给他。”她又强调一遍。</p><p>我用拳头按了按胸口，说：“一定。”</p><p>然后我转身离开，冷风横贯整个广场，我深呼吸试图抑制内心的痛楚，却被着实呛了一下，眼泪差点滚落下来。我的思绪一下子回到三月的戈壁滩，风雪肆虐，寒气逼人，我的步话机里断断续续地传出吕钦扬的呼喊：“你们点几个火堆，把火烧旺，给我指一下方向，我找不到回去的路了。”</p><p>我们用皮卡车拖了许多木方，以及报废的橡胶轮胎，火焰和浓烟直冲云霄，整整烧了一夜，但吕钦扬还是毫无音讯。最后一次与他通话时，他似乎有些精神恍惚，绝望地念叨着：“凌一尧，我迷路了啊……”</p><p>第二天下午，我们在十公里外的一座土丘背后找到他早已冻僵的尸体，他不停地跋涉着，可惜离营地越来越远。而他大衣里那本施工日记的中页，用凝油的圆珠笔笔尖在纸上深深地刻下他此生最潦草最歪斜的几个字：“别告诉凌一尧”。</p><p>吕钦扬，我最尊敬的学长。当初在黄海的滔天潮水中，你用挖掘机的斗子死死抵住我这台机器的侧面，以防我脚下的堤坝塌陷；你坚持不起诉那些地痞，保下我这个冲动不懂事的学弟；你将我拦了下来，扛着仪器走入茫茫雪地之中；你不停地朝着凌一尧的方向奔跑，那么坚定执着，为什么最后还是迷失方向？</p><p>愿你永远活在十年前的文津河畔，愿你灵魂安息。</p><p>今天是公元 2013 年 2 月 14 日，情人节，也是农历癸巳年正月初五，凌一尧的婚期。原本打算讲完故事就销声匿迹，让它慢慢冷却，逐渐被遗忘，但事到如今还是决定给它一个最终番，省得那么多人猜来猜去，越猜越离奇。</p><p>也在这里对某些人说一声，不要以你的生活环境作为公理定理原理来判断这个世界，譬如学龄。我是如皋小城的一个乡下孩子，入小学时不满六岁，因为运河上面没有桥梁只有渡船，在淹死几个孩子之后，学校在河东开了一所小分校，我所在的那一届，全年级不过七个人而已。后来，有一个家伙留级了，我那个年级一共只剩六个人———如果你们觉得这个事情很荒唐，那么你们以后对人对事作判断时请悠着点。</p><p>2000 年我未满十五岁，以全校第 12 名的成绩进入白蒲高中，但由于整天把心思放在踢足球上，学业受到影响，考过全班第一，也考过二三十名。也是在那里，我开始人生的初恋并且不幸被抓，饱受政教处的折腾，也得到班主任老姚的格外关照。冬天起床后为了暖一下身体，出门时我们灌了一口红酒，最后被老姚拦在门口，每人做了 20 个俯卧撑，他终于将我锁定。他后来对同寝室的阿荣说：“XXX 同学今早喝酒了，可能是因为感情受挫，你们一定要对他关心爱护。”</p><p>在此感谢千岁大人。</p><p>正如故事里所说，高考时我数学失利，只考到本二，而凌一尧正常发挥，考取名牌一本，但我至少可以与凌一尧光明正大地恋爱了。这场恋爱不伟大也不光荣，和所有的校园情侣一样，懵懵懂懂，浑浑噩噩，为了莫名其妙的小事吵架，也为了装逼矫情的小事开心。但我大学毕业之后，一切都变得陡然沉重，因为我拿着两三千的月薪，无法挣脱穷困的枷锁。</p><p>情侣之间最无法弥合的矛盾，就是为了钱而吵架。</p><p>我业余时间开始写小说，希望成为所谓的修仙小说写手，写一个少年得到神仙指点不断修炼不断进步最后成为神魔人三界主宰，这种故事非常无趣但它就是有市场，兴许可以为我赚得娶老婆的本钱。但最后，我毫无建树，因为我对此根本一点都不感兴趣，我后来出版的小说也是一个反响平平的都市爱情故事。</p><p>再后来，我去给出版社做枪手，为他人做嫁衣。写自己的故事，署他人的名，拿一笔如同售卖亲子得来的钱。这样的工作可以为我提供七八万的年薪，但我只是别人的影子，没有一点社会地位，当凌一尧的父亲问我从事什么工作，我说是出版社，可是我心里明白，出版社的员工花名册里压根儿没有我的名字。</p><p>我只是别人花钱雇来的影子武士。</p><p>在那段时间，凌一尧的父母对我说了“NO”，我与凌一尧之间也不停地发生争执，我一度出现精神抑郁的状况，整夜整夜地失眠。也是在那段时间，我与一个早年认识的北京女孩聊得较多，当初认识时她才十八九岁，素颜时很像大学时期的凌一尧。</p><p>我走进一个死胡同，我将这个北京女孩当作凌一尧，试图用一个从未谋面的人来排挤凌一尧，那段颠三倒四的日子就是这样混过去的。后来，我也不知道自己到底是在暗恋北京女孩，还是在思念凌一尧。</p><p>再后来，北京女孩长大了，她与同学创建“powerful”的品牌，而我依旧是默默无闻的吕钦扬，互相删了微博和豆瓣。</p><p>后来我遇到一个既称得上哥又称得上叔的长辈，他问我怕不怕苦，问我要不要一起去干工程，加入这个既辛苦又容易暴发的行业。当时我想钱已经想疯了，我看见运钞车都会不自觉地想一下各种可能性，我每天都渴望赚到钱但我不知道如何赚，每天都被这种矛盾折磨得无法入睡。</p><p>凌一尧试图阻止我，但我还是跟他一起走了，先去海边干围海，没有赚到现钱，政府工程的付款方式非常扯淡。再后来，我们又去新疆做光伏电站，在那里，一起趟过黄海和戈壁的技术员把命丢在那里。他比我小一岁，出来卖命的原因也是为了某个她。</p><p>因为出现伤亡事故会导致工程停滞，业主最后托关系出具自然死亡证明，80 万元私了，尸体在当地停了几天后才火化。为了把他带回江苏，我们三人轮流开车，手机按了免提摆在骨灰盒上，里面传出来自家乡老人的呼唤：“天冷霜重，快点归乡哦！”</p><p>当我回到家乡，凌一尧与别人的婚事已经是板上钉钉的事情，用她的话讲，“和他结婚或者和你结婚，现在对我而言，似乎都无所谓了”。我们打电话都要偷偷摸摸的，我们对此都非常厌烦，年底婚期将至的那段时间，凌一尧在派发请柬时难免遇到我们当时的一些老朋友，她的情绪出现波动，开始犹豫不决，甚至想过悔婚。</p><p>可是即便他不是她想要的，那现在的我就是她想要的么？</p><p>我也曾经欢欣鼓舞地认为自己的爱情可以失而复返，但最终闹腾一段时间，我们都发现，那不过是再普通不够的婚前焦虑而已。我们很久以前就各自走上背离对方的道路，只是我独自活在自己的世界里，以为两条道路在前面仍会交汇。</p><p>那个技术员经常喝酒以后和我聊他那让我一听就想打瞌睡的爱情，一提到他的女朋友以后可能和别人结婚，他就忍不住抹眼泪，说：“要是她以后和别人结婚，我一定要躺到她家门口，从我身上跨过去才让她出门。”</p><p>1 月 27 日，我做了人生里最操蛋的事情，我去了他女朋友举办婚礼的那家酒店，将一块旧红布压在迎宾门毯底下。现在你就躺在这里了，可是你阻止得了么？</p><p>至于红布是什么，我家乡的人兴许会明白。</p><p>讲完这个故事之后，我比你们任何人都无法自拔，老是梦见白蒲高中那条河，梦见她穿着蓝白相间的校服走下桥头，梦见她站在阳台上忧虑地望着远方。但那又能如何，我现在一想起她，只记得她从十五岁到二十四岁的模样，却想不起来她如今着了粉黛之后的相貌。</p><p>我的脾气也越来越坏，时而莫名其妙地摔东西，时而一个人在家唱歌，我有时都想着自己是不是有点精神分裂，怀疑自己会不会哪天睁眼醒来发现自己的一些经历只是一场梦。</p><p>昨天是家乡风俗里迎财神的日子，而今天是送财神的日子，漫天的璀璨烟火，其中便有为祝福她的未来而怒放。凌晨五点，我踏上前往上海的车子，今天在上海呆一宿，明天飞往北京，拜见几位资历厚重的前辈。</p><p>正月初五，情人节，故人着新衣，嫁作他人妇。</p><p>这只金箍，先戴为敬。</p><p>故事引用了少年派的结局，作者疑似为写手，不过这都已经不重要了，相信在 13 年那个还没那么多“故事写手”的情况下，作者带着自己的感情与爱情写下了这篇帖子，帖子的最后，楼主给了这个故事三个结局，除了直播帖一开始的结局之外，还有“凌一尧解除婚约，回到吕钦扬身边”和“吕钦扬丧命沙漠，遗书要求向凌一尧隐瞒死讯”两个结局。网友猜测，帖子开头的结局是真实的，大团圆结局是楼主的美好愿望，而那个残忍的结局，则是楼主希望“自己当时死了算了”的感叹。</p><p><strong>三个结局</strong><br>　　 1，男主回来，找到男二谈话，找回了爱情，男二自己放弃（这是作者和读者最想看到的结局）<br>　　 2，男主死在了新疆，男主学弟复述了这个故事，赚了很多读者的眼泪。（其实是以那个真的死去的技术员为背景写的这个结局，同时寓意自己的心已经死在新疆）<br>　　 3，男主否认了上面两种结局，这个世界上没有那么多美好的结局，也没有付出努力就得到的大笔金钱（工程真的做了，但没有赚到钱），更没有那么多让爱情变得凄美的死亡。男主在这个残酷的世界里，找不回曾经的爱情，而存在于他们心底的爱情，也没有年少时的勇气和激情能够让他们推翻抛弃一切在一起。<br>　　也许，最痛苦的，不是发现自己无力改变这个现实，而是发现，已经不那么爱了。</p><p>他们足够相爱，足够有担当，足够谦让，足够包容，拥有一切爱情所需要的，可最终还是败在了现实面前，也许生活就是这样</p><p>看完以后</p><p>所有的话语化成一句我爱你</p><p>我会用尽全力 🍖。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    <category term="转载" scheme="https://www.smitten.top/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="生活" scheme="https://www.smitten.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>五分钟搭建一个随机图片API</title>
    <link href="https://www.smitten.top/posts/imgapi.html"/>
    <id>https://www.smitten.top/posts/imgapi.html</id>
    <published>2023-02-14T21:52:14.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>PHP 的随机图片 API 搭建方法有两种</p><ol><li>本地随机图片</li><li>外链随机图片</li></ol><p>接下来简单说一下如何编写</p><h2 id="文字教程"><a href="#文字教程" class="headerlink" title="文字教程"></a>文字教程</h2><h3 id="本地随机图片"><a href="#本地随机图片" class="headerlink" title="本地随机图片"></a>本地随机图片</h3><p>首先创建一个文件夹 photos 和一个名为 index.php 的文件然后在 photos 的文件夹内放图片，在 index.php 内编写如下代码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$img_array</span> <span class="token operator">=</span> <span class="token function">glob</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"photos/*.&#123;gif,jpg,png&#125;"</span><span class="token punctuation">,</span><span class="token constant">GLOB_BRACE</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$img</span> <span class="token operator">=</span> <span class="token function">array_rand</span><span class="token punctuation">(</span><span class="token variable">$img_array</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$dz</span> <span class="token operator">=</span> <span class="token variable">$img_array</span><span class="token punctuation">[</span><span class="token variable">$img</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location:"</span><span class="token punctuation">.</span><span class="token variable">$dz</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> </code></pre><p>保存即可，通过 api 随机调用 img 文件夹中的图片, 最后访问地址: <a href="http://域名">http://域名</a> 即可</p><h3 id="外链随机图片"><a href="#外链随机图片" class="headerlink" title="外链随机图片"></a>外链随机图片</h3><p>先创建 photos.txt 和 index.php 文件然后在 photos.txt 文档内放图片外链地址 (一行一个) ，在 index.php 加入下列代码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$arr</span><span class="token operator">=</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'photos.txt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$n</span><span class="token operator">=</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$x</span><span class="token operator">=</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token variable">$n</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location:"</span><span class="token punctuation">.</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token variable">$x</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span> </code></pre><p>最后访问地址: <a href="http://域名">http://域名</a> 即可！ 这里 photos.txt 中可以填写比如新浪那些外链图片，或者自己图床里的图片，高速稳定，而且不耗内存。</p><h2 id="接口测试"><a href="#接口测试" class="headerlink" title="接口测试"></a>接口测试</h2><p>我用了第二种获取自己图床外链图片的方式做了<br><a href="https://img.yct.ee">https://img.yct.ee</a></p><h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h2><p>如果你不想搭建可直接调用我的</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://img.yct.ee<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="API" scheme="https://www.smitten.top/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>转载一篇知乎上的文章：抖音是如何毁掉我们的？</title>
    <link href="https://www.smitten.top/posts/dy.html"/>
    <id>https://www.smitten.top/posts/dy.html</id>
    <published>2023-02-14T01:18:14.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>写在前面：</p><p>这篇文中，抖音只是一个具象化代表，</p><p>我想讲的是以抖音为代表的一众以算法为内核的娱乐化 APP。</p><p>每个时代都会有一些淘汰机制，而现在的时代，会根据自制力和信息筛选能力对人进行淘汰。</p><p>但总有一些人是不愿惊醒的，等他们发现自己一事无成时，会选择抱怨别人、抱怨社会、然后把希望寄托给下一代，在这群人眼里错的不是他们，而是社会。希望这个人不会是你。</p><h2 id="01"><a href="#01" class="headerlink" title="01 -"></a>01 -</h2><p>层次越低的人，</p><p>越喜欢花时间在娱乐上</p><p>前几天抖音出了一个 “爆视频”，单单评论数就超过一百万，播放数量过千万。</p><p>这几乎是我们这些文字工作者难以企及的数量。而数量背后，潜藏着一个个为此付出时间与精力的人。</p><p>除此之外，相信你在朋友圈也看到过不少这样的话：“中了抖音的毒”、“刷抖音根本停不下来啊啊啊，一看表竟然刷了三个多小时…”</p><p>这一点相信刷过抖音、亦或者是刷过快手、火山小视频等等各种小视频软件的人都会深有感受。</p><p>如果你在路边、休息处看到一个人手指连动笑的合不拢嘴，那大概就是在刷小视频了。</p><p>我们会不自觉的深陷其中，蓦然之间发现时间已经过去了几个小时。</p><p>尼尔・波兹曼在《娱乐至死》里这样写过这样的一段话：</p><p>“一切公众话语日渐以娱乐的方式出现，并成为一种文化精神。我们的政治、宗教、新闻、体育、教育和商业都心甘情愿地成为娱乐的附庸，毫无怨言，甚至无声无息，其结果是我们成了一个娱乐至死的物种。”</p><p>层次越低的人，越喜欢花时间在娱乐上。</p><p>越来越多的人患上了网络依存症，对各类娱乐新闻上瘾、产生依赖，人云亦云，附和跟风，沉溺在虚拟的世界中不能自拔。我害怕长久以往，自己会变成一个透明的躯壳，脑袋空空、沉浸于感官娱乐。</p><p>有人说，你的时间花在哪，你就会成为什么样的人。格局高的人，不会花太多时间在娱乐上。</p><p>我们正在爱上这些使我们丧失思考能力的工业技术。抖音、快手、抖音、微博这些软件正在飞速地强化我们对新奇事物的需求度，并拉高我们的敏感度。同时降低的就是对文字的需求度与耐心度。</p><p>刷多了抖音、快手、微博这些软件之后，我们就会形成一种惯性：没有耐心去读一本长文或者书籍。更没有时间去思考，因为我们总是在期待着下一个引爆眼球的新奇事物，等待着它在视频中直接了当的呈现。</p><p>比如你就有可能看不完我的这篇长文。</p><p>而在被轰炸多了之后，我们就会逐渐爱上这种 “被喂食” 的感觉。而当 “被喂食” 形成一种习惯之后，我们的就会惰于思考，耐心以及深挖问题的能力就会被逐渐抹杀。<br>盛大网络董事会主席 陈天桥</p><h2 id="02"><a href="#02" class="headerlink" title="02 -"></a>02 -</h2><p>你每时每刻傻呵呵的沉浸其中</p><p>换来的都是经营者的盆满钵满</p><p>这是一家十分 “传奇” 的公司，2001 年年底，盛大账面上只剩下大约 30 万美金，陈天桥倾囊而出，买下韩国一款二线游戏《传奇》的中国代理权。</p><p>2002 年，《传奇》同时在线人数突破 60 万，成为当时世界上最大规模的网络游戏，盛大月均销售额超过千万，市场占有率超过六成。</p><p>但是陈天桥在接受记者采访时却不止一次说过：“我从来不玩《传奇》，因为这是个烂游戏，浪费我的时间，但是盛大是个好公司”</p><p>但是不可否认的是，这个备受追捧的烂游戏确实吸来了千万销售额。</p><p>看到了么？你每时每刻傻呵呵的沉浸其中，换来的都是经营者的盆满钵满。</p><p>“不知道为什么，刷抖音的时候感觉那么开心，可是刷完之后却分外空虚，变得很丧，而且更自卑了” 一个粉丝在凌晨一点多私信我。</p><p>他说他刚在床上刷完抖音，然后就失眠了。</p><p>在孤寂无人的夜晚，我们最容易感受到自己的无助与空虚。</p><p>我回复说：“因为你爱上了一个虚拟且充满新奇的世界，但是你依旧碌碌无为，你的生活仍然平平无奇。”</p><p>我称抖音、火山小视频、今日头条、快手等等以算法推荐为内核的软件为：毒品软件。</p><p>一款类似抖音的 APP，背后都是一个强大的运营团队，有着专业的消费者行为学作支撑，用尽最前沿的科技，最详尽的数据，通过声、光、交互、反馈等全方位途径，在各种心理学、行为经济学、认知神经科学等理论指导下，精心打造 — 目的是什么？为了创造一个虚拟空间，来消磨你的时间。</p><p>它带来的满足感太容易获得，而一旦你习惯了这种 “唾手可得” 的满足感，就不愿再去做那些 “高投入” 的事情了。比如在高度自律的状态下完成作业、思考问题。</p><p>在这个被娱乐塞满的世界里，当没有足够强大的自控力时，我们就会因为沉迷各种诱惑而 “被碌碌无为”。</p><h2 id="03"><a href="#03" class="headerlink" title="03 -"></a>03 -</h2><p>盖茨家把 13 岁定为得到手机的年限</p><p>乔布斯不允许自己的孩子们用 iPad</p><p>比尔盖茨曾在采访中说过，他认为 13 岁是孩子拥有第一部手机的合适年龄。</p><p>他、珍妮弗、以及 1999 年出生的儿子罗里・盖茨都是在过了 13 岁生日后才被允许使用手机，小女儿菲比则在期待着 13 岁生日时得到自己的第一部手机。</p><p>“我们家把 13 岁定为得到手机的年限。” 盖茨说，鉴于这项规定，孩子们从学校回家后常向他抱怨说，“其他孩子都有手机，我是唯一一个没有手机的人，这令人尴尬”。</p><p>你知道吗？乔布斯是不允许自己的孩子们用 iPad 的。</p><p>乔布斯生前有三个年幼的孩子。有一天纽约时报的记者 Nick Bilto 问他：</p><p>“你的孩子们一定很喜欢 iPad 吧？”</p><p>老乔回答：</p><p>“他们没有用过。我们限制孩子们在家里使用智能产品。”</p><p>听起来是不是怪怪的？iPad 之父居然不允许自己的孩子用 iPad? 感觉就像是毒贩不允许自己的孩子吸毒一样…</p><p>无独有偶。在硅谷，很多高科技公司的高层和工程师里面，开始流行不让自己的孩子接触智能科技产品。</p><p>他们甚至把孩子们送到传统的，完全没有智能和科技产品的 Waldorf 学校，在这个学校的校园里根本就找不到电脑！</p><h2 id="04"><a href="#04" class="headerlink" title="04 -"></a>04 -</h2><p>能够掌控时间的人，</p><p>才能掌控自己的一生。</p><p>我们看到的是电子产品正在飞速低龄化，抖音快手已经迅速占据了小学生的生活。</p><p>而因为缺乏自制力，他们会沉浸其中无法自拔，在最应当拼搏的年纪里选择安逸，在价值观形成之际被灌输进大量的光怪陆离与不正之风。</p><p>于是他们开始模仿，追逐着未成年怀孕风当宝妈、跟着小青年跳社会摇、以为低胸博眼球就能赚大钱… 当管制不利时，堕落便自此开始。</p><p>那些我们所热爱的东西，正在一步步把我们连根拔起。</p><p>在作家周冲的文章中看到过这样一段话：</p><p>当你的时间不再用于深度学习，当你的注意力被他人瓜分，当你只看综艺与电视剧，当你在群体中呆的时间越来越长，当你执行力越来越差，当你评价他人的次数越来越多，当你抱怨越来越频繁，当你回想往事的频率越来越高… 毁灭就已经发生了。</p><p>如何分配你的时间，取决于你。</p><p>未来，在时间这个战场上，有两门生意会特别值钱。</p><p>第一，就是帮别人省时间。第二，就是帮别人把省下来的时间浪费在那些美好的事物上。</p><p>能够掌控时间的人，才能掌控自己的一生。</p><p>这座城市，一半人在拼命，一半人在认命；一半人在抢时间，一半人在耗时间；一半人在燃烧青春，一半人在虚度青春。</p><p>你愿意做哪一半的人？</p><h2 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h2><p>未来对人类自制力的考验将会越来越严峻。</p><h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><ul><li><a href="https://learnku.com/articles/71955">转载一篇知乎上的文章：抖音是如何毁掉我们的？（深度好文） - Musk・C・Ace - learnku</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    <category term="转载" scheme="https://www.smitten.top/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="抖音" scheme="https://www.smitten.top/tags/%E6%8A%96%E9%9F%B3/"/>
    
  </entry>
  
  <entry>
    <title>TeamSpeak服务器搭建——基于Docker-Compose</title>
    <link href="https://www.smitten.top/posts/TeamSpeak.html"/>
    <id>https://www.smitten.top/posts/TeamSpeak.html</id>
    <published>2023-02-13T16:31:29.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="服务器选择"><a href="#服务器选择" class="headerlink" title="服务器选择"></a>服务器选择</h2><ul><li><code>腾讯云</code> / <code>阿里云</code> 等轻量云服务器</li><li>优先选择<strong>学生优惠</strong>和<strong>香港服务器</strong></li><li>系统镜像优先选择 <code>CentOS+Docker</code> 已经配置好的镜像</li></ul><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>确认服务器已经安装 Docker 和 Docker-Compose</p><pre class="language-shell" data-language="shell"><code class="language-shell">docker -vdocker-compose -v</code></pre><p>如能正常显示版本号，下面这一步<strong>直接跳过</strong>，否则要手动安装，这里以 <code>CentOS 7</code> 为例安装：</p><blockquote><p>搜索 <code>系统名 安装 docker compose</code> 有很多现成文档</p></blockquote><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 安装yum-utils</span>yum <span class="token function">install</span> -y yum-utils<span class="token comment"># 配置yum源</span>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo<span class="token comment"># 安装docker-ce</span>yum <span class="token function">install</span> -y docker-ce<span class="token comment"># 设置开机启动服务</span>systemctl <span class="token builtin class-name">enable</span> docker<span class="token comment"># 启动服务</span>systemctl start docker<span class="token comment"># 安装epel源</span>yum <span class="token function">install</span> -y epel-release<span class="token comment"># 安装docker-compose，如果没有python3会安装python3</span>yum <span class="token function">install</span> -y docker-compose</code></pre><h2 id="配置-TeamSpeak"><a href="#配置-TeamSpeak" class="headerlink" title="配置 TeamSpeak"></a>配置 TeamSpeak</h2><p>找到合适的目录新建目录 <code>ts</code> 并切换</p><blockquote><p>个人习惯所有 docker 配置统一放在根目录 <code>/root/data/docker_data</code> 下，具体位置没有强制要求，但是每组配置都应放在一个单独的文件夹下</p></blockquote><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">mkdir</span> -p /root/data/docker_data/ts3  <span class="token comment"># 创建目录</span><span class="token builtin class-name">cd</span> /root/data/docker_data/ts3     <span class="token comment"># 切换当前目录</span></code></pre><p>新建 <code>docker-compose.yml</code> 文件，粘贴以下内容并保存，文件内容如下（<a href="https://hub.docker.com/_/teamspeak">官方镜像 (opens new window)</a>）：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># docker-compose.yml</span><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.1'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">teamspeak</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> teamspeak    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 9987<span class="token punctuation">:</span>9987/udp <span class="token comment"># 语音服务</span>      <span class="token punctuation">-</span> 30033<span class="token punctuation">:</span><span class="token number">30033</span>   <span class="token comment"># 文件传输</span>      <span class="token punctuation">-</span> 41144<span class="token punctuation">:</span><span class="token number">41144</span>   <span class="token comment"># DNS域名解析（可选）</span>      <span class="token punctuation">-</span> 10011<span class="token punctuation">:</span><span class="token number">10011</span>   <span class="token comment"># 服务器查询 raw（可选）</span>      <span class="token comment"># - 10022:10022   # 服务器查询 SSH（可选）</span>      <span class="token comment"># - 10080:10080   # 网络请求 http（可选）</span>      <span class="token comment"># - 10443:10443   # 网络请求 https（可选）</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/var/ts3server    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">TS3SERVER_DB_PLUGIN</span><span class="token punctuation">:</span> ts3db_mariadb      <span class="token key atrule">TS3SERVER_DB_SQLCREATEPATH</span><span class="token punctuation">:</span> create_mariadb      <span class="token key atrule">TS3SERVER_DB_HOST</span><span class="token punctuation">:</span> db      <span class="token key atrule">TS3SERVER_DB_USER</span><span class="token punctuation">:</span> root      <span class="token key atrule">TS3SERVER_DB_PASSWORD</span><span class="token punctuation">:</span> password <span class="token comment"># 数据库密码</span>      <span class="token key atrule">TS3SERVER_DB_NAME</span><span class="token punctuation">:</span> teamspeak      <span class="token key atrule">TS3SERVER_DB_WAITUNTILREADY</span><span class="token punctuation">:</span> <span class="token number">30</span>      <span class="token key atrule">TS3SERVER_LICENSE</span><span class="token punctuation">:</span> accept  <span class="token key atrule">db</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mariadb    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> password  <span class="token comment"># 数据库密码</span>      <span class="token key atrule">MYSQL_DATABASE</span><span class="token punctuation">:</span> teamspeak    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/mysql<span class="token punctuation">:</span>/var/lib/mysql  <span class="token comment"># 必需，否则重启镜像后数据丢失</span></code></pre><p>服务器上要使用 <code>vi/vim/nano</code> 编辑文件，如果没有，CentOS 系统使用 <code>yum install nano</code> 类似的指令安装</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># [新建文件]</span><span class="token function">vi</span> docker-compose.yml<span class="token comment"># 或</span><span class="token function">vim</span> docker-compose.yml<span class="token comment"># 或</span><span class="token function">nano</span> docker-compose.yml<span class="token comment"># [粘贴] ctrl+v 或 ctrl+shift+v 或 shift+insert</span><span class="token comment"># [保存] vi/vim: ESC :wq Enter</span><span class="token comment"># [保存] nano: ctrl+x</span></code></pre><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>确认当前在 <code>docker-compose.yml</code> 所在的目录，如 <code>cd /data/ts</code>：</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 启动服务</span>docker-compose up<span class="token comment"># 启动服务 一直运行 detach</span>docker-compose up -d<span class="token comment"># 关闭服务</span>docker-compose down<span class="token comment"># 重启服务</span>docker-compose restart</code></pre><p>用TS客户端连接服务器，会弹出对话框要求输入token，输入token后这个账号就是管理员了</p><ul><li><p>第一次启动时会弹出 <code>Server Query 管理员账号密码</code> 和 <code>token</code>，<strong>务必妥善保存</strong></p></li><li><p>第一次如果用 <code>docker-compose up -d</code> 启动，相关日志会保存在 <code>./data/logs</code> 下</p></li></ul><h2 id="开放规则"><a href="#开放规则" class="headerlink" title="开放规则"></a>开放规则</h2><p>云服务器的防火墙设置页添加如下入站规则：</p><ul><li>9987 UDP</li><li>30033 TCP</li><li>41144 TCP</li><li>10011 TCP</li></ul><p><a href="https://support.teamspeak.com/hc/en-us/articles/360002712257-Which-ports-does-the-TeamSpeak-3-server-use">ts官方的端口说明(opens new window)</a></p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><ol><li><p>添加一条 A 类型的规则，指向服务器 ip 地址。此处 <code>ts -&gt; xxx.xxx.xxx.xxx</code> 即解析域名 <code>ts.yct.ee</code>。</p></li><li><p>添加一条SRV类型的规则，如图所示：</p></li></ol><p><img src="https://easyimage.smitten.top/i/2023/02/13/qude21-0.png" alt="域名解析"></p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>客户端官网：<a href="https://teamspeak.com/zh-CN/">https://teamspeak.com/zh-CN/</a><br>汉化包：<a href="https://github.com/jitingcn/TS3-Translation_zh-CN/releases/latest">https://github.com/jitingcn/TS3-Translation_zh-CN/releases/latest</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Docker" scheme="https://www.smitten.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>整理一些常用的脚本（持续更新中）</title>
    <link href="https://www.smitten.top/posts/VPS.html"/>
    <id>https://www.smitten.top/posts/VPS.html</id>
    <published>2023-02-11T13:23:14.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="综合工具箱（强烈推荐，集成了很多脚本）"><a href="#综合工具箱（强烈推荐，集成了很多脚本）" class="headerlink" title="综合工具箱（强烈推荐，集成了很多脚本）"></a>综合工具箱（强烈推荐，集成了很多脚本）</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x box.sh <span class="token operator">&amp;&amp;</span> <span class="token function">clear</span> <span class="token operator">&amp;&amp;</span> ./box.sh</code></pre><h2 id="杜甫测试"><a href="#杜甫测试" class="headerlink" title="杜甫测试"></a>杜甫测试</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -q https://github.com/Aniverse/A/raw/i/a <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> a</code></pre><h2 id="DD-相关"><a href="#DD-相关" class="headerlink" title="DD 相关"></a>DD 相关</h2><h3 id="1、甲骨文-DD-脚本"><a href="#1、甲骨文-DD-脚本" class="headerlink" title="1、甲骨文 DD 脚本"></a>1、甲骨文 DD 脚本</h3><p>DD成Debian 10<br>&lt;!—hexoPostRenderEscape:<pre class="language-bash" data-language="bash"><code class="language-bash"> <span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">wget</span> —no-check-certificate -qO- <span class="token string">‘<a href="https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh">https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh</a>‘</span><span class="token punctuation">)</span> -d <span class="token number">10</span> -v <span class="token number">64</span> -p <span class="token string">“自定义root密码”</span> -port <span class="token string">“自定义ssh端口”</span><br><code>`&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;</code>&lt;/span&gt; </code></pre></p><p>DD成Ubuntu <span class="token number">20.04</span><br><span class="token variable">`</span>&lt;/span&gt;``bash<br><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">wget</span> —no-check-certificate -qO- <span class="token string">‘<a href="https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh">https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh</a>‘</span><span class="token punctuation">)</span> -u <span class="token number">20.04</span> -v <span class="token number">64</span> -p <span class="token string">“自定义root密码”</span> -port <span class="token string">“自定义ssh端口”</span>&lt;/code&gt;&lt;/pre&gt;:hexoPostRenderEscape—&gt;</p><h3 id="2、MoeClub脚本"><a href="#2、MoeClub脚本" class="headerlink" title="2、MoeClub脚本"></a>2、MoeClub脚本</h3><p><strong>重点推荐：</strong>  </p><p>时间：22/11/2021 15:21 萌咖更新脚本：  </p><p>1.新增对 Oracle AMD，Oracle ARM全面支持. 可支持从 Ubuntu, Oracle Linux 等系统网络重装.<br>2.更新 dd 镜像的基础系统版本.<br>3.移除对外部 wget 的依赖.<br>4.新增 -port 参数, 可更改默认SSH端口.<br>5.更新 内置的网络参数计算 逻辑.<br>6.更新 grub 配置文件定位逻辑, 可支持任意引导grub的系统.  </p><p>以下系统已通过测试(其他自测):<br>Debian: 9, 10, 11;<br>Ubuntu: 18.04, 20.04;<br>CentOS: 6.10;<br>以下平台已通过测试(其他自测):<br>Oracle、Do、Azure<br>&lt;!—hexoPostRenderEscape:<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">wget</span> —no-check-certificate -qO- <span class="token string">‘<a href="https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh">https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh</a>‘</span><span class="token punctuation">)</span> -d <span class="token number">10</span> -v <span class="token number">64</span> -p <span class="token string">“自定义root密码”</span> -port <span class="token string">“自定义ssh端口”</span><br><code>`&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;</code>&lt;/span&gt;  </code></pre></p><p>-d <span class="token number">10</span> -v <span class="token number">64</span><br>-d <span class="token number">9</span> -v <span class="token number">64</span><br>-u <span class="token number">20.04</span> -v <span class="token number">64</span><br>-u <span class="token number">18.04</span> -v <span class="token number">64</span>  </p><p>开机改密码脚本：  </p><p>开机改密：<br><span class="token variable">`</span>&lt;/span&gt;``bash<br><span class="token comment">#!/bin/bash  </span><br><span class="token builtin class-name">echo</span> root:Vicer <span class="token operator">|</span><span class="token function">sudo</span> chpasswd root<br><span class="token function">sudo</span> <span class="token function">sed</span> -i <span class="token string">‘s/^#\?PermitRootLogin.*/PermitRootLogin yes/g’</span> /etc/ssh/sshd_config<span class="token punctuation">;</span><br><span class="token function">sudo</span> <span class="token function">sed</span> -i <span class="token string">‘s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g’</span> /etc/ssh/sshd_config<span class="token punctuation">;</span><br><span class="token function">sudo</span> <span class="token function">reboot</span> &lt;/code&gt;&lt;/pre&gt;:hexoPostRenderEscape—&gt;</p><h3 id="3、另一位大佬的脚本"><a href="#3、另一位大佬的脚本" class="headerlink" title="3、另一位大佬的脚本"></a>3、另一位大佬的脚本</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> AutoReinstall.sh</code></pre><ul><li>CentOS 默认密码 Pwd@CentOS 其它系统 Pwd@Linux  </li><li>OpenVZ / LXC 架构系统不适用  </li></ul><p>来源： <a href="https://blog.hicasper.com/post/135.html">https://blog.hicasper.com/post/135.html</a> 参考： <a href="https://www.ydyno.com/archives/1245.html">https://www.ydyno.com/archives/1245.html</a> 感谢大佬的付出！  </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">wget</span> --no-check-certificate -qO- <span class="token string">'https://file.geekn.net/CNODnjau/InstallNET.sh'</span><span class="token punctuation">)</span> -d <span class="token number">11</span> -v <span class="token number">64</span> -a -firmware  </code></pre><p>-firmware 额外的驱动支持<br>-d 后面是系统版本号<br>-v 后面写64位 32位<br>-a （不清楚这个干啥的但是每个脚本都带）<br>–mirror 后面是镜像源地址  </p><p>-p 后面写自定义密码  </p><pre class="language-none"><code class="language-none">镜像站地址  官方给出的地址列表：https:&#x2F;&#x2F;www.debian.org&#x2F;mirror&#x2F;list  一些国内的  ftp.cn.debian.org  mirror.bjtu.edu.cn  mirror.lzu.edu.cn          mirror.nju.edu.cn          mirrors.163.com          mirrors.bfsu.edu.cn          mirrors.hit.edu.cn          mirrors.huaweicloud.com          mirror.sjtu.edu.cn          mirrors.tuna.tsinghua.edu.cn          mirrors.ustc.edu.cn          使用方法：（大致都是一样的）  清华源  --mirror &#39;https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F;&#39;  腾讯源  --mirror &#39;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F;&#39;  阿里源  --mirror &#39;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;debian&#x2F;&#39;  华为源  --mirror &#39;https:&#x2F;&#x2F;mirrors.huaweicloud.com&#x2F;debian&#x2F;&#39;  </code></pre><h3 id="4、秋水逸冰-Windows-2012-2016-2019-2022-10-11-DD-镜像"><a href="#4、秋水逸冰-Windows-2012-2016-2019-2022-10-11-DD-镜像" class="headerlink" title="4、秋水逸冰 Windows 2012/2016/2019/2022 10/11 DD 镜像"></a>4、秋水逸冰 Windows 2012/2016/2019/2022 10/11 DD 镜像</h3><p>适用于 UEFI 启动的多个 Windows 系统 DD 镜像：  </p><p><a href="https://teddysun.com/656.html">https://teddysun.com/656.html</a>  </p><p>分别是：  </p><ul><li>Windows Server 2012 R2 Datacenter</li><li>Windows Server 2016 Datacenter (build: 14393.5006) </li><li>Windows Server 2019 Datacenter (build: 17763.2686) </li><li>Windows Server 2022 Datacenter (build: 20348.587) </li><li>Windows 10 Enterprise LTSC (build: 19044.1288) </li><li>Windows 11 Pro for Workstations 21H2 (build: 22000.194)</li></ul><p>适用于 BIOS 启动的 Windows Server 2022 Datacenter DD 镜像：  </p><p><a href="https://teddysun.com/629.html">https://teddysun.com/629.html</a>  </p><p>适用于 BIOS 启动的 Windows 11 Pro for Workstations 21H2 DD 镜像：  </p><p><a href="https://teddysun.com/642.html">https://teddysun.com/642.html</a>  </p><p>适用于 BIOS 启动的 Windows 10 Enterprise LTSC DD 镜像：  </p><p><a href="https://teddysun.com/640.html">https://teddysun.com/640.html</a>  </p><p>适用于 BIOS 启动的 Windows Server 2019/2016/2012R2 Datacenter DD 镜像：  </p><p><a href="https://teddysun.com/545.html">https://teddysun.com/545.html</a>  </p><p>分别是：  </p><ul><li>Windows Server 2019 Datacenter（Build: 17763.2686）</li><li>Windows Server 2016 Datacenter（Build: 14393.5006）</li><li>Windows Server 2012 R2 Datacenter</li></ul><h2 id="测试相关"><a href="#测试相关" class="headerlink" title="测试相关"></a>测试相关</h2><h3 id="机器测试"><a href="#机器测试" class="headerlink" title="机器测试"></a>机器测试</h3><h4 id="单线程测试"><a href="#单线程测试" class="headerlink" title="单线程测试"></a>单线程测试</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -Lso- https://bench.im/hyperspeed<span class="token punctuation">)</span> </code></pre><h4 id="最全测速脚本"><a href="#最全测速脚本" class="headerlink" title="最全测速脚本"></a>最全测速脚本</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -fsL https://ilemonra.in/LemonBenchIntl <span class="token operator">|</span> <span class="token function">bash</span> -s fast  </code></pre><h4 id="superbench"><a href="#superbench" class="headerlink" title="superbench"></a>superbench</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -qO- git.io/superbench.sh <span class="token operator">|</span> <span class="token function">bash</span>  </code></pre><h4 id="Bench-sh"><a href="#Bench-sh" class="headerlink" title="Bench.sh"></a>Bench.sh</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -qO- bench.sh <span class="token operator">|</span> <span class="token function">bash</span>  </code></pre><h3 id="速度测试"><a href="#速度测试" class="headerlink" title="速度测试"></a>速度测试</h3><h4 id="显示延迟、抖动"><a href="#显示延迟、抖动" class="headerlink" title="显示延迟、抖动"></a>显示延迟、抖动</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">wget</span> -qO- https://bench.im/hyperspeed<span class="token punctuation">)</span></code></pre><h4 id="直接显示回程线路"><a href="#直接显示回程线路" class="headerlink" title="直接显示回程线路"></a>直接显示回程线路</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> https://raw.githubusercontent.com/zhucaidan/mtr_trace/main/mtr_trace.sh<span class="token operator">|</span><span class="token function">bash</span> </code></pre><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -q route.f2k.pub -O route <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> route  </code></pre><pre class="language-none"><code class="language-none">&#x2F;&#x2F;第一个  wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;nanqinlang-script&#x2F;testrace&#x2F;master&#x2F;testrace.sh  bash testrace.sh  &#x2F;&#x2F;第二个  wget -qO- git.io&#x2F;besttrace | bash  </code></pre><h4 id="四网测速"><a href="#四网测速" class="headerlink" title="四网测速"></a>四网测速</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -O jcnf.sh https://raw.githubusercontent.com/Netflixxp/jcnfbesttrace/main/jcnf.sh<span class="token function">bash</span> jcnf.sh  </code></pre><h4 id="三网测速"><a href="#三网测速" class="headerlink" title="三网测速"></a>三网测速</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -Lso- https://git.io/superspeed_uxh<span class="token punctuation">)</span>  </code></pre><p>带快速四网测试版本：<br><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -Lso- https://dl.233.mba/d/sh/speedtest.sh<span class="token punctuation">)</span></code></pre></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -Lso- https://git.io/J1SEh<span class="token punctuation">)</span>  </code></pre><p>带综合测试的版本（CPU信息、Geekbench等）：<br><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">wget</span> --no-check-certificate -O- https://dl.233.mba/d/sh/superbenchpro.sh<span class="token punctuation">)</span></code></pre></p><p>来源: <a href="https://www.wrnxr.cn/163.html">https://www.wrnxr.cn/163.html</a>  </p><h2 id="测试25端口是否开放"><a href="#测试25端口是否开放" class="headerlink" title="测试25端口是否开放"></a>测试25端口是否开放</h2><pre class="language-bash" data-language="bash"><code class="language-bash">telnet smtp.aol.com <span class="token number">25</span> </code></pre><h2 id="测试IPv4优先还是IPv6优先"><a href="#测试IPv4优先还是IPv6优先" class="headerlink" title="测试IPv4优先还是IPv6优先"></a>测试IPv4优先还是IPv6优先</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> ip.p3terx.com</code></pre><h2 id="流媒体测试"><a href="#流媒体测试" class="headerlink" title="流媒体测试"></a>流媒体测试</h2><h3 id="全媒体测试"><a href="#全媒体测试" class="headerlink" title="全媒体测试"></a>全媒体测试</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh<span class="token punctuation">)</span></code></pre><h3 id="奈飞测试"><a href="#奈飞测试" class="headerlink" title="奈飞测试"></a>奈飞测试</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.5/nf_2.5_linux_amd64 <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x nf <span class="token operator">&amp;&amp;</span> <span class="token function">clear</span> <span class="token operator">&amp;&amp;</span> ./nf  </code></pre><pre class="language-none"><code class="language-none">&#x2F;&#x2F;第一个  bash &lt;(curl -L -s https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;lmc999&#x2F;RegionRestrictionCheck&#x2F;main&#x2F;check.sh)  &#x2F;&#x2F;第二个  bash &lt;(curl -sSL &quot;https:&#x2F;&#x2F;github.com&#x2F;CoiaPrant&#x2F;MediaUnlock_Test&#x2F;raw&#x2F;main&#x2F;check.sh&quot;)  </code></pre><h2 id="WARP"><a href="#WARP" class="headerlink" title="WARP"></a>WARP</h2><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -N --no-check-certificate https://cdn.jsdelivr.net/gh/YG-tsj/CFWarp-Pro/multi.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x multi.sh <span class="token operator">&amp;&amp;</span> ./multi.sh  </code></pre><p>之后进入脚本快捷方式为 bash multi.sh  </p><h2 id="服务器时间"><a href="#服务器时间" class="headerlink" title="服务器时间"></a>服务器时间</h2><h3 id="CentOS-同步时间"><a href="#CentOS-同步时间" class="headerlink" title="CentOS 同步时间"></a>CentOS 同步时间</h3><pre class="language-bash" data-language="bash"><code class="language-bash">yum -y <span class="token function">install</span> ntpdate  timedatectl set-timezone Asia/Shanghai  ntpdate ntp1.aliyun.com </code></pre><h2 id="BBR"><a href="#BBR" class="headerlink" title="BBR"></a>BBR</h2><h3 id="CentOS-7-BBR"><a href="#CentOS-7-BBR" class="headerlink" title="CentOS 7 BBR"></a>CentOS 7 BBR</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -N --no-check-certificate <span class="token string">"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x tcp.sh <span class="token operator">&amp;&amp;</span> ./tcp.sh </code></pre><h3 id="一键开启BBR"><a href="#一键开启BBR" class="headerlink" title="一键开启BBR"></a>一键开启BBR</h3><p>注意：需要Linux Kernel 内核升级到 4.9 及以上版本可以实现 BBR 加速  </p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">uname</span> -srm</code></pre><p>输出结果：  </p><pre class="language-none"><code class="language-none">Linux 3.10.0-957.12.2.el7.x86_64 x86_64  3 - 内核版本.  10 - 主修订版本.  0-957 - 次要修订版本.  12 - 补丁版本.  </code></pre><p>一般来说，Ubuntu18.04以上就可以(默认的内核4.15)<br>&lt;!—hexoPostRenderEscape:<pre class="language-none"><code class="language-none">echo &quot;net.core.default_qdisc&#x3D;fq&quot; &gt;&gt; &#x2F;etc&#x2F;sysctl.conf<br>echo &quot;net.ipv4.tcp_congestion_control&#x3D;bbr&quot; &gt;&gt; &#x2F;etc&#x2F;sysctl.conf  </code></pre></p><p>sysctl -p  </p><p>sysctl net.ipv4.tcp_available_congestion_control  </p><p>lsmod | grep bbr  &lt;/code&gt;&lt;/pre&gt;:hexoPostRenderEscape—&gt;</p><h2 id="Docker相关"><a href="#Docker相关" class="headerlink" title="Docker相关"></a>Docker相关</h2><h3 id="更新、安装必备软件"><a href="#更新、安装必备软件" class="headerlink" title="更新、安装必备软件"></a>更新、安装必备软件</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y <span class="token function">wget</span> <span class="token function">vim</span>  </code></pre><h3 id="海外服务器"><a href="#海外服务器" class="headerlink" title="海外服务器"></a>海外服务器</h3><h4 id="非大陆Docker安装"><a href="#非大陆Docker安装" class="headerlink" title="非大陆Docker安装"></a>非大陆Docker安装</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -qO- get.docker.com <span class="token operator">|</span> <span class="token function">bash</span>  </code></pre><h4 id="卸载Docker"><a href="#卸载Docker" class="headerlink" title="卸载Docker"></a>卸载Docker</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> purge docker-ce docker-ce-cli containerd.io  <span class="token function">sudo</span> <span class="token function">rm</span> -rf /var/lib/docker  <span class="token function">sudo</span> <span class="token function">rm</span> -rf /var/lib/containerd  </code></pre><h4 id="非大陆Docker-compose安装"><a href="#非大陆Docker-compose安装" class="headerlink" title="非大陆Docker-compose安装"></a>非大陆Docker-compose安装</h4><pre class="language-bash" data-language="bash"><code class="language-bash"> <span class="token function">sudo</span> <span class="token function">curl</span> -L <span class="token string">"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -s<span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -m<span class="token variable">)</span></span>"</span> -o /usr/local/bin/docker-compose  <span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose </code></pre><p>查看版本<br><pre class="language-bash" data-language="bash"><code class="language-bash">docker-compose --version </code></pre></p><h3 id="大陆服务器"><a href="#大陆服务器" class="headerlink" title="大陆服务器"></a>大陆服务器</h3><h4 id="国内机安装docker"><a href="#国内机安装docker" class="headerlink" title="国内机安装docker"></a>国内机安装docker</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -sSL https://get.daocloud.io/docker <span class="token operator">|</span> <span class="token function">sh</span> </code></pre><h4 id="国内机安装docker-compose"><a href="#国内机安装docker-compose" class="headerlink" title="国内机安装docker-compose"></a>国内机安装docker-compose</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -L https://get.daocloud.io/docker/compose/releases/download/v2.1.1/docker-compose-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> -s<span class="token variable">`</span></span>-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> -m<span class="token variable">`</span></span> <span class="token operator">></span> /usr/local/bin/docker-compose  <span class="token function">chmod</span> +x /usr/local/bin/docker-compose</code></pre><h4 id="卸载docker"><a href="#卸载docker" class="headerlink" title="卸载docker"></a>卸载docker</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> remove docker docker-engine  <span class="token function">rm</span> -fr /var/lib/docker/ </code></pre><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><h3 id="CentOS-关闭防火墙"><a href="#CentOS-关闭防火墙" class="headerlink" title="CentOS 关闭防火墙"></a>CentOS 关闭防火墙</h3><pre class="language-bash" data-language="bash"><code class="language-bash">systemctl start supervisord  systemctl disable firewalld  systemctl stop firewalld </code></pre><h2 id="呆梨相关"><a href="#呆梨相关" class="headerlink" title="呆梨相关"></a>呆梨相关</h2><h3 id="XUI"><a href="#XUI" class="headerlink" title="XUI"></a>XUI</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -Ls https://raw.githubusercontent.com/sprov065/x-ui/master/install.sh<span class="token punctuation">)</span> <span class="token number">0.2</span>.0 </code></pre><h3 id="mack-a"><a href="#mack-a" class="headerlink" title="mack-a"></a>mack-a</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -P /root -N --no-check-certificate <span class="token string">"https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> <span class="token number">700</span> /root/install.sh <span class="token operator">&amp;&amp;</span> /root/install.sh </code></pre><p>持续更新中</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="VPS" scheme="https://www.smitten.top/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>五分钟搭建个人资源库</title>
    <link href="https://www.smitten.top/posts/AList.html"/>
    <id>https://www.smitten.top/posts/AList.html</id>
    <published>2023-01-24T21:32:14.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="关于-Alist"><a href="#关于-Alist" class="headerlink" title="关于 Alist"></a>关于 Alist</h1><p>一个支持多种存储的文件列表程序，使用 Gin 和 Solidjs。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>仅适用于 Linux amd64/arm64 平台。</p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -fsSL <span class="token string">"https://alist.nn.ci/v3.sh"</span> <span class="token operator">|</span> <span class="token function">bash</span> -s <span class="token function">install</span></code></pre><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -fsSL <span class="token string">"https://alist.nn.ci/v3.sh"</span> <span class="token operator">|</span> <span class="token function">bash</span> -s update</code></pre><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -fsSL <span class="token string">"https://alist.nn.ci/v3.sh"</span> <span class="token operator">|</span> <span class="token function">bash</span> -s uninstall</code></pre><h2 id="自定义路径"><a href="#自定义路径" class="headerlink" title="自定义路径"></a>自定义路径</h2><p>默认安装在 <code>/opt/alist</code> 中。 自定义安装路径，将安装路径作为第二个参数添加，必须是绝对路径（如果路径以 alist 结尾，则直接安装到给定路径，否则会安装在给定路径 alist 目录下），如 安装到 <code>/root</code>：</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># Install</span><span class="token function">curl</span> -fsSL <span class="token string">"https://alist.nn.ci/v3.sh"</span> <span class="token operator">|</span> <span class="token function">bash</span> -s <span class="token function">install</span> /root<span class="token comment"># update</span><span class="token function">curl</span> -fsSL <span class="token string">"https://alist.nn.ci/v3.sh"</span> <span class="token operator">|</span> <span class="token function">bash</span> -s update /root<span class="token comment"># Uninstall</span><span class="token function">curl</span> -fsSL <span class="token string">"https://alist.nn.ci/v3.sh"</span> <span class="token operator">|</span> <span class="token function">bash</span> -s uninstall /root</code></pre><ul><li>启动: <code>systemctl start alist</code></li><li>关闭: <code>systemctl stop alist</code></li><li>状态: <code>systemctl status alist</code></li><li>重启: <code>systemctl restart alist</code></li></ul><h1 id="简单设置"><a href="#简单设置" class="headerlink" title="简单设置"></a>简单设置</h1><p>若是服务器先在服务器中开放 5244 端口，在浏览器中访问服务器 ip：5244 即可打开 Alist，在服务器终端中进入 <code>/opt/alist</code> 中输入 <code>./alist admin</code> 即可查看默认后台管理员账号密码</p><h2 id="挂载资源"><a href="#挂载资源" class="headerlink" title="挂载资源"></a>挂载资源</h2><p>Alist 支持绝大多数的网盘挂在以及本地挂载，详情参考 <a href="[Home | AList文档 (nn.ci">Alist 官方中文文档</a>](<a href="https://alist.nn.ci/zh/">https://alist.nn.ci/zh/</a>))</p><h2 id="搞定"><a href="#搞定" class="headerlink" title="搞定"></a>搞定</h2><p><img src="https://easyimage.smitten.top/i/2023/01/26/zcydwq-0.png" alt="效果图"></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="AList" scheme="https://www.smitten.top/tags/AList/"/>
    
  </entry>
  
  <entry>
    <title>使Windows  Terminal变得更易用</title>
    <link href="https://www.smitten.top/posts/wt.html"/>
    <id>https://www.smitten.top/posts/wt.html</id>
    <published>2023-01-08T21:38:14.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="使Windows-Terminal变得更易用"><a href="#使Windows-Terminal变得更易用" class="headerlink" title="使Windows  Terminal变得更易用"></a>使Windows  Terminal变得更易用</h1><h2 id="1-个性化美化"><a href="#1-个性化美化" class="headerlink" title="1.个性化美化"></a>1.个性化美化</h2><p>在wt(Windows  Terminal)设置面板中打开json文件，然后找到<code>defaults</code>关键字并在后面花括号里追加以下代码：</p><pre class="language-none"><code class="language-none">亚克力毛玻璃效果&quot;useAcrylic&quot;: true, 亚克力毛玻璃效果透明度&quot;acrylicOpacity&quot;: 0.2,背景壁纸&quot;backgroundImage&quot;: &quot;C:&#x2F;Users&#x2F;YangChentao&#x2F;Pictures&#x2F;Saved Pictures&#x2F;wt.jpeg&quot;, 背景壁纸透明度&quot;backgroundImageOpacity&quot;: 0.4,&quot;fontFace&quot;: &quot;JetBrainsMono Nerd Font Mono&quot;,&quot;fontSize&quot;: 14</code></pre><h2 id="2-oh-my-push"><a href="#2-oh-my-push" class="headerlink" title="2.oh-my-push"></a>2.oh-my-push</h2><p>微软商店下载oh-my-push</p><p>下载安装完成后会自动配置；</p><p>此时在wt里输入<code>code $PROFILE</code>用vscode打开该配置文件，打开后添加以下代码：</p><pre class="language-none"><code class="language-none">oh-my-posh init pwsh --config $env:POSH_THEMES_PATH\montys.omp.json | Invoke-Expressioncls</code></pre><p><code>cls</code>为清屏启动项。</p><h2 id="3-安装Nerd字体解决oh-my-push字体图标不显示"><a href="#3-安装Nerd字体解决oh-my-push字体图标不显示" class="headerlink" title="3.安装Nerd字体解决oh-my-push字体图标不显示"></a>3.安装Nerd字体解决oh-my-push字体图标不显示</h2><p>推荐JetBrains Mono Medium Nerd Font Complete Mono 字体</p><p>下载安装并在wt配置文件中更改</p><h2 id="4-解决ssh连接长时间不操作自动断开"><a href="#4-解决ssh连接长时间不操作自动断开" class="headerlink" title="4.解决ssh连接长时间不操作自动断开"></a>4.解决ssh连接长时间不操作自动断开</h2><p>在C:\Users\用户名\ .ssh\config 文件中添加如下代码（没有这个文件自己建一个）：</p><pre class="language-none"><code class="language-none">Host *  ServerAliveInterval 40</code></pre><h2 id="5-启动专注模式让你的-WT-更具逼格"><a href="#5-启动专注模式让你的-WT-更具逼格" class="headerlink" title="5.启动专注模式让你的 WT 更具逼格"></a>5.启动专注模式让你的 WT 更具逼格</h2><p><img src="https://easyimage.smitten.top/i/2023/02/11/lzj6pq-0.png" alt="专注模式"> </p><h2 id="6-去掉烦人的启动版权信息并默认管理员启动"><a href="#6-去掉烦人的启动版权信息并默认管理员启动" class="headerlink" title="6.去掉烦人的启动版权信息并默认管理员启动"></a>6.去掉烦人的启动版权信息并默认管理员启动</h2><p>在 powershell 启动命令行末尾加上 <code>-nologe</code> 即可<br><img src="https://easyimage.smitten.top/i/2023/02/11/m1yvcp-0.png" alt="版权信息"></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    <category term="技术" scheme="https://www.smitten.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="美化效率" scheme="https://www.smitten.top/tags/%E7%BE%8E%E5%8C%96%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>共勉</title>
    <link href="https://www.smitten.top/posts/encourage.html"/>
    <id>https://www.smitten.top/posts/encourage.html</id>
    <published>2023-01-08T21:38:14.000Z</published>
    <updated>2023-04-07T11:49:55.029Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="共勉"><a href="#共勉" class="headerlink" title="共勉"></a>共勉</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>技术：尽一切手段维护信息自由</li><li>玄学：尽一切手段促进灵性觉醒</li><li>把妹：尽一切手段维护男性权益</li><li>网赚：尽一切手段打造自动赚钱机器</li><li>文创：尽一切手段维护创作自由</li></ul><h2 id="超级个体技能树"><a href="#超级个体技能树" class="headerlink" title="超级个体技能树"></a>超级个体技能树</h2><ol><li>软件开发和游戏制作</li><li>逆向、密码学和游戏辅助</li><li>ai辅助创作（文字、音频、绘画、视频）</li><li>电商运营</li><li>算法交易</li><li>社会工程及两性心理学</li><li>神秘学</li></ol><h2 id="八大原则"><a href="#八大原则" class="headerlink" title="八大原则"></a>八大原则</h2><ul><li>性价比：在不牺牲体验的情况下，选择最便宜的，就是性价比。允许花时间省钱，只要省下来的钱按照市价高于时薪就能接受。</li><li>冗余：一、预估时间的时候，将极限时间x2就是最终时间（侯世达定律）。二、重要资料做好备份，本地至少两份在不同介质上。</li><li>标准化/流程化/自动化/智能化（IT 四化）：标准化是流程化的前提，流程化有助于外包，它是成功人士的唯一一个习惯。流程化也有助于自动化，即用机器解决问题。程序员的美德，就是能自动绝不手动。一个低级重复行为居然要手动，你好意思称自己是程序员嘛？</li><li>第一性原理：完成一个目标只有少数几个必要条件。只需要专注他们，不要总是有奇奇怪怪的无效假设。不要被乌合之众的观点/做法绑架。</li><li>热插拔：保证自己是个独立完整的系统，与别人合作但不依赖别人。优先磨练自己的议价能力而不是协作能力来增加选择面，保证自己可以随时中止合作关系，防止受限于任何人。遇到问题优先考虑终止合作并换人，而不是改善合作关系。</li><li>专注、迭代、极致：一次只专注于一件事情，允许不足，在多个迭代中反复改进，尽可能达到极致。</li><li>大数据：（1）大数据不仅仅指数字和表格本身，也包含情报，经验，教程，方法论这些非结构化数据。（2）收集数据来遍历每一种可能性，对抗不确定性，避免认知偏差，好处是无需亲身实践直接借助他人经验。（3）注意收集你暂时用不到，但是大家都需要的数据，并且改造你的存储设施来存的下更多数据。</li><li>跨界：用数字化改造一切，程序员的使命就是先消灭其它行业再消灭自身。</li></ul><h2 id="语录"><a href="#语录" class="headerlink" title="语录"></a>语录</h2><blockquote><p>渣男除了渣没其他缺点，舔狗除了舔没其他优点。</p><p>既然我们做什么都会被喷，<strong><strong><strong><em>__</em></strong></strong></strong>。</p><p>搞钱的大原则就是信息不对称</p><p>风口可能有很多个，但是对应的技术可能就那么点，所以，尽早储备一个通用的技术栈。</p><p>资本家为了奴役你给你挖了很多坑，比如消费主义，比如训练你当螺丝钉，还有最重要的就是榨干你的空闲时间。</p><p>打工的钱都是棺材费，自己从市场赚的才叫钱。尽早摆脱打工人的困境比啥都重要。</p><p>一旦你的成本很低，时间就是你的朋友，否则就是你的敌人。这好比一颗树，只要根不死，总能活过来。</p><p>在体验一样的情况下，选成本低的，但不要为此牺牲体验</p><p>如果花在开源上的时间和刷牙洗脸一样，那么可持续性就不是问题。</p><p>宣传应当是你的产品的不可分割的一部分，它和内容同等重要，并且可以借助技术做得更好。五分内容五分宣传，这就是五五开定律。</p></blockquote>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    <category term="随笔" scheme="https://www.smitten.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="https://www.smitten.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
